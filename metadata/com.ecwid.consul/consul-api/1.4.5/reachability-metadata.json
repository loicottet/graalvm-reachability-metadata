{
  "reflection": [
    {
      "condition": {
        "typeReached": "com.ecwid.consul.v1.ConsulClient"
      },
      "type": "com.ecwid.consul.ConsulException",
      "allDeclaredConstructors": true
    },
    {
      "condition": {
        "typeReached": "com.ecwid.consul.v1.ConsulClient"
      },
      "type": "com.ecwid.consul.ConsulRequest"
    },
    {
      "condition": {
        "typeReached": "com.ecwid.consul.v1.ConsulClient"
      },
      "type": "com.ecwid.consul.SingleUrlParameters",
      "allDeclaredFields": true,
      "allDeclaredConstructors": true
    },
    {
      "condition": {
        "typeReached": "com.ecwid.consul.v1.ConsulClient"
      },
      "type": "com.ecwid.consul.UrlParameters"
    },
    {
      "condition": {
        "typeReached": "com.ecwid.consul.v1.ConsulClient"
      },
      "type": "com.ecwid.consul.transport.AbstractHttpTransport"
    },
    {
      "condition": {
        "typeReached": "com.ecwid.consul.v1.ConsulClient"
      },
      "type": "com.ecwid.consul.transport.HttpResponse",
      "allDeclaredFields": true,
      "allDeclaredConstructors": true
    },
    {
      "condition": {
        "typeReached": "com.ecwid.consul.v1.ConsulClient"
      },
      "type": "com.ecwid.consul.v1.ConsistencyMode",
      "allDeclaredFields": true,
      "allDeclaredConstructors": true
    },
    {
      "condition": {
        "typeReached": "com.ecwid.consul.v1.ConsulClient"
      },
      "type": "com.ecwid.consul.v1.ConsulClient"
    },
    {
      "condition": {
        "typeReached": "com.ecwid.consul.v1.ConsulClient"
      },
      "type": "com.ecwid.consul.v1.ConsulRawClient"
    },
    {
      "condition": {
        "typeReached": "com.ecwid.consul.v1.ConsulClient"
      },
      "type": "com.ecwid.consul.v1.NodeMetaParameters",
      "allDeclaredFields": true,
      "allDeclaredConstructors": true
    },
    {
      "condition": {
        "typeReached": "com.ecwid.consul.v1.ConsulClient"
      },
      "type": "com.ecwid.consul.v1.OperationException",
      "allDeclaredFields": true,
      "allDeclaredConstructors": true
    },
    {
      "condition": {
        "typeReached": "com.ecwid.consul.v1.ConsulClient"
      },
      "type": "com.ecwid.consul.v1.QueryParams",
      "allDeclaredFields": true,
      "allDeclaredConstructors": true
    },
    {
      "condition": {
        "typeReached": "com.ecwid.consul.v1.ConsulClient"
      },
      "type": "com.ecwid.consul.v1.Request",
      "allDeclaredFields": true,
      "allDeclaredConstructors": true
    },
    {
      "condition": {
        "typeReached": "com.ecwid.consul.v1.ConsulClient"
      },
      "type": "com.ecwid.consul.v1.Response",
      "allDeclaredFields": true,
      "allDeclaredConstructors": true
    },
    {
      "condition": {
        "typeReached": "com.ecwid.consul.v1.ConsulClient"
      },
      "type": "com.ecwid.consul.v1.TagsParameters",
      "allDeclaredFields": true,
      "allDeclaredConstructors": true
    },
    {
      "condition": {
        "typeReached": "com.ecwid.consul.v1.ConsulClient"
      },
      "type": "com.ecwid.consul.v1.acl.AclClient"
    },
    {
      "condition": {
        "typeReached": "com.ecwid.consul.v1.ConsulClient"
      },
      "type": "com.ecwid.consul.v1.acl.model.Acl",
      "allDeclaredFields": true,
      "allDeclaredConstructors": true
    },
    {
      "condition": {
        "typeReached": "com.ecwid.consul.v1.ConsulClient"
      },
      "type": "com.ecwid.consul.v1.acl.model.AclType",
      "allDeclaredFields": true,
      "allDeclaredConstructors": true
    },
    {
      "condition": {
        "typeReached": "com.ecwid.consul.v1.ConsulClient"
      },
      "type": "com.ecwid.consul.v1.acl.model.NewAcl",
      "allDeclaredFields": true,
      "allDeclaredConstructors": true
    },
    {
      "condition": {
        "typeReached": "com.ecwid.consul.v1.ConsulClient"
      },
      "type": "com.ecwid.consul.v1.acl.model.UpdateAcl",
      "allDeclaredFields": true,
      "allDeclaredConstructors": true
    },
    {
      "condition": {
        "typeReached": "com.ecwid.consul.v1.ConsulClient"
      },
      "type": "com.ecwid.consul.v1.agent.AgentClient"
    },
    {
      "condition": {
        "typeReached": "com.ecwid.consul.v1.ConsulClient"
      },
      "type": "com.ecwid.consul.v1.agent.AgentConsulClient"
    },
    {
      "condition": {
        "typeReached": "com.ecwid.consul.v1.ConsulClient"
      },
      "type": "com.ecwid.consul.v1.agent.model.Check",
      "allDeclaredFields": true,
      "allDeclaredConstructors": true
    },
    {
      "condition": {
        "typeReached": "com.ecwid.consul.v1.ConsulClient"
      },
      "type": "com.ecwid.consul.v1.agent.model.Check$CheckStatus",
      "allDeclaredFields": true,
      "allDeclaredConstructors": true
    },
    {
      "condition": {
        "typeReached": "com.ecwid.consul.v1.ConsulClient"
      },
      "type": "com.ecwid.consul.v1.agent.model.Member",
      "allDeclaredFields": true,
      "allDeclaredConstructors": true
    },
    {
      "condition": {
        "typeReached": "com.ecwid.consul.v1.ConsulClient"
      },
      "type": "com.ecwid.consul.v1.agent.model.NewCheck",
      "allDeclaredFields": true,
      "allDeclaredConstructors": true
    },
    {
      "condition": {
        "typeReached": "com.ecwid.consul.v1.ConsulClient"
      },
      "type": "com.ecwid.consul.v1.agent.model.NewService",
      "allDeclaredFields": true,
      "allDeclaredConstructors": true
    },
    {
      "condition": {
        "typeReached": "com.ecwid.consul.v1.ConsulClient"
      },
      "type": "com.ecwid.consul.v1.agent.model.Self",
      "allDeclaredFields": true,
      "allDeclaredConstructors": true
    },
    {
      "condition": {
        "typeReached": "com.ecwid.consul.v1.ConsulClient"
      },
      "type": "com.ecwid.consul.v1.agent.model.Service",
      "allDeclaredFields": true,
      "allDeclaredConstructors": true
    },
    {
      "condition": {
        "typeReached": "com.ecwid.consul.v1.ConsulClient"
      },
      "type": "com.ecwid.consul.v1.catalog.CatalogClient"
    },
    {
      "condition": {
        "typeReached": "com.ecwid.consul.v1.ConsulClient"
      },
      "type": "com.ecwid.consul.v1.catalog.CatalogConsulClient"
    },
    {
      "condition": {
        "typeReached": "com.ecwid.consul.v1.ConsulClient"
      },
      "type": "com.ecwid.consul.v1.catalog.CatalogNodesRequest",
      "allDeclaredFields": true,
      "allDeclaredConstructors": true
    },
    {
      "condition": {
        "typeReached": "com.ecwid.consul.v1.ConsulClient"
      },
      "type": "com.ecwid.consul.v1.catalog.CatalogServiceRequest",
      "allDeclaredFields": true,
      "allDeclaredConstructors": true
    },
    {
      "condition": {
        "typeReached": "com.ecwid.consul.v1.ConsulClient"
      },
      "type": "com.ecwid.consul.v1.catalog.CatalogServicesRequest",
      "allDeclaredFields": true,
      "allDeclaredConstructors": true
    },
    {
      "condition": {
        "typeReached": "com.ecwid.consul.v1.ConsulClient"
      },
      "type": "com.ecwid.consul.v1.catalog.model.CatalogDeregistration",
      "allDeclaredFields": true,
      "allDeclaredConstructors": true
    },
    {
      "condition": {
        "typeReached": "com.ecwid.consul.v1.ConsulClient"
      },
      "type": "com.ecwid.consul.v1.catalog.model.CatalogNode",
      "allDeclaredFields": true,
      "allDeclaredConstructors": true
    },
    {
      "condition": {
        "typeReached": "com.ecwid.consul.v1.ConsulClient"
      },
      "type": "com.ecwid.consul.v1.catalog.model.CatalogRegistration",
      "allDeclaredFields": true,
      "allDeclaredConstructors": true
    },
    {
      "condition": {
        "typeReached": "com.ecwid.consul.v1.ConsulClient"
      },
      "type": "com.ecwid.consul.v1.catalog.model.CatalogRegistration$CheckStatus",
      "allDeclaredFields": true,
      "allDeclaredConstructors": true
    },
    {
      "condition": {
        "typeReached": "com.ecwid.consul.v1.ConsulClient"
      },
      "type": "com.ecwid.consul.v1.catalog.model.CatalogRegistration$Service",
      "allDeclaredFields": true,
      "allDeclaredConstructors": true
    },
    {
      "condition": {
        "typeReached": "com.ecwid.consul.v1.ConsulClient"
      },
      "type": "com.ecwid.consul.v1.catalog.model.CatalogService",
      "allDeclaredFields": true,
      "allDeclaredConstructors": true
    },
    {
      "condition": {
        "typeReached": "com.ecwid.consul.v1.ConsulClient"
      },
      "type": "com.ecwid.consul.v1.catalog.model.Node",
      "allDeclaredFields": true,
      "allDeclaredConstructors": true
    },
    {
      "condition": {
        "typeReached": "com.ecwid.consul.v1.ConsulClient"
      },
      "type": "com.ecwid.consul.v1.catalog.model.WriteRequest",
      "allDeclaredFields": true,
      "allDeclaredConstructors": true
    },
    {
      "condition": {
        "typeReached": "com.ecwid.consul.v1.ConsulClient"
      },
      "type": "com.ecwid.consul.v1.coordinate.CoordinateClient"
    },
    {
      "condition": {
        "typeReached": "com.ecwid.consul.v1.ConsulClient"
      },
      "type": "com.ecwid.consul.v1.coordinate.CoordinateConsulClient",
      "allDeclaredFields": true,
      "allDeclaredConstructors": true
    },
    {
      "condition": {
        "typeReached": "com.ecwid.consul.v1.ConsulClient"
      },
      "type": "com.ecwid.consul.v1.coordinate.model.Coord",
      "allDeclaredFields": true,
      "allDeclaredConstructors": true
    },
    {
      "condition": {
        "typeReached": "com.ecwid.consul.v1.ConsulClient"
      },
      "type": "com.ecwid.consul.v1.coordinate.model.Datacenter",
      "allDeclaredFields": true,
      "allDeclaredConstructors": true
    },
    {
      "condition": {
        "typeReached": "com.ecwid.consul.v1.ConsulClient"
      },
      "type": "com.ecwid.consul.v1.coordinate.model.Node",
      "allDeclaredFields": true,
      "allDeclaredConstructors": true
    },
    {
      "condition": {
        "typeReached": "com.ecwid.consul.v1.ConsulClient"
      },
      "type": "com.ecwid.consul.v1.event.EventClient"
    },
    {
      "condition": {
        "typeReached": "com.ecwid.consul.v1.ConsulClient"
      },
      "type": "com.ecwid.consul.v1.event.EventConsulClient",
      "allDeclaredFields": true,
      "allDeclaredConstructors": true
    },
    {
      "condition": {
        "typeReached": "com.ecwid.consul.v1.ConsulClient"
      },
      "type": "com.ecwid.consul.v1.event.EventListRequest",
      "allDeclaredFields": true,
      "allDeclaredConstructors": true
    },
    {
      "condition": {
        "typeReached": "com.ecwid.consul.v1.ConsulClient"
      },
      "type": "com.ecwid.consul.v1.event.model.Event",
      "allDeclaredFields": true,
      "allDeclaredConstructors": true
    },
    {
      "condition": {
        "typeReached": "com.ecwid.consul.v1.ConsulClient"
      },
      "type": "com.ecwid.consul.v1.event.model.EventParams",
      "allDeclaredFields": true,
      "allDeclaredConstructors": true
    },
    {
      "condition": {
        "typeReached": "com.ecwid.consul.v1.ConsulClient"
      },
      "type": "com.ecwid.consul.v1.health.HealthChecksForServiceRequest",
      "allDeclaredFields": true,
      "allDeclaredConstructors": true
    },
    {
      "condition": {
        "typeReached": "com.ecwid.consul.v1.ConsulClient"
      },
      "type": "com.ecwid.consul.v1.health.HealthClient"
    },
    {
      "condition": {
        "typeReached": "com.ecwid.consul.v1.ConsulClient"
      },
      "type": "com.ecwid.consul.v1.health.HealthConsulClient",
      "allDeclaredFields": true,
      "allDeclaredConstructors": true
    },
    {
      "condition": {
        "typeReached": "com.ecwid.consul.v1.ConsulClient"
      },
      "type": "com.ecwid.consul.v1.health.HealthServicesRequest",
      "allDeclaredFields": true,
      "allDeclaredConstructors": true
    },
    {
      "condition": {
        "typeReached": "com.ecwid.consul.v1.ConsulClient"
      },
      "type": "com.ecwid.consul.v1.health.model.Check",
      "allDeclaredFields": true,
      "allDeclaredConstructors": true
    },
    {
      "condition": {
        "typeReached": "com.ecwid.consul.v1.ConsulClient"
      },
      "type": "com.ecwid.consul.v1.health.model.Check$CheckStatus",
      "allDeclaredFields": true,
      "allDeclaredConstructors": true
    },
    {
      "condition": {
        "typeReached": "com.ecwid.consul.v1.ConsulClient"
      },
      "type": "com.ecwid.consul.v1.health.model.HealthService",
      "allDeclaredFields": true,
      "allDeclaredConstructors": true
    },
    {
      "condition": {
        "typeReached": "com.ecwid.consul.v1.ConsulClient"
      },
      "type": "com.ecwid.consul.v1.health.model.HealthService$Node",
      "allDeclaredFields": true,
      "allDeclaredConstructors": true
    },
    {
      "condition": {
        "typeReached": "com.ecwid.consul.v1.ConsulClient"
      },
      "type": "com.ecwid.consul.v1.health.model.HealthService$Service",
      "allDeclaredFields": true,
      "allDeclaredConstructors": true
    },
    {
      "condition": {
        "typeReached": "com.ecwid.consul.v1.ConsulClient"
      },
      "type": "com.ecwid.consul.v1.kv.KeyValueClient"
    },
    {
      "condition": {
        "typeReached": "com.ecwid.consul.v1.ConsulClient"
      },
      "type": "com.ecwid.consul.v1.kv.model.GetBinaryValue",
      "allDeclaredFields": true,
      "allDeclaredConstructors": true
    },
    {
      "condition": {
        "typeReached": "com.ecwid.consul.v1.ConsulClient"
      },
      "type": "com.ecwid.consul.v1.kv.model.GetValue",
      "allDeclaredFields": true,
      "allDeclaredConstructors": true
    },
    {
      "condition": {
        "typeReached": "com.ecwid.consul.v1.ConsulClient"
      },
      "type": "com.ecwid.consul.v1.kv.model.PutParams",
      "allDeclaredFields": true,
      "allDeclaredConstructors": true
    },
    {
      "condition": {
        "typeReached": "com.ecwid.consul.v1.ConsulClient"
      },
      "type": "com.ecwid.consul.v1.query.QueryClient"
    },
    {
      "condition": {
        "typeReached": "com.ecwid.consul.v1.ConsulClient"
      },
      "type": "com.ecwid.consul.v1.query.QueryConsulClient",
      "allDeclaredFields": true,
      "allDeclaredConstructors": true
    },
    {
      "condition": {
        "typeReached": "com.ecwid.consul.v1.ConsulClient"
      },
      "type": "com.ecwid.consul.v1.query.model.Check",
      "allDeclaredFields": true,
      "allDeclaredConstructors": true
    },
    {
      "condition": {
        "typeReached": "com.ecwid.consul.v1.ConsulClient"
      },
      "type": "com.ecwid.consul.v1.query.model.Check$CheckStatus",
      "allDeclaredFields": true,
      "allDeclaredConstructors": true
    },
    {
      "condition": {
        "typeReached": "com.ecwid.consul.v1.ConsulClient"
      },
      "type": "com.ecwid.consul.v1.query.model.QueryExecution",
      "allDeclaredFields": true,
      "allDeclaredConstructors": true
    },
    {
      "condition": {
        "typeReached": "com.ecwid.consul.v1.ConsulClient"
      },
      "type": "com.ecwid.consul.v1.query.model.QueryNode",
      "allDeclaredFields": true,
      "allDeclaredConstructors": true
    },
    {
      "condition": {
        "typeReached": "com.ecwid.consul.v1.ConsulClient"
      },
      "type": "com.ecwid.consul.v1.session.SessionClient"
    },
    {
      "condition": {
        "typeReached": "com.ecwid.consul.v1.ConsulClient"
      },
      "type": "com.ecwid.consul.v1.session.SessionConsulClient",
      "allDeclaredFields": true,
      "allDeclaredConstructors": true
    },
    {
      "condition": {
        "typeReached": "com.ecwid.consul.v1.ConsulClient"
      },
      "type": "com.ecwid.consul.v1.session.model.NewSession",
      "allDeclaredFields": true,
      "allDeclaredConstructors": true
    },
    {
      "condition": {
        "typeReached": "com.ecwid.consul.v1.ConsulClient"
      },
      "type": "com.ecwid.consul.v1.session.model.Session",
      "allDeclaredFields": true,
      "allDeclaredConstructors": true
    },
    {
      "condition": {
        "typeReached": "com.ecwid.consul.v1.ConsulClient"
      },
      "type": "com.ecwid.consul.v1.session.model.Session$Behavior",
      "allDeclaredFields": true,
      "allDeclaredConstructors": true
    },
    {
      "condition": {
        "typeReached": "com.ecwid.consul.v1.ConsulClient"
      },
      "type": "com.ecwid.consul.v1.status.StatusClient"
    },
    {
      "condition": {
        "typeReached": "com.ecwid.consul.v1.ConsulClient"
      },
      "type": "com.ecwid.consul.v1.status.StatusConsulClient",
      "allDeclaredFields": true,
      "allDeclaredConstructors": true
    },
    {
      "condition": {
        "typeReached": "com.ecwid.consul.transport.DefaultHttpTransport"
      },
      "type": "com.sun.crypto.provider.AESCipher$General",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.ecwid.consul.transport.DefaultHttpTransport"
      },
      "type": "com.sun.crypto.provider.ARCFOURCipher",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.ecwid.consul.transport.DefaultHttpTransport"
      },
      "type": "com.sun.crypto.provider.ChaCha20Cipher$ChaCha20Poly1305",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.ecwid.consul.transport.DefaultHttpTransport"
      },
      "type": "com.sun.crypto.provider.DESCipher",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.ecwid.consul.transport.DefaultHttpTransport"
      },
      "type": "com.sun.crypto.provider.DESedeCipher",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.ecwid.consul.transport.DefaultHttpTransport"
      },
      "type": "com.sun.crypto.provider.GaloisCounterMode$AESGCM",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.ecwid.consul.transport.DefaultHttpTransport"
      },
      "type": "javax.security.auth.x500.X500Principal",
      "fields": [
        {
          "name": "thisX500Name"
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.ecwid.consul.transport.DefaultHttpTransport"
      },
      "type": "org.apache.commons.logging.LogFactory"
    },
    {
      "condition": {
        "typeReached": "com.ecwid.consul.transport.DefaultHttpTransport"
      },
      "type": "org.apache.commons.logging.impl.Jdk14Logger",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.ecwid.consul.transport.DefaultHttpTransport"
      },
      "type": "org.apache.commons.logging.impl.Log4JLogger"
    },
    {
      "condition": {
        "typeReached": "com.ecwid.consul.transport.DefaultHttpTransport"
      },
      "type": "org.apache.commons.logging.impl.LogFactoryImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.ecwid.consul.transport.DefaultHttpTransport"
      },
      "type": "org.apache.commons.logging.impl.WeakHashtable",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.ecwid.consul.transport.DefaultHttpTransport"
      },
      "type": "sun.security.pkcs12.PKCS12KeyStore",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.ecwid.consul.transport.DefaultHttpTransport"
      },
      "type": "sun.security.pkcs12.PKCS12KeyStore$DualFormatPKCS12",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.ecwid.consul.transport.DefaultHttpTransport"
      },
      "type": "sun.security.provider.JavaKeyStore$JKS",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.ecwid.consul.transport.DefaultHttpTransport"
      },
      "type": "sun.security.provider.NativePRNG",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.ecwid.consul.transport.DefaultHttpTransport"
      },
      "type": "sun.security.provider.SHA",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.ecwid.consul.transport.DefaultHttpTransport"
      },
      "type": "sun.security.provider.X509Factory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.ecwid.consul.transport.DefaultHttpTransport"
      },
      "type": "sun.security.rsa.RSAKeyFactory$Legacy",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.ecwid.consul.transport.DefaultHttpTransport"
      },
      "type": "sun.security.ssl.SSLContextImpl$TLSContext",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.ecwid.consul.transport.DefaultHttpTransport"
      },
      "type": "sun.security.ssl.TrustManagerFactoryImpl$PKIXFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.ecwid.consul.transport.DefaultHttpTransport"
      },
      "type": "sun.security.x509.AuthorityInfoAccessExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.ecwid.consul.transport.DefaultHttpTransport"
      },
      "type": "sun.security.x509.AuthorityKeyIdentifierExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.ecwid.consul.transport.DefaultHttpTransport"
      },
      "type": "sun.security.x509.BasicConstraintsExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.ecwid.consul.transport.DefaultHttpTransport"
      },
      "type": "sun.security.x509.CRLDistributionPointsExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.ecwid.consul.transport.DefaultHttpTransport"
      },
      "type": "sun.security.x509.CertificatePoliciesExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.ecwid.consul.transport.DefaultHttpTransport"
      },
      "type": "sun.security.x509.ExtendedKeyUsageExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.ecwid.consul.transport.DefaultHttpTransport"
      },
      "type": "sun.security.x509.IssuerAlternativeNameExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.ecwid.consul.transport.DefaultHttpTransport"
      },
      "type": "sun.security.x509.KeyUsageExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.ecwid.consul.transport.DefaultHttpTransport"
      },
      "type": "sun.security.x509.NetscapeCertTypeExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.ecwid.consul.transport.DefaultHttpTransport"
      },
      "type": "sun.security.x509.PrivateKeyUsageExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.ecwid.consul.transport.DefaultHttpTransport"
      },
      "type": "sun.security.x509.SubjectAlternativeNameExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.ecwid.consul.transport.DefaultHttpTransport"
      },
      "type": "sun.security.x509.SubjectKeyIdentifierExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    }
  ],
  "resources": [
    {
      "condition": {
        "typeReached": "com.ecwid.consul.transport.DefaultHttpTransport"
      },
      "glob": "mozilla/public-suffix-list.txt"
    },
    {
      "condition": {
        "typeReached": "com.ecwid.consul.transport.DefaultHttpTransport"
      },
      "glob": "org/apache/http/client/version.properties"
    }
  ],
  
  "bundles": []
}