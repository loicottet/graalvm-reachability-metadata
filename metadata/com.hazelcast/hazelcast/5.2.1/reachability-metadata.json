{
  "reflection": [
    {
      "condition": {
        "typeReached": "com.hazelcast.core.Hazelcast"
      },
      "type": "[B"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.util.phonehome.PhoneHome"
      },
      "type": "[B"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.core.Hazelcast"
      },
      "type": "[C"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.core.Hazelcast"
      },
      "type": "[D"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.core.Hazelcast"
      },
      "type": "[F"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.core.Hazelcast"
      },
      "type": "[I"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.core.Hazelcast"
      },
      "type": "[J"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.networking.nio.NioInboundPipeline"
      },
      "type": "[Lcom.hazelcast.internal.networking.InboundHandler;"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.networking.nio.NioOutboundPipeline"
      },
      "type": "[Lcom.hazelcast.internal.networking.OutboundHandler;"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.core.Hazelcast"
      },
      "type": "[Ljava.lang.String;"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.util.phonehome.PhoneHome"
      },
      "type": "[Ljava.lang.String;"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.util.phonehome.PhoneHome"
      },
      "type": "[Lsun.security.pkcs.SignerInfo;"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.core.Hazelcast"
      },
      "type": "[S"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.core.Hazelcast"
      },
      "type": "[Z"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.serialization.impl.DataSerializableSerializer"
      },
      "type": "com.hazelcast.aggregation.impl.AggregatorDataSerializerHook",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.discovery.impl.DefaultDiscoveryService"
      },
      "type": "com.hazelcast.aws.AwsDiscoveryStrategyFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.discovery.impl.DefaultDiscoveryService"
      },
      "type": "com.hazelcast.azure.AzureDiscoveryStrategyFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.serialization.impl.DataSerializableSerializer"
      },
      "type": "com.hazelcast.cache.impl.CacheDataSerializerHook",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.operationservice.impl.OperationRunnerImpl"
      },
      "type": "com.hazelcast.cache.impl.CacheMXBeanImpl"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.operationservice.impl.OperationRunnerImpl"
      },
      "type": "com.hazelcast.cache.impl.CacheStatisticsMXBeanImpl"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.serialization.impl.DataSerializableSerializer"
      },
      "type": "com.hazelcast.cardinality.impl.CardinalityEstimatorDataSerializerHook",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.util.ServiceLoader"
      },
      "type": "com.hazelcast.client.HazelcastClient"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.client.impl.clientside.HazelcastClientInstanceImpl"
      },
      "type": "com.hazelcast.client.config.ClientFlakeIdGeneratorConfig",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "<init>",
          "parameterTypes": [
            "com.hazelcast.client.config.ClientFlakeIdGeneratorConfig"
          ]
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.client.impl.clientside.HazelcastClientInstanceImpl"
      },
      "type": "com.hazelcast.client.config.ClientReliableTopicConfig",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "<init>",
          "parameterTypes": [
            "com.hazelcast.client.config.ClientReliableTopicConfig"
          ]
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.serialization.impl.DataSerializableSerializer"
      },
      "type": "com.hazelcast.client.impl.ClientDataSerializerHook",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.client.impl.ClientEndpointManagerImpl"
      },
      "type": "com.hazelcast.client.impl.ClientEndpointManager",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.client.impl.ClientEngineImpl"
      },
      "type": "com.hazelcast.client.impl.ClientEndpointManager"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.core.Hazelcast"
      },
      "type": "com.hazelcast.client.impl.ClientEndpointManager"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceFactory"
      },
      "type": "com.hazelcast.client.impl.ClientEndpointManager"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
      },
      "type": "com.hazelcast.client.impl.ClientEndpointManager"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.Node"
      },
      "type": "com.hazelcast.client.impl.ClientEndpointManager"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.client.impl.ClientEndpointManagerImpl"
      },
      "type": "com.hazelcast.client.impl.ClientEndpointManagerImpl",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.client.impl.ClientEngineImpl"
      },
      "type": "com.hazelcast.client.impl.ClientEndpointManagerImpl"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.core.Hazelcast"
      },
      "type": "com.hazelcast.client.impl.ClientEndpointManagerImpl"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceFactory"
      },
      "type": "com.hazelcast.client.impl.ClientEndpointManagerImpl"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
      },
      "type": "com.hazelcast.client.impl.ClientEndpointManagerImpl"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.Node"
      },
      "type": "com.hazelcast.client.impl.ClientEndpointManagerImpl"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.client.impl.clientside.HazelcastClientInstanceImpl"
      },
      "type": "com.hazelcast.client.impl.clientside.DefaultClientExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.client.impl.statistics.ClusterConnectionMetricsProvider"
      },
      "type": "com.hazelcast.client.impl.connection.ClientConnection",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.client.impl.statistics.ClusterConnectionMetricsProvider"
      },
      "type": "com.hazelcast.client.impl.connection.tcp.TcpClientConnection",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.client.impl.clientside.HazelcastClientInstanceImpl"
      },
      "type": "com.hazelcast.client.impl.proxy.ClientCardinalityEstimatorProxy",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.String",
            "java.lang.String",
            "com.hazelcast.client.impl.spi.ClientContext"
          ]
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.client.impl.clientside.HazelcastClientInstanceImpl"
      },
      "type": "com.hazelcast.client.impl.proxy.ClientDurableExecutorServiceProxy",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.String",
            "java.lang.String",
            "com.hazelcast.client.impl.spi.ClientContext"
          ]
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.client.impl.clientside.HazelcastClientInstanceImpl"
      },
      "type": "com.hazelcast.client.impl.proxy.ClientExecutorServiceProxy",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.String",
            "java.lang.String",
            "com.hazelcast.client.impl.spi.ClientContext"
          ]
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.client.impl.clientside.HazelcastClientInstanceImpl"
      },
      "type": "com.hazelcast.client.impl.proxy.ClientFlakeIdGeneratorProxy",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.String",
            "java.lang.String",
            "com.hazelcast.client.impl.spi.ClientContext"
          ]
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.client.impl.clientside.HazelcastClientInstanceImpl"
      },
      "type": "com.hazelcast.client.impl.proxy.ClientListProxy",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.String",
            "java.lang.String",
            "com.hazelcast.client.impl.spi.ClientContext"
          ]
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.client.impl.clientside.HazelcastClientInstanceImpl"
      },
      "type": "com.hazelcast.client.impl.proxy.ClientMultiMapProxy",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.String",
            "java.lang.String",
            "com.hazelcast.client.impl.spi.ClientContext"
          ]
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.client.impl.clientside.HazelcastClientInstanceImpl"
      },
      "type": "com.hazelcast.client.impl.proxy.ClientPNCounterProxy",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.String",
            "java.lang.String",
            "com.hazelcast.client.impl.spi.ClientContext"
          ]
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.client.impl.clientside.HazelcastClientInstanceImpl"
      },
      "type": "com.hazelcast.client.impl.proxy.ClientQueueProxy",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.String",
            "java.lang.String",
            "com.hazelcast.client.impl.spi.ClientContext"
          ]
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.client.impl.clientside.HazelcastClientInstanceImpl"
      },
      "type": "com.hazelcast.client.impl.proxy.ClientReliableTopicProxy",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.String",
            "java.lang.String",
            "com.hazelcast.client.impl.spi.ClientContext"
          ]
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.client.impl.clientside.HazelcastClientInstanceImpl"
      },
      "type": "com.hazelcast.client.impl.proxy.ClientReplicatedMapProxy",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.String",
            "java.lang.String",
            "com.hazelcast.client.impl.spi.ClientContext"
          ]
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.client.impl.clientside.HazelcastClientInstanceImpl"
      },
      "type": "com.hazelcast.client.impl.proxy.ClientRingbufferProxy",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.String",
            "java.lang.String",
            "com.hazelcast.client.impl.spi.ClientContext"
          ]
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.client.impl.clientside.HazelcastClientInstanceImpl"
      },
      "type": "com.hazelcast.client.impl.proxy.ClientScheduledExecutorProxy",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.String",
            "java.lang.String",
            "com.hazelcast.client.impl.spi.ClientContext"
          ]
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.client.impl.clientside.HazelcastClientInstanceImpl"
      },
      "type": "com.hazelcast.client.impl.proxy.ClientSetProxy",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.String",
            "java.lang.String",
            "com.hazelcast.client.impl.spi.ClientContext"
          ]
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.client.impl.clientside.HazelcastClientInstanceImpl"
      },
      "type": "com.hazelcast.client.impl.proxy.ClientTopicProxy",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.String",
            "java.lang.String",
            "com.hazelcast.client.impl.spi.ClientContext"
          ]
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.client.impl.clientside.HazelcastClientInstanceImpl"
      },
      "type": "com.hazelcast.client.impl.proxy.txn.xa.XAResourceProxy",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.String",
            "java.lang.String",
            "com.hazelcast.client.impl.spi.ClientContext"
          ]
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.client.HazelcastClient"
      },
      "type": "com.hazelcast.client.impl.spi.ClientInvocationService"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.client.cache.impl.HazelcastClientCachingProvider"
      },
      "type": "com.hazelcast.client.impl.spi.ClientInvocationService"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.client.impl.clientside.HazelcastClientInstanceImpl"
      },
      "type": "com.hazelcast.client.impl.spi.ClientInvocationService"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.client.impl.spi.impl.ClientInvocationServiceImpl"
      },
      "type": "com.hazelcast.client.impl.spi.ClientInvocationService",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.client.HazelcastClient"
      },
      "type": "com.hazelcast.client.impl.spi.ClientListenerService"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.client.cache.impl.HazelcastClientCachingProvider"
      },
      "type": "com.hazelcast.client.impl.spi.ClientListenerService"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.client.impl.clientside.HazelcastClientInstanceImpl"
      },
      "type": "com.hazelcast.client.impl.spi.ClientListenerService"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.client.impl.spi.impl.listener.ClientListenerServiceImpl"
      },
      "type": "com.hazelcast.client.impl.spi.ClientListenerService",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.client.HazelcastClient"
      },
      "type": "com.hazelcast.client.impl.spi.impl.ClientExecutionServiceImpl"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.client.cache.impl.HazelcastClientCachingProvider"
      },
      "type": "com.hazelcast.client.impl.spi.impl.ClientExecutionServiceImpl"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.client.impl.clientside.HazelcastClientInstanceImpl"
      },
      "type": "com.hazelcast.client.impl.spi.impl.ClientExecutionServiceImpl"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.client.impl.spi.impl.ClientExecutionServiceImpl"
      },
      "type": "com.hazelcast.client.impl.spi.impl.ClientExecutionServiceImpl",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.client.HazelcastClient"
      },
      "type": "com.hazelcast.client.impl.spi.impl.ClientInvocationServiceImpl"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.client.cache.impl.HazelcastClientCachingProvider"
      },
      "type": "com.hazelcast.client.impl.spi.impl.ClientInvocationServiceImpl"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.client.impl.clientside.HazelcastClientInstanceImpl"
      },
      "type": "com.hazelcast.client.impl.spi.impl.ClientInvocationServiceImpl"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.client.impl.spi.impl.ClientInvocationServiceImpl"
      },
      "type": "com.hazelcast.client.impl.spi.impl.ClientInvocationServiceImpl",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.client.impl.statistics.ClientStatisticsService"
      },
      "type": "com.hazelcast.client.impl.spi.impl.ClientInvocationServiceImpl",
      "methods": [
        {
          "name": "maxCurrentInvocations",
          "parameterTypes": []
        },
        {
          "name": "startedInvocations",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.client.HazelcastClient"
      },
      "type": "com.hazelcast.client.impl.spi.impl.listener.ClientListenerServiceImpl"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.client.cache.impl.HazelcastClientCachingProvider"
      },
      "type": "com.hazelcast.client.impl.spi.impl.listener.ClientListenerServiceImpl"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.client.impl.clientside.HazelcastClientInstanceImpl"
      },
      "type": "com.hazelcast.client.impl.spi.impl.listener.ClientListenerServiceImpl"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.client.impl.spi.impl.listener.ClientListenerServiceImpl"
      },
      "type": "com.hazelcast.client.impl.spi.impl.listener.ClientListenerServiceImpl",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.client.impl.statistics.ClientStatisticsService"
      },
      "type": "com.hazelcast.client.impl.spi.impl.listener.ClientListenerServiceImpl",
      "methods": [
        {
          "name": "eventQueueSize",
          "parameterTypes": []
        },
        {
          "name": "eventsProcessed",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.core.Hazelcast"
      },
      "type": "com.hazelcast.cluster.Cluster"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceFactory"
      },
      "type": "com.hazelcast.cluster.Cluster"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
      },
      "type": "com.hazelcast.cluster.Cluster"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.Node"
      },
      "type": "com.hazelcast.cluster.Cluster"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.cluster.impl.ClusterServiceImpl"
      },
      "type": "com.hazelcast.cluster.Cluster",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.collection.impl.list.ListService"
      },
      "type": "com.hazelcast.collection.LocalCollectionStats",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.collection.impl.set.SetService"
      },
      "type": "com.hazelcast.collection.LocalCollectionStats",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.collection.impl.list.ListService"
      },
      "type": "com.hazelcast.collection.LocalListStats",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.collection.impl.queue.QueueService"
      },
      "type": "com.hazelcast.collection.LocalQueueStats",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.collection.impl.set.SetService"
      },
      "type": "com.hazelcast.collection.LocalSetStats",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.serialization.impl.DataSerializableSerializer"
      },
      "type": "com.hazelcast.collection.impl.collection.CollectionDataSerializerHook",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.serialization.impl.DataSerializableSerializer"
      },
      "type": "com.hazelcast.collection.impl.queue.QueueDataSerializerHook",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.config.MemberDomConfigProcessor"
      },
      "type": "com.hazelcast.config.AbstractSymmetricEncryptionConfig",
      "methods": [
        {
          "name": "setAlgorithm",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setEnabled",
          "parameterTypes": [
            "boolean"
          ]
        },
        {
          "name": "setSalt",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
      },
      "type": "com.hazelcast.config.CardinalityEstimatorConfig",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "<init>",
          "parameterTypes": [
            "com.hazelcast.config.CardinalityEstimatorConfig"
          ]
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.config.MemberDomConfigProcessor"
      },
      "type": "com.hazelcast.config.CardinalityEstimatorConfig",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.config.MemberDomConfigProcessor"
      },
      "type": "com.hazelcast.config.Config",
      "methods": [
        {
          "name": "addDurableExecutorConfig",
          "parameterTypes": [
            "com.hazelcast.config.DurableExecutorConfig"
          ]
        },
        {
          "name": "addExecutorConfig",
          "parameterTypes": [
            "com.hazelcast.config.ExecutorConfig"
          ]
        },
        {
          "name": "addPNCounterConfig",
          "parameterTypes": [
            "com.hazelcast.config.PNCounterConfig"
          ]
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
      },
      "type": "com.hazelcast.config.DurableExecutorConfig",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "<init>",
          "parameterTypes": [
            "com.hazelcast.config.DurableExecutorConfig"
          ]
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.config.MemberDomConfigProcessor"
      },
      "type": "com.hazelcast.config.DurableExecutorConfig",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "setCapacity",
          "parameterTypes": [
            "int"
          ]
        },
        {
          "name": "setDurability",
          "parameterTypes": [
            "int"
          ]
        },
        {
          "name": "setName",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setPoolSize",
          "parameterTypes": [
            "int"
          ]
        },
        {
          "name": "setStatisticsEnabled",
          "parameterTypes": [
            "boolean"
          ]
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.config.Config"
      },
      "type": "com.hazelcast.config.ExecutorConfig",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "<init>",
          "parameterTypes": [
            "com.hazelcast.config.ExecutorConfig"
          ]
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.config.MemberDomConfigProcessor"
      },
      "type": "com.hazelcast.config.ExecutorConfig",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "setName",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setPoolSize",
          "parameterTypes": [
            "int"
          ]
        },
        {
          "name": "setQueueCapacity",
          "parameterTypes": [
            "int"
          ]
        },
        {
          "name": "setStatisticsEnabled",
          "parameterTypes": [
            "boolean"
          ]
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
      },
      "type": "com.hazelcast.config.FlakeIdGeneratorConfig",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "<init>",
          "parameterTypes": [
            "com.hazelcast.config.FlakeIdGeneratorConfig"
          ]
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.config.MemberDomConfigProcessor"
      },
      "type": "com.hazelcast.config.FlakeIdGeneratorConfig",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.config.Config"
      },
      "type": "com.hazelcast.config.ListConfig",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "<init>",
          "parameterTypes": [
            "com.hazelcast.config.ListConfig"
          ]
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.config.MemberDomConfigProcessor"
      },
      "type": "com.hazelcast.config.ListConfig",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.config.Config"
      },
      "type": "com.hazelcast.config.MapConfig",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "<init>",
          "parameterTypes": [
            "com.hazelcast.config.MapConfig"
          ]
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.config.MemberDomConfigProcessor"
      },
      "type": "com.hazelcast.config.MapConfig",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.config.Config"
      },
      "type": "com.hazelcast.config.MultiMapConfig",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "<init>",
          "parameterTypes": [
            "com.hazelcast.config.MultiMapConfig"
          ]
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.config.MemberDomConfigProcessor"
      },
      "type": "com.hazelcast.config.MultiMapConfig",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.config.MemberDomConfigProcessor"
      },
      "type": "com.hazelcast.config.NetworkConfig",
      "methods": [
        {
          "name": "setSymmetricEncryptionConfig",
          "parameterTypes": [
            "com.hazelcast.config.SymmetricEncryptionConfig"
          ]
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
      },
      "type": "com.hazelcast.config.PNCounterConfig",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "<init>",
          "parameterTypes": [
            "com.hazelcast.config.PNCounterConfig"
          ]
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.config.MemberDomConfigProcessor"
      },
      "type": "com.hazelcast.config.PNCounterConfig",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "setName",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setReplicaCount",
          "parameterTypes": [
            "int"
          ]
        },
        {
          "name": "setStatisticsEnabled",
          "parameterTypes": [
            "boolean"
          ]
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.config.Config"
      },
      "type": "com.hazelcast.config.QueueConfig",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "<init>",
          "parameterTypes": [
            "com.hazelcast.config.QueueConfig"
          ]
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.config.MemberDomConfigProcessor"
      },
      "type": "com.hazelcast.config.QueueConfig",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
      },
      "type": "com.hazelcast.config.ReliableTopicConfig",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "<init>",
          "parameterTypes": [
            "com.hazelcast.config.ReliableTopicConfig"
          ]
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.config.Config"
      },
      "type": "com.hazelcast.config.ReplicatedMapConfig",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "<init>",
          "parameterTypes": [
            "com.hazelcast.config.ReplicatedMapConfig"
          ]
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.config.MemberDomConfigProcessor"
      },
      "type": "com.hazelcast.config.ReplicatedMapConfig",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.config.Config"
      },
      "type": "com.hazelcast.config.RingbufferConfig",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "<init>",
          "parameterTypes": [
            "com.hazelcast.config.RingbufferConfig"
          ]
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.config.MemberDomConfigProcessor"
      },
      "type": "com.hazelcast.config.RingbufferConfig",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
      },
      "type": "com.hazelcast.config.ScheduledExecutorConfig",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "<init>",
          "parameterTypes": [
            "com.hazelcast.config.ScheduledExecutorConfig"
          ]
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.config.MemberDomConfigProcessor"
      },
      "type": "com.hazelcast.config.ScheduledExecutorConfig",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.config.Config"
      },
      "type": "com.hazelcast.config.SetConfig",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "<init>",
          "parameterTypes": [
            "com.hazelcast.config.SetConfig"
          ]
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.config.MemberDomConfigProcessor"
      },
      "type": "com.hazelcast.config.SetConfig",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.config.MemberDomConfigProcessor"
      },
      "type": "com.hazelcast.config.SymmetricEncryptionConfig",
      "methods": [
        {
          "name": "setIterationCount",
          "parameterTypes": [
            "int"
          ]
        },
        {
          "name": "setPassword",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.config.Config"
      },
      "type": "com.hazelcast.config.TopicConfig",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "com.hazelcast.config.TopicConfig"
          ]
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.dynamicconfig.DynamicConfigurationAwareConfig"
      },
      "type": "com.hazelcast.config.TopicConfig",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.serialization.impl.DataSerializableSerializer"
      },
      "type": "com.hazelcast.cp.event.impl.CpEventDataSerializerHook",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.core.Hazelcast"
      },
      "type": "com.hazelcast.cp.internal.MetadataRaftGroupManager"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.cp.internal.RaftService"
      },
      "type": "com.hazelcast.cp.internal.MetadataRaftGroupManager",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.cp.internal.RaftServiceDescriptorProvider$RaftServiceDescriptor"
      },
      "type": "com.hazelcast.cp.internal.MetadataRaftGroupManager"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceFactory"
      },
      "type": "com.hazelcast.cp.internal.MetadataRaftGroupManager"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
      },
      "type": "com.hazelcast.cp.internal.MetadataRaftGroupManager"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.Node"
      },
      "type": "com.hazelcast.cp.internal.MetadataRaftGroupManager"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.NodeEngineImpl"
      },
      "type": "com.hazelcast.cp.internal.MetadataRaftGroupManager"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.servicemanager.impl.ServiceManagerImpl"
      },
      "type": "com.hazelcast.cp.internal.MetadataRaftGroupManager"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.core.Hazelcast"
      },
      "type": "com.hazelcast.cp.internal.RaftNodeLifecycleAwareService"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.cp.internal.RaftService"
      },
      "type": "com.hazelcast.cp.internal.RaftNodeLifecycleAwareService",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.cp.internal.RaftServiceDescriptorProvider$RaftServiceDescriptor"
      },
      "type": "com.hazelcast.cp.internal.RaftNodeLifecycleAwareService"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceFactory"
      },
      "type": "com.hazelcast.cp.internal.RaftNodeLifecycleAwareService"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
      },
      "type": "com.hazelcast.cp.internal.RaftNodeLifecycleAwareService"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.Node"
      },
      "type": "com.hazelcast.cp.internal.RaftNodeLifecycleAwareService"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.NodeEngineImpl"
      },
      "type": "com.hazelcast.cp.internal.RaftNodeLifecycleAwareService"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.servicemanager.impl.ServiceManagerImpl"
      },
      "type": "com.hazelcast.cp.internal.RaftNodeLifecycleAwareService"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.core.Hazelcast"
      },
      "type": "com.hazelcast.cp.internal.RaftService"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.cp.internal.RaftService"
      },
      "type": "com.hazelcast.cp.internal.RaftService",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.cp.internal.RaftServiceDescriptorProvider$RaftServiceDescriptor"
      },
      "type": "com.hazelcast.cp.internal.RaftService"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceFactory"
      },
      "type": "com.hazelcast.cp.internal.RaftService"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
      },
      "type": "com.hazelcast.cp.internal.RaftService"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.Node"
      },
      "type": "com.hazelcast.cp.internal.RaftService"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.NodeEngineImpl"
      },
      "type": "com.hazelcast.cp.internal.RaftService"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.servicemanager.impl.ServiceManagerImpl"
      },
      "type": "com.hazelcast.cp.internal.RaftService"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.serialization.impl.DataSerializableSerializer"
      },
      "type": "com.hazelcast.cp.internal.RaftServiceDataSerializerHook",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.servicemanager.impl.ServiceManagerImpl"
      },
      "type": "com.hazelcast.cp.internal.RaftServiceDescriptorProvider",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.serialization.impl.DataSerializableSerializer"
      },
      "type": "com.hazelcast.cp.internal.datastructures.RaftDataServiceDataSerializerHook",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.servicemanager.impl.ServiceManagerImpl"
      },
      "type": "com.hazelcast.cp.internal.datastructures.RaftDataServiceDescriptorProvider",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.serialization.impl.DataSerializableSerializer"
      },
      "type": "com.hazelcast.cp.internal.datastructures.atomiclong.AtomicLongDataSerializerHook",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.serialization.impl.DataSerializableSerializer"
      },
      "type": "com.hazelcast.cp.internal.datastructures.atomicref.AtomicRefDataSerializerHook",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.serialization.impl.DataSerializableSerializer"
      },
      "type": "com.hazelcast.cp.internal.datastructures.countdownlatch.CountDownLatchDataSerializerHook",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.serialization.impl.DataSerializableSerializer"
      },
      "type": "com.hazelcast.cp.internal.datastructures.lock.LockDataSerializerHook",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.serialization.impl.DataSerializableSerializer"
      },
      "type": "com.hazelcast.cp.internal.datastructures.semaphore.SemaphoreDataSerializerHook",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.core.Hazelcast"
      },
      "type": "com.hazelcast.cp.internal.raft.SnapshotAwareService"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.cp.internal.RaftService"
      },
      "type": "com.hazelcast.cp.internal.raft.SnapshotAwareService",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.cp.internal.RaftServiceDescriptorProvider$RaftServiceDescriptor"
      },
      "type": "com.hazelcast.cp.internal.raft.SnapshotAwareService"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceFactory"
      },
      "type": "com.hazelcast.cp.internal.raft.SnapshotAwareService"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
      },
      "type": "com.hazelcast.cp.internal.raft.SnapshotAwareService"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.Node"
      },
      "type": "com.hazelcast.cp.internal.raft.SnapshotAwareService"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.NodeEngineImpl"
      },
      "type": "com.hazelcast.cp.internal.raft.SnapshotAwareService"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.servicemanager.impl.ServiceManagerImpl"
      },
      "type": "com.hazelcast.cp.internal.raft.SnapshotAwareService"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.serialization.impl.DataSerializableSerializer"
      },
      "type": "com.hazelcast.cp.internal.raft.impl.RaftDataSerializerHook",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.serialization.impl.DataSerializableSerializer"
      },
      "type": "com.hazelcast.cp.internal.session.RaftSessionServiceDataSerializerHook",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.serialization.impl.DataSerializableSerializer"
      },
      "type": "com.hazelcast.durableexecutor.impl.DurableExecutorDataSerializerHook",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.serialization.impl.DataSerializableSerializer"
      },
      "type": "com.hazelcast.executor.impl.ExecutorDataSerializerHook",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.serialization.impl.DataSerializableSerializer"
      },
      "type": "com.hazelcast.flakeidgen.impl.FlakeIdGeneratorDataSerializerHook",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.discovery.impl.DefaultDiscoveryService"
      },
      "type": "com.hazelcast.gcp.GcpDiscoveryStrategyFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.BuildInfoProvider"
      },
      "type": "com.hazelcast.instance.GeneratedBuildProperties",
      "fields": [
        {
          "name": "BUILD"
        },
        {
          "name": "COMMIT_ID"
        },
        {
          "name": "DISTRIBUTION"
        },
        {
          "name": "REVISION"
        },
        {
          "name": "SERIALIZATION_VERSION"
        },
        {
          "name": "VERSION"
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.cache.impl.AbstractCacheService"
      },
      "type": "com.hazelcast.instance.LocalInstanceStats"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.collection.impl.list.ListService"
      },
      "type": "com.hazelcast.instance.LocalInstanceStats"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.collection.impl.queue.QueueService"
      },
      "type": "com.hazelcast.instance.LocalInstanceStats"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.collection.impl.set.SetService"
      },
      "type": "com.hazelcast.instance.LocalInstanceStats"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.metrics.impl.ProviderHelper"
      },
      "type": "com.hazelcast.instance.LocalInstanceStats",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.map.impl.MapService"
      },
      "type": "com.hazelcast.instance.LocalInstanceStats",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.replicatedmap.impl.ReplicatedMapService"
      },
      "type": "com.hazelcast.instance.LocalInstanceStats"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.topic.impl.TopicService"
      },
      "type": "com.hazelcast.instance.LocalInstanceStats"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.NodeExtensionFactory"
      },
      "type": "com.hazelcast.instance.impl.DefaultNodeExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "com.hazelcast.instance.impl.Node"
          ]
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.serialization.impl.DataSerializableSerializer"
      },
      "type": "com.hazelcast.internal.ascii.TextProtocolsDataSerializerHook",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.core.Hazelcast"
      },
      "type": "com.hazelcast.internal.cluster.ClusterClock"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceFactory"
      },
      "type": "com.hazelcast.internal.cluster.ClusterClock"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
      },
      "type": "com.hazelcast.internal.cluster.ClusterClock"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.Node"
      },
      "type": "com.hazelcast.internal.cluster.ClusterClock"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.cluster.impl.ClusterServiceImpl"
      },
      "type": "com.hazelcast.internal.cluster.ClusterClock",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.core.Hazelcast"
      },
      "type": "com.hazelcast.internal.cluster.ClusterService"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceFactory"
      },
      "type": "com.hazelcast.internal.cluster.ClusterService"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
      },
      "type": "com.hazelcast.internal.cluster.ClusterService"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.Node"
      },
      "type": "com.hazelcast.internal.cluster.ClusterService"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.cluster.impl.ClusterServiceImpl"
      },
      "type": "com.hazelcast.internal.cluster.ClusterService",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.core.Hazelcast"
      },
      "type": "com.hazelcast.internal.cluster.ClusterStateListener"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceFactory"
      },
      "type": "com.hazelcast.internal.cluster.ClusterStateListener"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
      },
      "type": "com.hazelcast.internal.cluster.ClusterStateListener"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.Node"
      },
      "type": "com.hazelcast.internal.cluster.ClusterStateListener"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.partition.impl.InternalPartitionServiceImpl"
      },
      "type": "com.hazelcast.internal.cluster.ClusterStateListener",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.core.Hazelcast"
      },
      "type": "com.hazelcast.internal.cluster.impl.ClusterClockImpl"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceFactory"
      },
      "type": "com.hazelcast.internal.cluster.impl.ClusterClockImpl"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
      },
      "type": "com.hazelcast.internal.cluster.impl.ClusterClockImpl"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.Node"
      },
      "type": "com.hazelcast.internal.cluster.impl.ClusterClockImpl"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.cluster.impl.ClusterServiceImpl"
      },
      "type": "com.hazelcast.internal.cluster.impl.ClusterClockImpl",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.metrics.impl.MetricsService"
      },
      "type": "com.hazelcast.internal.cluster.impl.ClusterClockImpl",
      "methods": [
        {
          "name": "getClusterTimeDiff",
          "parameterTypes": []
        },
        {
          "name": "getClusterUpTime",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.serialization.impl.DataSerializableSerializer"
      },
      "type": "com.hazelcast.internal.cluster.impl.ClusterDataSerializerHook",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.core.Hazelcast"
      },
      "type": "com.hazelcast.internal.cluster.impl.ClusterHeartbeatManager"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceFactory"
      },
      "type": "com.hazelcast.internal.cluster.impl.ClusterHeartbeatManager"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
      },
      "type": "com.hazelcast.internal.cluster.impl.ClusterHeartbeatManager"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.Node"
      },
      "type": "com.hazelcast.internal.cluster.impl.ClusterHeartbeatManager"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.cluster.impl.ClusterServiceImpl"
      },
      "type": "com.hazelcast.internal.cluster.impl.ClusterHeartbeatManager",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.core.Hazelcast"
      },
      "type": "com.hazelcast.internal.cluster.impl.ClusterServiceImpl"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceFactory"
      },
      "type": "com.hazelcast.internal.cluster.impl.ClusterServiceImpl"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
      },
      "type": "com.hazelcast.internal.cluster.impl.ClusterServiceImpl"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.Node"
      },
      "type": "com.hazelcast.internal.cluster.impl.ClusterServiceImpl"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.cluster.impl.ClusterServiceImpl"
      },
      "type": "com.hazelcast.internal.cluster.impl.ClusterServiceImpl",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.metrics.impl.MetricsService"
      },
      "type": "com.hazelcast.internal.cluster.impl.ClusterServiceImpl",
      "methods": [
        {
          "name": "getSize",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.serialization.impl.DataSerializableSerializer"
      },
      "type": "com.hazelcast.internal.config.ConfigDataSerializerHook",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.serialization.impl.DataSerializableSerializer"
      },
      "type": "com.hazelcast.internal.crdt.CRDTDataSerializerHook",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.serialization.impl.DataSerializableSerializer"
      },
      "type": "com.hazelcast.internal.journal.EventJournalDataSerializerHook",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.serialization.impl.DataSerializableSerializer"
      },
      "type": "com.hazelcast.internal.locksupport.LockDataSerializerHook",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.serialization.impl.DataSerializableSerializer"
      },
      "type": "com.hazelcast.internal.longregister.LongRegisterDataSerializerHook",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.servicemanager.impl.ServiceManagerImpl"
      },
      "type": "com.hazelcast.internal.longregister.LongRegisterServiceDescriptorProvider",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.serialization.impl.DataSerializableSerializer"
      },
      "type": "com.hazelcast.internal.management.ManagementDataSerializerHook",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.client.HazelcastClient"
      },
      "type": "com.hazelcast.internal.memory.DefaultMemoryStats"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.client.cache.impl.HazelcastClientCachingProvider"
      },
      "type": "com.hazelcast.internal.memory.DefaultMemoryStats"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.client.impl.clientside.HazelcastClientInstanceImpl"
      },
      "type": "com.hazelcast.internal.memory.DefaultMemoryStats",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.core.Hazelcast"
      },
      "type": "com.hazelcast.internal.memory.DefaultMemoryStats"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceFactory"
      },
      "type": "com.hazelcast.internal.memory.DefaultMemoryStats"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
      },
      "type": "com.hazelcast.internal.memory.DefaultMemoryStats"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.Node"
      },
      "type": "com.hazelcast.internal.memory.DefaultMemoryStats"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.NodeEngineImpl"
      },
      "type": "com.hazelcast.internal.memory.DefaultMemoryStats",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.client.HazelcastClient"
      },
      "type": "com.hazelcast.internal.memory.MemoryStats"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.client.cache.impl.HazelcastClientCachingProvider"
      },
      "type": "com.hazelcast.internal.memory.MemoryStats"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.client.impl.clientside.HazelcastClientInstanceImpl"
      },
      "type": "com.hazelcast.internal.memory.MemoryStats",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.core.Hazelcast"
      },
      "type": "com.hazelcast.internal.memory.MemoryStats"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceFactory"
      },
      "type": "com.hazelcast.internal.memory.MemoryStats"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
      },
      "type": "com.hazelcast.internal.memory.MemoryStats"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.Node"
      },
      "type": "com.hazelcast.internal.memory.MemoryStats"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.metrics.impl.MetricsCollectionCycle"
      },
      "type": "com.hazelcast.internal.memory.MemoryStats",
      "methods": [
        {
          "name": "getCommittedHeap",
          "parameterTypes": []
        },
        {
          "name": "getCommittedNative",
          "parameterTypes": []
        },
        {
          "name": "getFreeHeap",
          "parameterTypes": []
        },
        {
          "name": "getFreeNative",
          "parameterTypes": []
        },
        {
          "name": "getFreePhysical",
          "parameterTypes": []
        },
        {
          "name": "getMaxHeap",
          "parameterTypes": []
        },
        {
          "name": "getMaxMetadata",
          "parameterTypes": []
        },
        {
          "name": "getMaxNative",
          "parameterTypes": []
        },
        {
          "name": "getTotalPhysical",
          "parameterTypes": []
        },
        {
          "name": "getUsedHeap",
          "parameterTypes": []
        },
        {
          "name": "getUsedMetadata",
          "parameterTypes": []
        },
        {
          "name": "getUsedNative",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.NodeEngineImpl"
      },
      "type": "com.hazelcast.internal.memory.MemoryStats",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.client.impl.ClientEndpointManagerImpl"
      },
      "type": "com.hazelcast.internal.metrics.DynamicMetricsProvider",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.client.impl.ClientEngineImpl"
      },
      "type": "com.hazelcast.internal.metrics.DynamicMetricsProvider"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.client.impl.statistics.ClientStatisticsService"
      },
      "type": "com.hazelcast.internal.metrics.DynamicMetricsProvider"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.core.Hazelcast"
      },
      "type": "com.hazelcast.internal.metrics.DynamicMetricsProvider"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.cp.internal.RaftService"
      },
      "type": "com.hazelcast.internal.metrics.DynamicMetricsProvider",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.cp.internal.RaftServiceDescriptorProvider$RaftServiceDescriptor"
      },
      "type": "com.hazelcast.internal.metrics.DynamicMetricsProvider"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceFactory"
      },
      "type": "com.hazelcast.internal.metrics.DynamicMetricsProvider"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
      },
      "type": "com.hazelcast.internal.metrics.DynamicMetricsProvider"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.Node"
      },
      "type": "com.hazelcast.internal.metrics.DynamicMetricsProvider"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.metrics.impl.MetricsCollectionCycle"
      },
      "type": "com.hazelcast.internal.metrics.DynamicMetricsProvider"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.metrics.impl.MetricsRegistryImpl"
      },
      "type": "com.hazelcast.internal.metrics.DynamicMetricsProvider"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.metrics.impl.MetricsService"
      },
      "type": "com.hazelcast.internal.metrics.DynamicMetricsProvider"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.networking.nio.NioNetworking"
      },
      "type": "com.hazelcast.internal.metrics.DynamicMetricsProvider",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.server.tcp.TcpServer$MetricsProvider"
      },
      "type": "com.hazelcast.internal.metrics.DynamicMetricsProvider",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.server.tcp.TcpServerAcceptor"
      },
      "type": "com.hazelcast.internal.metrics.DynamicMetricsProvider",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.server.tcp.TcpServerConnectionManager"
      },
      "type": "com.hazelcast.internal.metrics.DynamicMetricsProvider",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.NodeEngineImpl"
      },
      "type": "com.hazelcast.internal.metrics.DynamicMetricsProvider"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.servicemanager.impl.ServiceManagerImpl"
      },
      "type": "com.hazelcast.internal.metrics.DynamicMetricsProvider"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.client.HazelcastClient"
      },
      "type": "com.hazelcast.internal.metrics.StaticMetricsProvider"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.client.cache.impl.HazelcastClientCachingProvider"
      },
      "type": "com.hazelcast.internal.metrics.StaticMetricsProvider"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.client.impl.clientside.HazelcastClientInstanceImpl"
      },
      "type": "com.hazelcast.internal.metrics.StaticMetricsProvider"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.client.impl.spi.impl.ClientExecutionServiceImpl"
      },
      "type": "com.hazelcast.internal.metrics.StaticMetricsProvider",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.client.impl.spi.impl.listener.ClientListenerServiceImpl"
      },
      "type": "com.hazelcast.internal.metrics.StaticMetricsProvider",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.core.Hazelcast"
      },
      "type": "com.hazelcast.internal.metrics.StaticMetricsProvider"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceFactory"
      },
      "type": "com.hazelcast.internal.metrics.StaticMetricsProvider"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
      },
      "type": "com.hazelcast.internal.metrics.StaticMetricsProvider"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.Node"
      },
      "type": "com.hazelcast.internal.metrics.StaticMetricsProvider"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.metrics.impl.MetricsRegistryImpl"
      },
      "type": "com.hazelcast.internal.metrics.StaticMetricsProvider"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.NodeEngineImpl"
      },
      "type": "com.hazelcast.internal.metrics.StaticMetricsProvider"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.eventservice.impl.EventServiceImpl"
      },
      "type": "com.hazelcast.internal.metrics.StaticMetricsProvider",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.operationexecutor.impl.OperationExecutorImpl"
      },
      "type": "com.hazelcast.internal.metrics.StaticMetricsProvider",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.operationexecutor.impl.OperationThread"
      },
      "type": "com.hazelcast.internal.metrics.StaticMetricsProvider",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.operationparker.impl.OperationParkerImpl"
      },
      "type": "com.hazelcast.internal.metrics.StaticMetricsProvider",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.operationservice.impl.InboundResponseHandlerSupplier"
      },
      "type": "com.hazelcast.internal.metrics.StaticMetricsProvider",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.operationservice.impl.InvocationMonitor"
      },
      "type": "com.hazelcast.internal.metrics.StaticMetricsProvider",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.operationservice.impl.InvocationRegistry"
      },
      "type": "com.hazelcast.internal.metrics.StaticMetricsProvider",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.operationservice.impl.OperationRunnerImpl"
      },
      "type": "com.hazelcast.internal.metrics.StaticMetricsProvider",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.operationservice.impl.OperationServiceImpl"
      },
      "type": "com.hazelcast.internal.metrics.StaticMetricsProvider",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.proxyservice.impl.ProxyServiceImpl"
      },
      "type": "com.hazelcast.internal.metrics.StaticMetricsProvider",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.serialization.impl.DataSerializableSerializer"
      },
      "type": "com.hazelcast.internal.metrics.managementcenter.MetricsDataSerializerHook",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.client.HazelcastClient"
      },
      "type": "com.hazelcast.internal.metrics.metricsets.GarbageCollectionMetricSet$GcStats"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.client.cache.impl.HazelcastClientCachingProvider"
      },
      "type": "com.hazelcast.internal.metrics.metricsets.GarbageCollectionMetricSet$GcStats"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.client.impl.clientside.HazelcastClientInstanceImpl"
      },
      "type": "com.hazelcast.internal.metrics.metricsets.GarbageCollectionMetricSet$GcStats"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.core.Hazelcast"
      },
      "type": "com.hazelcast.internal.metrics.metricsets.GarbageCollectionMetricSet$GcStats"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceFactory"
      },
      "type": "com.hazelcast.internal.metrics.metricsets.GarbageCollectionMetricSet$GcStats"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
      },
      "type": "com.hazelcast.internal.metrics.metricsets.GarbageCollectionMetricSet$GcStats"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.Node"
      },
      "type": "com.hazelcast.internal.metrics.metricsets.GarbageCollectionMetricSet$GcStats"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.metrics.metricsets.GarbageCollectionMetricSet"
      },
      "type": "com.hazelcast.internal.metrics.metricsets.GarbageCollectionMetricSet$GcStats",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.NodeEngineImpl"
      },
      "type": "com.hazelcast.internal.metrics.metricsets.GarbageCollectionMetricSet$GcStats"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.cache.impl.AbstractCacheService"
      },
      "type": "com.hazelcast.internal.monitor.LocalCacheStats",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.collection.impl.list.ListService"
      },
      "type": "com.hazelcast.internal.monitor.impl.AbstractLocalCollectionStats",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.collection.impl.set.SetService"
      },
      "type": "com.hazelcast.internal.monitor.impl.AbstractLocalCollectionStats",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.cache.impl.AbstractCacheService"
      },
      "type": "com.hazelcast.internal.monitor.impl.LocalCacheStatsImpl",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.collection.impl.list.ListService"
      },
      "type": "com.hazelcast.internal.monitor.impl.LocalListStatsImpl",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.map.impl.MapService"
      },
      "type": "com.hazelcast.internal.monitor.impl.LocalMapStatsImpl",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "getMaxGetLatency",
          "parameterTypes": []
        },
        {
          "name": "getMaxPutLatency",
          "parameterTypes": []
        },
        {
          "name": "getMaxRemoveLatency",
          "parameterTypes": []
        },
        {
          "name": "getMaxSetLatency",
          "parameterTypes": []
        },
        {
          "name": "getTotalGetLatency",
          "parameterTypes": []
        },
        {
          "name": "getTotalPutLatency",
          "parameterTypes": []
        },
        {
          "name": "getTotalRemoveLatency",
          "parameterTypes": []
        },
        {
          "name": "getTotalSetLatency",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.collection.impl.queue.QueueService"
      },
      "type": "com.hazelcast.internal.monitor.impl.LocalQueueStatsImpl",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "getEventOperationCount",
          "parameterTypes": []
        },
        {
          "name": "total",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.replicatedmap.impl.ReplicatedMapService"
      },
      "type": "com.hazelcast.internal.monitor.impl.LocalReplicatedMapStatsImpl",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "getMaxGetLatency",
          "parameterTypes": []
        },
        {
          "name": "getMaxPutLatency",
          "parameterTypes": []
        },
        {
          "name": "getMaxRemoveLatency",
          "parameterTypes": []
        },
        {
          "name": "getTotalGetLatency",
          "parameterTypes": []
        },
        {
          "name": "getTotalPutLatency",
          "parameterTypes": []
        },
        {
          "name": "getTotalRemoveLatency",
          "parameterTypes": []
        },
        {
          "name": "total",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.collection.impl.set.SetService"
      },
      "type": "com.hazelcast.internal.monitor.impl.LocalSetStatsImpl",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.topic.impl.TopicService"
      },
      "type": "com.hazelcast.internal.monitor.impl.LocalTopicStatsImpl",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.client.impl.statistics.ClientStatisticsService"
      },
      "type": "com.hazelcast.internal.networking.InboundPipeline"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.metrics.impl.MetricsCollectionCycle"
      },
      "type": "com.hazelcast.internal.networking.InboundPipeline"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.metrics.impl.MetricsRegistryImpl"
      },
      "type": "com.hazelcast.internal.networking.InboundPipeline"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.metrics.impl.MetricsService"
      },
      "type": "com.hazelcast.internal.networking.InboundPipeline"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.networking.nio.NioNetworking"
      },
      "type": "com.hazelcast.internal.networking.InboundPipeline",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.client.impl.statistics.ClientStatisticsService"
      },
      "type": "com.hazelcast.internal.networking.Networking"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.metrics.impl.MetricsCollectionCycle"
      },
      "type": "com.hazelcast.internal.networking.Networking"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.metrics.impl.MetricsRegistryImpl"
      },
      "type": "com.hazelcast.internal.networking.Networking"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.metrics.impl.MetricsService"
      },
      "type": "com.hazelcast.internal.networking.Networking"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.networking.nio.NioNetworking"
      },
      "type": "com.hazelcast.internal.networking.Networking",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.client.impl.statistics.ClientStatisticsService"
      },
      "type": "com.hazelcast.internal.networking.OutboundPipeline"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.metrics.impl.MetricsCollectionCycle"
      },
      "type": "com.hazelcast.internal.networking.OutboundPipeline"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.metrics.impl.MetricsRegistryImpl"
      },
      "type": "com.hazelcast.internal.networking.OutboundPipeline"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.metrics.impl.MetricsService"
      },
      "type": "com.hazelcast.internal.networking.OutboundPipeline"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.networking.nio.NioNetworking"
      },
      "type": "com.hazelcast.internal.networking.OutboundPipeline",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.client.impl.statistics.ClientStatisticsService"
      },
      "type": "com.hazelcast.internal.networking.nio.MigratablePipeline"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.metrics.impl.MetricsCollectionCycle"
      },
      "type": "com.hazelcast.internal.networking.nio.MigratablePipeline"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.metrics.impl.MetricsRegistryImpl"
      },
      "type": "com.hazelcast.internal.networking.nio.MigratablePipeline"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.metrics.impl.MetricsService"
      },
      "type": "com.hazelcast.internal.networking.nio.MigratablePipeline"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.networking.nio.NioNetworking"
      },
      "type": "com.hazelcast.internal.networking.nio.MigratablePipeline",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.client.impl.statistics.ClientStatisticsService"
      },
      "type": "com.hazelcast.internal.networking.nio.NioInboundPipeline"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.metrics.impl.MetricsCollectionCycle"
      },
      "type": "com.hazelcast.internal.networking.nio.NioInboundPipeline"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.metrics.impl.MetricsRegistryImpl"
      },
      "type": "com.hazelcast.internal.networking.nio.NioInboundPipeline"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.metrics.impl.MetricsService"
      },
      "type": "com.hazelcast.internal.networking.nio.NioInboundPipeline"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.networking.nio.NioNetworking"
      },
      "type": "com.hazelcast.internal.networking.nio.NioInboundPipeline",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.client.impl.statistics.ClientStatisticsService"
      },
      "type": "com.hazelcast.internal.networking.nio.NioNetworking"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.metrics.impl.MetricsCollectionCycle"
      },
      "type": "com.hazelcast.internal.networking.nio.NioNetworking"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.metrics.impl.MetricsRegistryImpl"
      },
      "type": "com.hazelcast.internal.networking.nio.NioNetworking"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.metrics.impl.MetricsService"
      },
      "type": "com.hazelcast.internal.networking.nio.NioNetworking"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.networking.nio.NioNetworking"
      },
      "type": "com.hazelcast.internal.networking.nio.NioNetworking",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.client.impl.statistics.ClientStatisticsService"
      },
      "type": "com.hazelcast.internal.networking.nio.NioOutboundPipeline"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.metrics.impl.MetricsCollectionCycle"
      },
      "type": "com.hazelcast.internal.networking.nio.NioOutboundPipeline"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.metrics.impl.MetricsRegistryImpl"
      },
      "type": "com.hazelcast.internal.networking.nio.NioOutboundPipeline"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.metrics.impl.MetricsService"
      },
      "type": "com.hazelcast.internal.networking.nio.NioOutboundPipeline"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.networking.nio.NioNetworking"
      },
      "type": "com.hazelcast.internal.networking.nio.NioOutboundPipeline",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.client.impl.statistics.ClientStatisticsService"
      },
      "type": "com.hazelcast.internal.networking.nio.NioPipeline"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.metrics.impl.MetricsCollectionCycle"
      },
      "type": "com.hazelcast.internal.networking.nio.NioPipeline"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.metrics.impl.MetricsRegistryImpl"
      },
      "type": "com.hazelcast.internal.networking.nio.NioPipeline"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.metrics.impl.MetricsService"
      },
      "type": "com.hazelcast.internal.networking.nio.NioPipeline"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.networking.nio.NioNetworking"
      },
      "type": "com.hazelcast.internal.networking.nio.NioPipeline",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.client.impl.statistics.ClientStatisticsService"
      },
      "type": "com.hazelcast.internal.networking.nio.NioThread"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.metrics.impl.MetricsCollectionCycle"
      },
      "type": "com.hazelcast.internal.networking.nio.NioThread"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.metrics.impl.MetricsRegistryImpl"
      },
      "type": "com.hazelcast.internal.networking.nio.NioThread"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.metrics.impl.MetricsService"
      },
      "type": "com.hazelcast.internal.networking.nio.NioThread"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.networking.nio.NioNetworking"
      },
      "type": "com.hazelcast.internal.networking.nio.NioThread",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "idleTimeMillis",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.client.impl.statistics.ClientStatisticsService"
      },
      "type": "com.hazelcast.internal.networking.nio.iobalancer.IOBalancer"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.metrics.impl.MetricsCollectionCycle"
      },
      "type": "com.hazelcast.internal.networking.nio.iobalancer.IOBalancer"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.metrics.impl.MetricsRegistryImpl"
      },
      "type": "com.hazelcast.internal.networking.nio.iobalancer.IOBalancer"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.metrics.impl.MetricsService"
      },
      "type": "com.hazelcast.internal.networking.nio.iobalancer.IOBalancer"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.networking.nio.NioNetworking"
      },
      "type": "com.hazelcast.internal.networking.nio.iobalancer.IOBalancer",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.nio.ClassLoaderUtil"
      },
      "type": "com.hazelcast.internal.nio.ClassLoaderUtil$IrresolvableConstructor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.client.impl.statistics.ClusterConnectionMetricsProvider"
      },
      "type": "com.hazelcast.internal.nio.Connection",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.server.tcp.TcpServerConnectionManager"
      },
      "type": "com.hazelcast.internal.nio.Connection",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.server.tcp.TcpServerConnectionManager"
      },
      "type": "com.hazelcast.internal.nio.ConnectionListenable",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.client.HazelcastClient"
      },
      "type": "com.hazelcast.internal.nio.ConnectionListener"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.client.cache.impl.HazelcastClientCachingProvider"
      },
      "type": "com.hazelcast.internal.nio.ConnectionListener"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.client.impl.clientside.HazelcastClientInstanceImpl"
      },
      "type": "com.hazelcast.internal.nio.ConnectionListener"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.client.impl.spi.impl.listener.ClientListenerServiceImpl"
      },
      "type": "com.hazelcast.internal.nio.ConnectionListener",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.core.Hazelcast"
      },
      "type": "com.hazelcast.internal.nio.ConnectionListener"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceFactory"
      },
      "type": "com.hazelcast.internal.nio.ConnectionListener"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
      },
      "type": "com.hazelcast.internal.nio.ConnectionListener"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.Node"
      },
      "type": "com.hazelcast.internal.nio.ConnectionListener"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.cluster.impl.ClusterServiceImpl"
      },
      "type": "com.hazelcast.internal.nio.ConnectionListener",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.core.Hazelcast"
      },
      "type": "com.hazelcast.internal.partition.IPartitionService"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceFactory"
      },
      "type": "com.hazelcast.internal.partition.IPartitionService"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
      },
      "type": "com.hazelcast.internal.partition.IPartitionService"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.Node"
      },
      "type": "com.hazelcast.internal.partition.IPartitionService"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.partition.impl.InternalPartitionServiceImpl"
      },
      "type": "com.hazelcast.internal.partition.IPartitionService",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.core.Hazelcast"
      },
      "type": "com.hazelcast.internal.partition.InternalPartitionService"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceFactory"
      },
      "type": "com.hazelcast.internal.partition.InternalPartitionService"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
      },
      "type": "com.hazelcast.internal.partition.InternalPartitionService"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.Node"
      },
      "type": "com.hazelcast.internal.partition.InternalPartitionService"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.partition.impl.InternalPartitionServiceImpl"
      },
      "type": "com.hazelcast.internal.partition.InternalPartitionService",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.core.Hazelcast"
      },
      "type": "com.hazelcast.internal.partition.MigrationAwareService"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.cp.internal.RaftService"
      },
      "type": "com.hazelcast.internal.partition.MigrationAwareService",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.cp.internal.RaftServiceDescriptorProvider$RaftServiceDescriptor"
      },
      "type": "com.hazelcast.internal.partition.MigrationAwareService"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceFactory"
      },
      "type": "com.hazelcast.internal.partition.MigrationAwareService"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
      },
      "type": "com.hazelcast.internal.partition.MigrationAwareService"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.Node"
      },
      "type": "com.hazelcast.internal.partition.MigrationAwareService"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.NodeEngineImpl"
      },
      "type": "com.hazelcast.internal.partition.MigrationAwareService"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.servicemanager.impl.ServiceManagerImpl"
      },
      "type": "com.hazelcast.internal.partition.MigrationAwareService"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.core.Hazelcast"
      },
      "type": "com.hazelcast.internal.partition.PartitionAwareService"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceFactory"
      },
      "type": "com.hazelcast.internal.partition.PartitionAwareService"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
      },
      "type": "com.hazelcast.internal.partition.PartitionAwareService"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.Node"
      },
      "type": "com.hazelcast.internal.partition.PartitionAwareService"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.partition.impl.InternalPartitionServiceImpl"
      },
      "type": "com.hazelcast.internal.partition.PartitionAwareService",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.core.Hazelcast"
      },
      "type": "com.hazelcast.internal.partition.PartitionReplicaVersionManager"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceFactory"
      },
      "type": "com.hazelcast.internal.partition.PartitionReplicaVersionManager"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
      },
      "type": "com.hazelcast.internal.partition.PartitionReplicaVersionManager"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.Node"
      },
      "type": "com.hazelcast.internal.partition.PartitionReplicaVersionManager"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.partition.impl.InternalPartitionServiceImpl"
      },
      "type": "com.hazelcast.internal.partition.PartitionReplicaVersionManager",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.core.Hazelcast"
      },
      "type": "com.hazelcast.internal.partition.impl.InternalPartitionServiceImpl"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceFactory"
      },
      "type": "com.hazelcast.internal.partition.impl.InternalPartitionServiceImpl"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
      },
      "type": "com.hazelcast.internal.partition.impl.InternalPartitionServiceImpl"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.Node"
      },
      "type": "com.hazelcast.internal.partition.impl.InternalPartitionServiceImpl"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.metrics.impl.MetricsService"
      },
      "type": "com.hazelcast.internal.partition.impl.InternalPartitionServiceImpl",
      "methods": [
        {
          "name": "getMaxAllowedBackupCount",
          "parameterTypes": []
        },
        {
          "name": "getMigrationQueueSize",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.partition.impl.InternalPartitionServiceImpl"
      },
      "type": "com.hazelcast.internal.partition.impl.InternalPartitionServiceImpl",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.core.Hazelcast"
      },
      "type": "com.hazelcast.internal.partition.impl.MigrationManager"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceFactory"
      },
      "type": "com.hazelcast.internal.partition.impl.MigrationManager"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
      },
      "type": "com.hazelcast.internal.partition.impl.MigrationManager"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.Node"
      },
      "type": "com.hazelcast.internal.partition.impl.MigrationManager"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.metrics.impl.MetricsService"
      },
      "type": "com.hazelcast.internal.partition.impl.MigrationManager",
      "methods": [
        {
          "name": "migrationActiveProbe",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.partition.impl.InternalPartitionServiceImpl"
      },
      "type": "com.hazelcast.internal.partition.impl.MigrationManager",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.core.Hazelcast"
      },
      "type": "com.hazelcast.internal.partition.impl.MigrationStats"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceFactory"
      },
      "type": "com.hazelcast.internal.partition.impl.MigrationStats"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
      },
      "type": "com.hazelcast.internal.partition.impl.MigrationStats"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.Node"
      },
      "type": "com.hazelcast.internal.partition.impl.MigrationStats"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.partition.impl.InternalPartitionServiceImpl"
      },
      "type": "com.hazelcast.internal.partition.impl.MigrationStats"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.partition.impl.MigrationManager"
      },
      "type": "com.hazelcast.internal.partition.impl.MigrationStats",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.serialization.impl.DataSerializableSerializer"
      },
      "type": "com.hazelcast.internal.partition.impl.PartitionDataSerializerHook",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.core.Hazelcast"
      },
      "type": "com.hazelcast.internal.partition.impl.PartitionReplicaManager"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceFactory"
      },
      "type": "com.hazelcast.internal.partition.impl.PartitionReplicaManager"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
      },
      "type": "com.hazelcast.internal.partition.impl.PartitionReplicaManager"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.Node"
      },
      "type": "com.hazelcast.internal.partition.impl.PartitionReplicaManager"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.partition.impl.InternalPartitionServiceImpl"
      },
      "type": "com.hazelcast.internal.partition.impl.PartitionReplicaManager",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.core.Hazelcast"
      },
      "type": "com.hazelcast.internal.partition.impl.PartitionStateManager"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceFactory"
      },
      "type": "com.hazelcast.internal.partition.impl.PartitionStateManager"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
      },
      "type": "com.hazelcast.internal.partition.impl.PartitionStateManager"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.Node"
      },
      "type": "com.hazelcast.internal.partition.impl.PartitionStateManager"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.metrics.impl.MetricsService"
      },
      "type": "com.hazelcast.internal.partition.impl.PartitionStateManager",
      "methods": [
        {
          "name": "activePartitionCount",
          "parameterTypes": []
        },
        {
          "name": "localPartitionCount",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.partition.impl.InternalPartitionServiceImpl"
      },
      "type": "com.hazelcast.internal.partition.impl.PartitionStateManager",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.serialization.impl.DataSerializableSerializer"
      },
      "type": "com.hazelcast.internal.serialization.impl.compact.schema.SchemaDataSerializerHook",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.server.tcp.TcpServerConnectionManager"
      },
      "type": "com.hazelcast.internal.server.ServerConnection",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.server.tcp.TcpServerConnectionManager"
      },
      "type": "com.hazelcast.internal.server.ServerConnectionManager",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.server.tcp.TcpServer$MetricsProvider"
      },
      "type": "com.hazelcast.internal.server.tcp.TcpServer$MetricsProvider",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.server.tcp.TcpServerAcceptor"
      },
      "type": "com.hazelcast.internal.server.tcp.TcpServerAcceptor",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.server.tcp.TcpServerConnectionManager"
      },
      "type": "com.hazelcast.internal.server.tcp.TcpServerConnection",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.server.tcp.TcpServerConnectionManager"
      },
      "type": "com.hazelcast.internal.server.tcp.TcpServerConnectionManager",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "connectionCount",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.server.tcp.TcpServerConnectionManager"
      },
      "type": "com.hazelcast.internal.server.tcp.TcpServerConnectionManagerBase",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.core.Hazelcast"
      },
      "type": "com.hazelcast.internal.services.ClientAwareService"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceFactory"
      },
      "type": "com.hazelcast.internal.services.ClientAwareService"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
      },
      "type": "com.hazelcast.internal.services.ClientAwareService"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.Node"
      },
      "type": "com.hazelcast.internal.services.ClientAwareService"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.NodeEngineImpl"
      },
      "type": "com.hazelcast.internal.services.ClientAwareService"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.transaction.impl.TransactionManagerServiceImpl"
      },
      "type": "com.hazelcast.internal.services.ClientAwareService",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.core.Hazelcast"
      },
      "type": "com.hazelcast.internal.services.CoreService"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceFactory"
      },
      "type": "com.hazelcast.internal.services.CoreService"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
      },
      "type": "com.hazelcast.internal.services.CoreService"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.Node"
      },
      "type": "com.hazelcast.internal.services.CoreService"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.cluster.impl.ClusterServiceImpl"
      },
      "type": "com.hazelcast.internal.services.CoreService",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.partition.impl.InternalPartitionServiceImpl"
      },
      "type": "com.hazelcast.internal.services.CoreService",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.NodeEngineImpl"
      },
      "type": "com.hazelcast.internal.services.CoreService"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.proxyservice.impl.ProxyServiceImpl"
      },
      "type": "com.hazelcast.internal.services.CoreService",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.core.Hazelcast"
      },
      "type": "com.hazelcast.internal.services.GracefulShutdownAwareService"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.cp.internal.RaftService"
      },
      "type": "com.hazelcast.internal.services.GracefulShutdownAwareService",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.cp.internal.RaftServiceDescriptorProvider$RaftServiceDescriptor"
      },
      "type": "com.hazelcast.internal.services.GracefulShutdownAwareService"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceFactory"
      },
      "type": "com.hazelcast.internal.services.GracefulShutdownAwareService"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
      },
      "type": "com.hazelcast.internal.services.GracefulShutdownAwareService"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.Node"
      },
      "type": "com.hazelcast.internal.services.GracefulShutdownAwareService"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.partition.impl.InternalPartitionServiceImpl"
      },
      "type": "com.hazelcast.internal.services.GracefulShutdownAwareService",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.NodeEngineImpl"
      },
      "type": "com.hazelcast.internal.services.GracefulShutdownAwareService"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.servicemanager.impl.ServiceManagerImpl"
      },
      "type": "com.hazelcast.internal.services.GracefulShutdownAwareService"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.core.Hazelcast"
      },
      "type": "com.hazelcast.internal.services.ManagedService"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.cp.internal.RaftService"
      },
      "type": "com.hazelcast.internal.services.ManagedService",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.cp.internal.RaftServiceDescriptorProvider$RaftServiceDescriptor"
      },
      "type": "com.hazelcast.internal.services.ManagedService"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceFactory"
      },
      "type": "com.hazelcast.internal.services.ManagedService"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
      },
      "type": "com.hazelcast.internal.services.ManagedService"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.Node"
      },
      "type": "com.hazelcast.internal.services.ManagedService"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.cluster.impl.ClusterServiceImpl"
      },
      "type": "com.hazelcast.internal.services.ManagedService",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.partition.impl.InternalPartitionServiceImpl"
      },
      "type": "com.hazelcast.internal.services.ManagedService",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.NodeEngineImpl"
      },
      "type": "com.hazelcast.internal.services.ManagedService"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.servicemanager.impl.ServiceManagerImpl"
      },
      "type": "com.hazelcast.internal.services.ManagedService"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.transaction.impl.TransactionManagerServiceImpl"
      },
      "type": "com.hazelcast.internal.services.ManagedService",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.core.Hazelcast"
      },
      "type": "com.hazelcast.internal.services.MembershipAwareService"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.cp.internal.RaftService"
      },
      "type": "com.hazelcast.internal.services.MembershipAwareService",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.cp.internal.RaftServiceDescriptorProvider$RaftServiceDescriptor"
      },
      "type": "com.hazelcast.internal.services.MembershipAwareService"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceFactory"
      },
      "type": "com.hazelcast.internal.services.MembershipAwareService"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
      },
      "type": "com.hazelcast.internal.services.MembershipAwareService"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.Node"
      },
      "type": "com.hazelcast.internal.services.MembershipAwareService"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.NodeEngineImpl"
      },
      "type": "com.hazelcast.internal.services.MembershipAwareService"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.servicemanager.impl.ServiceManagerImpl"
      },
      "type": "com.hazelcast.internal.services.MembershipAwareService"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.transaction.impl.TransactionManagerServiceImpl"
      },
      "type": "com.hazelcast.internal.services.MembershipAwareService",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.core.Hazelcast"
      },
      "type": "com.hazelcast.internal.services.PostJoinAwareService"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceFactory"
      },
      "type": "com.hazelcast.internal.services.PostJoinAwareService"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
      },
      "type": "com.hazelcast.internal.services.PostJoinAwareService"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.Node"
      },
      "type": "com.hazelcast.internal.services.PostJoinAwareService"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.NodeEngineImpl"
      },
      "type": "com.hazelcast.internal.services.PostJoinAwareService"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.eventservice.impl.EventServiceImpl"
      },
      "type": "com.hazelcast.internal.services.PostJoinAwareService",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.proxyservice.impl.ProxyServiceImpl"
      },
      "type": "com.hazelcast.internal.services.PostJoinAwareService",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.core.Hazelcast"
      },
      "type": "com.hazelcast.internal.services.PreJoinAwareService"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.cp.internal.RaftService"
      },
      "type": "com.hazelcast.internal.services.PreJoinAwareService",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.cp.internal.RaftServiceDescriptorProvider$RaftServiceDescriptor"
      },
      "type": "com.hazelcast.internal.services.PreJoinAwareService"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceFactory"
      },
      "type": "com.hazelcast.internal.services.PreJoinAwareService"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
      },
      "type": "com.hazelcast.internal.services.PreJoinAwareService"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.Node"
      },
      "type": "com.hazelcast.internal.services.PreJoinAwareService"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.NodeEngineImpl"
      },
      "type": "com.hazelcast.internal.services.PreJoinAwareService"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.eventservice.impl.EventServiceImpl"
      },
      "type": "com.hazelcast.internal.services.PreJoinAwareService",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.servicemanager.impl.ServiceManagerImpl"
      },
      "type": "com.hazelcast.internal.services.PreJoinAwareService"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.core.Hazelcast"
      },
      "type": "com.hazelcast.internal.services.TransactionalService"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceFactory"
      },
      "type": "com.hazelcast.internal.services.TransactionalService"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
      },
      "type": "com.hazelcast.internal.services.TransactionalService"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.Node"
      },
      "type": "com.hazelcast.internal.services.TransactionalService"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.cluster.impl.ClusterServiceImpl"
      },
      "type": "com.hazelcast.internal.services.TransactionalService",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.serialization.impl.DataSerializableSerializer"
      },
      "type": "com.hazelcast.internal.usercodedeployment.impl.UserCodeDeploymentSerializerHook",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.serialization.impl.DataSerializableSerializer"
      },
      "type": "com.hazelcast.internal.util.collection.UtilCollectionSerializerHook",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.util.counters.SwCounter$UnsafeSwCounter"
      },
      "type": "com.hazelcast.internal.util.counters.SwCounter$UnsafeSwCounter",
      "fields": [
        {
          "name": "value"
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.executionservice.impl.ExecutionServiceImpl$MetricsProvider"
      },
      "type": "com.hazelcast.internal.util.executor.CachedExecutorServiceDelegate",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.client.impl.statistics.ClientStatisticsService"
      },
      "type": "com.hazelcast.internal.util.executor.HazelcastManagedThread"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.core.Hazelcast"
      },
      "type": "com.hazelcast.internal.util.executor.HazelcastManagedThread"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceFactory"
      },
      "type": "com.hazelcast.internal.util.executor.HazelcastManagedThread"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
      },
      "type": "com.hazelcast.internal.util.executor.HazelcastManagedThread"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.Node"
      },
      "type": "com.hazelcast.internal.util.executor.HazelcastManagedThread"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.metrics.impl.MetricsCollectionCycle"
      },
      "type": "com.hazelcast.internal.util.executor.HazelcastManagedThread"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.metrics.impl.MetricsRegistryImpl"
      },
      "type": "com.hazelcast.internal.util.executor.HazelcastManagedThread"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.metrics.impl.MetricsService"
      },
      "type": "com.hazelcast.internal.util.executor.HazelcastManagedThread"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.networking.nio.NioNetworking"
      },
      "type": "com.hazelcast.internal.util.executor.HazelcastManagedThread",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.NodeEngineImpl"
      },
      "type": "com.hazelcast.internal.util.executor.HazelcastManagedThread"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.operationexecutor.impl.OperationExecutorImpl"
      },
      "type": "com.hazelcast.internal.util.executor.HazelcastManagedThread"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.operationexecutor.impl.OperationThread"
      },
      "type": "com.hazelcast.internal.util.executor.HazelcastManagedThread",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.operationservice.impl.OperationServiceImpl"
      },
      "type": "com.hazelcast.internal.util.executor.HazelcastManagedThread"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.executionservice.impl.ExecutionServiceImpl$MetricsProvider"
      },
      "type": "com.hazelcast.internal.util.executor.ManagedExecutorService",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "getCompletedTaskCount",
          "parameterTypes": []
        },
        {
          "name": "getMaximumPoolSize",
          "parameterTypes": []
        },
        {
          "name": "getPoolSize",
          "parameterTypes": []
        },
        {
          "name": "getQueueSize",
          "parameterTypes": []
        },
        {
          "name": "getRemainingQueueCapacity",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.executionservice.impl.ExecutionServiceImpl$MetricsProvider"
      },
      "type": "com.hazelcast.internal.util.executor.NamedThreadPoolExecutor",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.serialization.impl.SerializerHookLoader"
      },
      "type": "com.hazelcast.jet.accumulator.AccumulatorSerializerHooks$DoubleAccHook",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.serialization.impl.SerializerHookLoader"
      },
      "type": "com.hazelcast.jet.accumulator.AccumulatorSerializerHooks$LinTrendAccHook",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.serialization.impl.SerializerHookLoader"
      },
      "type": "com.hazelcast.jet.accumulator.AccumulatorSerializerHooks$LongAccHook",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.serialization.impl.SerializerHookLoader"
      },
      "type": "com.hazelcast.jet.accumulator.AccumulatorSerializerHooks$LongDoubleAccHook",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.serialization.impl.SerializerHookLoader"
      },
      "type": "com.hazelcast.jet.accumulator.AccumulatorSerializerHooks$LongLongAccHook",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.serialization.impl.SerializerHookLoader"
      },
      "type": "com.hazelcast.jet.accumulator.AccumulatorSerializerHooks$MutableReferenceHook",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.serialization.impl.SerializerHookLoader"
      },
      "type": "com.hazelcast.jet.accumulator.AccumulatorSerializerHooks$PickAnyAccHook",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.serialization.impl.DataSerializableSerializer"
      },
      "type": "com.hazelcast.jet.config.JetConfigDataSerializerHook",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.serialization.impl.SerializerHookLoader"
      },
      "type": "com.hazelcast.jet.core.CoreSerializerHooks$JetEventHook",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.serialization.impl.SerializerHookLoader"
      },
      "type": "com.hazelcast.jet.core.CoreSerializerHooks$WatermarkHook",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.serialization.impl.DataSerializableSerializer"
      },
      "type": "com.hazelcast.jet.core.JetDataSerializerHook",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.serialization.impl.DataSerializableSerializer"
      },
      "type": "com.hazelcast.jet.core.metrics.MetricsDataSerializerHook",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.serialization.impl.SerializerHookLoader"
      },
      "type": "com.hazelcast.jet.datamodel.DataModelSerializerHooks$ItemsByTagHook",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.serialization.impl.SerializerHookLoader"
      },
      "type": "com.hazelcast.jet.datamodel.DataModelSerializerHooks$KeyedWindowResultHook",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.serialization.impl.SerializerHookLoader"
      },
      "type": "com.hazelcast.jet.datamodel.DataModelSerializerHooks$TagHook",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.serialization.impl.SerializerHookLoader"
      },
      "type": "com.hazelcast.jet.datamodel.DataModelSerializerHooks$TimestampedItemHook",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.serialization.impl.SerializerHookLoader"
      },
      "type": "com.hazelcast.jet.datamodel.DataModelSerializerHooks$Tuple2Hook",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.serialization.impl.SerializerHookLoader"
      },
      "type": "com.hazelcast.jet.datamodel.DataModelSerializerHooks$Tuple3Hook",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.serialization.impl.SerializerHookLoader"
      },
      "type": "com.hazelcast.jet.datamodel.DataModelSerializerHooks$Tuple4Hook",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.serialization.impl.SerializerHookLoader"
      },
      "type": "com.hazelcast.jet.datamodel.DataModelSerializerHooks$Tuple5Hook",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.serialization.impl.SerializerHookLoader"
      },
      "type": "com.hazelcast.jet.datamodel.DataModelSerializerHooks$WindowResultHook",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.serialization.impl.DataSerializableSerializer"
      },
      "type": "com.hazelcast.jet.impl.aggregate.AggregateDataSerializerHook",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.client.impl.CompositeMessageTaskFactory"
      },
      "type": "com.hazelcast.jet.impl.client.protocol.task.JetMessageTaskFactoryProvider",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "com.hazelcast.spi.impl.NodeEngine"
          ]
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.serialization.impl.SerializerHookLoader"
      },
      "type": "com.hazelcast.jet.impl.execution.ExecutionSerializerHooks$BroadcastEntryHook",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.serialization.impl.SerializerHookLoader"
      },
      "type": "com.hazelcast.jet.impl.execution.ExecutionSerializerHooks$BroadcastKeyHook",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.serialization.impl.SerializerHookLoader"
      },
      "type": "com.hazelcast.jet.impl.execution.ExecutionSerializerHooks$DoneItemHook",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.serialization.impl.SerializerHookLoader"
      },
      "type": "com.hazelcast.jet.impl.execution.ExecutionSerializerHooks$SnapshotBarrierHook",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.serialization.impl.SerializerHookLoader"
      },
      "type": "com.hazelcast.jet.impl.execution.init.CustomClassLoadedObject$Hook",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.serialization.impl.DataSerializableSerializer"
      },
      "type": "com.hazelcast.jet.impl.execution.init.JetInitDataSerializerHook",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.serialization.impl.DataSerializableSerializer"
      },
      "type": "com.hazelcast.jet.impl.metrics.JetMetricsDataSerializerHook",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.serialization.impl.SerializerHookLoader"
      },
      "type": "com.hazelcast.jet.impl.metrics.JetMetricsDataSerializerHook"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.serialization.impl.DataSerializableSerializer"
      },
      "type": "com.hazelcast.jet.impl.observer.JetObserverDataSerializerHook",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.serialization.impl.SerializerHookLoader"
      },
      "type": "com.hazelcast.jet.impl.observer.JetObserverDataSerializerHook"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.serialization.impl.DataSerializableSerializer"
      },
      "type": "com.hazelcast.jet.impl.util.FunctionsSerializerHook",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.serialization.impl.SerializerHookLoader"
      },
      "type": "com.hazelcast.jet.json.JsonSerializerHooks$DeferredMapHook",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.serialization.impl.DataSerializableSerializer"
      },
      "type": "com.hazelcast.json.internal.JsonDataSerializerHook",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.discovery.impl.DefaultDiscoveryService"
      },
      "type": "com.hazelcast.kubernetes.HazelcastKubernetesDiscoveryStrategyFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.config.InstanceTrackingConfig"
      },
      "type": "com.hazelcast.license.util.LicenseHelper"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.map.impl.MapService"
      },
      "type": "com.hazelcast.map.LocalMapStats",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.replicatedmap.impl.ReplicatedMapService"
      },
      "type": "com.hazelcast.map.LocalMapStats",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.serialization.impl.DataSerializableSerializer"
      },
      "type": "com.hazelcast.map.impl.MapDataSerializerHook",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.serialization.impl.DataSerializableSerializer"
      },
      "type": "com.hazelcast.multimap.impl.MultiMapDataSerializerHook",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.serialization.impl.DataSerializableSerializer"
      },
      "type": "com.hazelcast.projection.impl.ProjectionDataSerializerHook",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.query.impl.predicates.SqlPredicate"
      },
      "type": "com.hazelcast.query.impl.predicates.AndPredicate",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.serialization.impl.DataSerializableSerializer"
      },
      "type": "com.hazelcast.query.impl.predicates.PredicateDataSerializerHook",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.replicatedmap.impl.ReplicatedMapService"
      },
      "type": "com.hazelcast.replicatedmap.LocalReplicatedMapStats",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.serialization.impl.DataSerializableSerializer"
      },
      "type": "com.hazelcast.replicatedmap.impl.operation.ReplicatedMapDataSerializerHook",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.serialization.impl.DataSerializableSerializer"
      },
      "type": "com.hazelcast.ringbuffer.impl.RingbufferDataSerializerHook",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.serialization.impl.DataSerializableSerializer"
      },
      "type": "com.hazelcast.scheduledexecutor.impl.ScheduledExecutorDataSerializerHook",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.discovery.impl.DefaultDiscoveryService"
      },
      "type": "com.hazelcast.spi.discovery.multicast.MulticastDiscoveryStrategyFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.serialization.impl.DataSerializableSerializer"
      },
      "type": "com.hazelcast.spi.impl.SpiDataSerializerHook",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.core.Hazelcast"
      },
      "type": "com.hazelcast.spi.impl.eventservice.EventPublishingService"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.cp.internal.RaftService"
      },
      "type": "com.hazelcast.spi.impl.eventservice.EventPublishingService",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.cp.internal.RaftServiceDescriptorProvider$RaftServiceDescriptor"
      },
      "type": "com.hazelcast.spi.impl.eventservice.EventPublishingService"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceFactory"
      },
      "type": "com.hazelcast.spi.impl.eventservice.EventPublishingService"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
      },
      "type": "com.hazelcast.spi.impl.eventservice.EventPublishingService"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.Node"
      },
      "type": "com.hazelcast.spi.impl.eventservice.EventPublishingService"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.cluster.impl.ClusterServiceImpl"
      },
      "type": "com.hazelcast.spi.impl.eventservice.EventPublishingService",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.partition.impl.InternalPartitionServiceImpl"
      },
      "type": "com.hazelcast.spi.impl.eventservice.EventPublishingService",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.NodeEngineImpl"
      },
      "type": "com.hazelcast.spi.impl.eventservice.EventPublishingService"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.proxyservice.impl.ProxyServiceImpl"
      },
      "type": "com.hazelcast.spi.impl.eventservice.EventPublishingService",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.servicemanager.impl.ServiceManagerImpl"
      },
      "type": "com.hazelcast.spi.impl.eventservice.EventPublishingService"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.core.Hazelcast"
      },
      "type": "com.hazelcast.spi.impl.eventservice.EventService"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceFactory"
      },
      "type": "com.hazelcast.spi.impl.eventservice.EventService"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
      },
      "type": "com.hazelcast.spi.impl.eventservice.EventService"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.Node"
      },
      "type": "com.hazelcast.spi.impl.eventservice.EventService"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.NodeEngineImpl"
      },
      "type": "com.hazelcast.spi.impl.eventservice.EventService"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.eventservice.impl.EventServiceImpl"
      },
      "type": "com.hazelcast.spi.impl.eventservice.EventService",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.core.Hazelcast"
      },
      "type": "com.hazelcast.spi.impl.eventservice.impl.EventServiceImpl"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceFactory"
      },
      "type": "com.hazelcast.spi.impl.eventservice.impl.EventServiceImpl"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
      },
      "type": "com.hazelcast.spi.impl.eventservice.impl.EventServiceImpl"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.Node"
      },
      "type": "com.hazelcast.spi.impl.eventservice.impl.EventServiceImpl"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.metrics.impl.MetricsService"
      },
      "type": "com.hazelcast.spi.impl.eventservice.impl.EventServiceImpl",
      "methods": [
        {
          "name": "eventsProcessed",
          "parameterTypes": []
        },
        {
          "name": "getEventQueueSize",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.NodeEngineImpl"
      },
      "type": "com.hazelcast.spi.impl.eventservice.impl.EventServiceImpl"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.eventservice.impl.EventServiceImpl"
      },
      "type": "com.hazelcast.spi.impl.eventservice.impl.EventServiceImpl",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.core.Hazelcast"
      },
      "type": "com.hazelcast.spi.impl.eventservice.impl.EventServiceSegment"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.DefaultNodeExtension"
      },
      "type": "com.hazelcast.spi.impl.eventservice.impl.EventServiceSegment"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceFactory"
      },
      "type": "com.hazelcast.spi.impl.eventservice.impl.EventServiceSegment"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
      },
      "type": "com.hazelcast.spi.impl.eventservice.impl.EventServiceSegment"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.Node"
      },
      "type": "com.hazelcast.spi.impl.eventservice.impl.EventServiceSegment"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.cluster.impl.ClusterServiceImpl"
      },
      "type": "com.hazelcast.spi.impl.eventservice.impl.EventServiceSegment",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.map.impl.MapServiceConstructor"
      },
      "type": "com.hazelcast.spi.impl.eventservice.impl.EventServiceSegment"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.map.impl.MapServiceConstructor$$Lambda$1553/0x0000000800ecf330"
      },
      "type": "com.hazelcast.spi.impl.eventservice.impl.EventServiceSegment"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.map.impl.MapServiceContextImpl"
      },
      "type": "com.hazelcast.spi.impl.eventservice.impl.EventServiceSegment"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.map.impl.querycache.NodeQueryCacheContext"
      },
      "type": "com.hazelcast.spi.impl.eventservice.impl.EventServiceSegment"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.map.impl.querycache.publisher.DefaultPublisherContext"
      },
      "type": "com.hazelcast.spi.impl.eventservice.impl.EventServiceSegment"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.NodeEngineImpl"
      },
      "type": "com.hazelcast.spi.impl.eventservice.impl.EventServiceSegment"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.servicemanager.impl.ServiceManagerImpl"
      },
      "type": "com.hazelcast.spi.impl.eventservice.impl.EventServiceSegment"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.client.HazelcastClient"
      },
      "type": "com.hazelcast.spi.impl.executionservice.TaskScheduler"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.client.cache.impl.HazelcastClientCachingProvider"
      },
      "type": "com.hazelcast.spi.impl.executionservice.TaskScheduler"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.client.impl.clientside.HazelcastClientInstanceImpl"
      },
      "type": "com.hazelcast.spi.impl.executionservice.TaskScheduler"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.client.impl.spi.impl.ClientExecutionServiceImpl"
      },
      "type": "com.hazelcast.spi.impl.executionservice.TaskScheduler",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.serialization.impl.DataSerializableSerializer"
      },
      "type": "com.hazelcast.spi.impl.merge.SplitBrainDataSerializerHook",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.core.Hazelcast"
      },
      "type": "com.hazelcast.spi.impl.operationexecutor.OperationExecutor"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceFactory"
      },
      "type": "com.hazelcast.spi.impl.operationexecutor.OperationExecutor"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
      },
      "type": "com.hazelcast.spi.impl.operationexecutor.OperationExecutor"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.Node"
      },
      "type": "com.hazelcast.spi.impl.operationexecutor.OperationExecutor"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.NodeEngineImpl"
      },
      "type": "com.hazelcast.spi.impl.operationexecutor.OperationExecutor"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.operationexecutor.impl.OperationExecutorImpl"
      },
      "type": "com.hazelcast.spi.impl.operationexecutor.OperationExecutor",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.operationservice.impl.OperationServiceImpl"
      },
      "type": "com.hazelcast.spi.impl.operationexecutor.OperationExecutor"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.client.impl.statistics.ClientStatisticsService"
      },
      "type": "com.hazelcast.spi.impl.operationexecutor.OperationHostileThread"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.metrics.impl.MetricsCollectionCycle"
      },
      "type": "com.hazelcast.spi.impl.operationexecutor.OperationHostileThread"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.metrics.impl.MetricsRegistryImpl"
      },
      "type": "com.hazelcast.spi.impl.operationexecutor.OperationHostileThread"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.metrics.impl.MetricsService"
      },
      "type": "com.hazelcast.spi.impl.operationexecutor.OperationHostileThread"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.networking.nio.NioNetworking"
      },
      "type": "com.hazelcast.spi.impl.operationexecutor.OperationHostileThread",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.core.Hazelcast"
      },
      "type": "com.hazelcast.spi.impl.operationexecutor.OperationRunner"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceFactory"
      },
      "type": "com.hazelcast.spi.impl.operationexecutor.OperationRunner"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
      },
      "type": "com.hazelcast.spi.impl.operationexecutor.OperationRunner"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.Node"
      },
      "type": "com.hazelcast.spi.impl.operationexecutor.OperationRunner"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.NodeEngineImpl"
      },
      "type": "com.hazelcast.spi.impl.operationexecutor.OperationRunner"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.operationexecutor.impl.OperationExecutorImpl"
      },
      "type": "com.hazelcast.spi.impl.operationexecutor.OperationRunner"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.operationservice.impl.OperationRunnerImpl"
      },
      "type": "com.hazelcast.spi.impl.operationexecutor.OperationRunner",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.operationservice.impl.OperationServiceImpl"
      },
      "type": "com.hazelcast.spi.impl.operationexecutor.OperationRunner"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.core.Hazelcast"
      },
      "type": "com.hazelcast.spi.impl.operationexecutor.impl.GenericOperationThread"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceFactory"
      },
      "type": "com.hazelcast.spi.impl.operationexecutor.impl.GenericOperationThread"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
      },
      "type": "com.hazelcast.spi.impl.operationexecutor.impl.GenericOperationThread"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.Node"
      },
      "type": "com.hazelcast.spi.impl.operationexecutor.impl.GenericOperationThread"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.NodeEngineImpl"
      },
      "type": "com.hazelcast.spi.impl.operationexecutor.impl.GenericOperationThread"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.operationexecutor.impl.OperationExecutorImpl"
      },
      "type": "com.hazelcast.spi.impl.operationexecutor.impl.GenericOperationThread"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.operationexecutor.impl.OperationThread"
      },
      "type": "com.hazelcast.spi.impl.operationexecutor.impl.GenericOperationThread",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.operationservice.impl.OperationServiceImpl"
      },
      "type": "com.hazelcast.spi.impl.operationexecutor.impl.GenericOperationThread"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.core.Hazelcast"
      },
      "type": "com.hazelcast.spi.impl.operationexecutor.impl.OperationExecutorImpl"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceFactory"
      },
      "type": "com.hazelcast.spi.impl.operationexecutor.impl.OperationExecutorImpl"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
      },
      "type": "com.hazelcast.spi.impl.operationexecutor.impl.OperationExecutorImpl"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.Node"
      },
      "type": "com.hazelcast.spi.impl.operationexecutor.impl.OperationExecutorImpl"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.metrics.impl.MetricsService"
      },
      "type": "com.hazelcast.spi.impl.operationexecutor.impl.OperationExecutorImpl",
      "methods": [
        {
          "name": "getExecutedOperationCount",
          "parameterTypes": []
        },
        {
          "name": "getGenericPriorityQueueSize",
          "parameterTypes": []
        },
        {
          "name": "getGenericQueueSize",
          "parameterTypes": []
        },
        {
          "name": "getGenericThreadCount",
          "parameterTypes": []
        },
        {
          "name": "getPartitionThreadCount",
          "parameterTypes": []
        },
        {
          "name": "getPriorityQueueSize",
          "parameterTypes": []
        },
        {
          "name": "getQueueSize",
          "parameterTypes": []
        },
        {
          "name": "getRunningGenericOperationCount",
          "parameterTypes": []
        },
        {
          "name": "getRunningOperationCount",
          "parameterTypes": []
        },
        {
          "name": "getRunningPartitionOperationCount",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.NodeEngineImpl"
      },
      "type": "com.hazelcast.spi.impl.operationexecutor.impl.OperationExecutorImpl"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.operationexecutor.impl.OperationExecutorImpl"
      },
      "type": "com.hazelcast.spi.impl.operationexecutor.impl.OperationExecutorImpl",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.operationservice.impl.OperationServiceImpl"
      },
      "type": "com.hazelcast.spi.impl.operationexecutor.impl.OperationExecutorImpl"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.core.Hazelcast"
      },
      "type": "com.hazelcast.spi.impl.operationexecutor.impl.OperationThread"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceFactory"
      },
      "type": "com.hazelcast.spi.impl.operationexecutor.impl.OperationThread"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
      },
      "type": "com.hazelcast.spi.impl.operationexecutor.impl.OperationThread"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.Node"
      },
      "type": "com.hazelcast.spi.impl.operationexecutor.impl.OperationThread"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.NodeEngineImpl"
      },
      "type": "com.hazelcast.spi.impl.operationexecutor.impl.OperationThread"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.operationexecutor.impl.OperationExecutorImpl"
      },
      "type": "com.hazelcast.spi.impl.operationexecutor.impl.OperationThread"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.operationexecutor.impl.OperationThread"
      },
      "type": "com.hazelcast.spi.impl.operationexecutor.impl.OperationThread",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.operationservice.impl.OperationServiceImpl"
      },
      "type": "com.hazelcast.spi.impl.operationexecutor.impl.OperationThread"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.core.Hazelcast"
      },
      "type": "com.hazelcast.spi.impl.operationexecutor.impl.PartitionOperationThread"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceFactory"
      },
      "type": "com.hazelcast.spi.impl.operationexecutor.impl.PartitionOperationThread"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
      },
      "type": "com.hazelcast.spi.impl.operationexecutor.impl.PartitionOperationThread"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.Node"
      },
      "type": "com.hazelcast.spi.impl.operationexecutor.impl.PartitionOperationThread"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.metrics.impl.MetricsService"
      },
      "type": "com.hazelcast.spi.impl.operationexecutor.impl.PartitionOperationThread",
      "methods": [
        {
          "name": "normalPendingCount",
          "parameterTypes": []
        },
        {
          "name": "priorityPendingCount",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.NodeEngineImpl"
      },
      "type": "com.hazelcast.spi.impl.operationexecutor.impl.PartitionOperationThread"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.operationexecutor.impl.OperationExecutorImpl"
      },
      "type": "com.hazelcast.spi.impl.operationexecutor.impl.PartitionOperationThread"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.operationexecutor.impl.OperationThread"
      },
      "type": "com.hazelcast.spi.impl.operationexecutor.impl.PartitionOperationThread",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.operationservice.impl.OperationServiceImpl"
      },
      "type": "com.hazelcast.spi.impl.operationexecutor.impl.PartitionOperationThread"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.core.Hazelcast"
      },
      "type": "com.hazelcast.spi.impl.operationparker.OperationParker"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceFactory"
      },
      "type": "com.hazelcast.spi.impl.operationparker.OperationParker"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
      },
      "type": "com.hazelcast.spi.impl.operationparker.OperationParker"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.Node"
      },
      "type": "com.hazelcast.spi.impl.operationparker.OperationParker"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.NodeEngineImpl"
      },
      "type": "com.hazelcast.spi.impl.operationparker.OperationParker"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.operationparker.impl.OperationParkerImpl"
      },
      "type": "com.hazelcast.spi.impl.operationparker.OperationParker",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.core.Hazelcast"
      },
      "type": "com.hazelcast.spi.impl.operationparker.impl.OperationParkerImpl"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceFactory"
      },
      "type": "com.hazelcast.spi.impl.operationparker.impl.OperationParkerImpl"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
      },
      "type": "com.hazelcast.spi.impl.operationparker.impl.OperationParkerImpl"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.Node"
      },
      "type": "com.hazelcast.spi.impl.operationparker.impl.OperationParkerImpl"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.metrics.impl.MetricsService"
      },
      "type": "com.hazelcast.spi.impl.operationparker.impl.OperationParkerImpl",
      "methods": [
        {
          "name": "getParkQueueCount",
          "parameterTypes": []
        },
        {
          "name": "getTotalParkedOperationCount",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.NodeEngineImpl"
      },
      "type": "com.hazelcast.spi.impl.operationparker.impl.OperationParkerImpl"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.operationparker.impl.OperationParkerImpl"
      },
      "type": "com.hazelcast.spi.impl.operationparker.impl.OperationParkerImpl",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.core.Hazelcast"
      },
      "type": "com.hazelcast.spi.impl.operationservice.LiveOperationsTracker"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceFactory"
      },
      "type": "com.hazelcast.spi.impl.operationservice.LiveOperationsTracker"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
      },
      "type": "com.hazelcast.spi.impl.operationservice.LiveOperationsTracker"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.Node"
      },
      "type": "com.hazelcast.spi.impl.operationservice.LiveOperationsTracker"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.NodeEngineImpl"
      },
      "type": "com.hazelcast.spi.impl.operationservice.LiveOperationsTracker"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.operationexecutor.impl.OperationExecutorImpl"
      },
      "type": "com.hazelcast.spi.impl.operationservice.LiveOperationsTracker",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.operationparker.impl.OperationParkerImpl"
      },
      "type": "com.hazelcast.spi.impl.operationservice.LiveOperationsTracker",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.operationservice.impl.OperationServiceImpl"
      },
      "type": "com.hazelcast.spi.impl.operationservice.LiveOperationsTracker",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.core.Hazelcast"
      },
      "type": "com.hazelcast.spi.impl.operationservice.OperationService"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceFactory"
      },
      "type": "com.hazelcast.spi.impl.operationservice.OperationService"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
      },
      "type": "com.hazelcast.spi.impl.operationservice.OperationService"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.Node"
      },
      "type": "com.hazelcast.spi.impl.operationservice.OperationService"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.NodeEngineImpl"
      },
      "type": "com.hazelcast.spi.impl.operationservice.OperationService"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.operationservice.impl.OperationServiceImpl"
      },
      "type": "com.hazelcast.spi.impl.operationservice.OperationService",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.core.Hazelcast"
      },
      "type": "com.hazelcast.spi.impl.operationservice.impl.InboundResponseHandlerSupplier"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceFactory"
      },
      "type": "com.hazelcast.spi.impl.operationservice.impl.InboundResponseHandlerSupplier"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
      },
      "type": "com.hazelcast.spi.impl.operationservice.impl.InboundResponseHandlerSupplier"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.Node"
      },
      "type": "com.hazelcast.spi.impl.operationservice.impl.InboundResponseHandlerSupplier"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.metrics.impl.MetricsService"
      },
      "type": "com.hazelcast.spi.impl.operationservice.impl.InboundResponseHandlerSupplier",
      "methods": [
        {
          "name": "responseQueueSize",
          "parameterTypes": []
        },
        {
          "name": "responsesBackup",
          "parameterTypes": []
        },
        {
          "name": "responsesError",
          "parameterTypes": []
        },
        {
          "name": "responsesMissing",
          "parameterTypes": []
        },
        {
          "name": "responsesNormal",
          "parameterTypes": []
        },
        {
          "name": "responsesTimeout",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.NodeEngineImpl"
      },
      "type": "com.hazelcast.spi.impl.operationservice.impl.InboundResponseHandlerSupplier"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.operationservice.impl.InboundResponseHandlerSupplier"
      },
      "type": "com.hazelcast.spi.impl.operationservice.impl.InboundResponseHandlerSupplier",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.operationservice.impl.OperationServiceImpl"
      },
      "type": "com.hazelcast.spi.impl.operationservice.impl.InboundResponseHandlerSupplier"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.core.Hazelcast"
      },
      "type": "com.hazelcast.spi.impl.operationservice.impl.InvocationMonitor"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceFactory"
      },
      "type": "com.hazelcast.spi.impl.operationservice.impl.InvocationMonitor"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
      },
      "type": "com.hazelcast.spi.impl.operationservice.impl.InvocationMonitor"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.Node"
      },
      "type": "com.hazelcast.spi.impl.operationservice.impl.InvocationMonitor"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.NodeEngineImpl"
      },
      "type": "com.hazelcast.spi.impl.operationservice.impl.InvocationMonitor"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.operationservice.impl.InvocationMonitor"
      },
      "type": "com.hazelcast.spi.impl.operationservice.impl.InvocationMonitor",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.operationservice.impl.OperationServiceImpl"
      },
      "type": "com.hazelcast.spi.impl.operationservice.impl.InvocationMonitor"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.core.Hazelcast"
      },
      "type": "com.hazelcast.spi.impl.operationservice.impl.InvocationRegistry"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceFactory"
      },
      "type": "com.hazelcast.spi.impl.operationservice.impl.InvocationRegistry"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
      },
      "type": "com.hazelcast.spi.impl.operationservice.impl.InvocationRegistry"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.Node"
      },
      "type": "com.hazelcast.spi.impl.operationservice.impl.InvocationRegistry"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.metrics.impl.MethodProbe$DoubleMethodProbe"
      },
      "type": "com.hazelcast.spi.impl.operationservice.impl.InvocationRegistry",
      "methods": [
        {
          "name": "invocationsUsedPercentage",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.metrics.impl.MetricsService"
      },
      "type": "com.hazelcast.spi.impl.operationservice.impl.InvocationRegistry",
      "methods": [
        {
          "name": "getLastCallId",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.NodeEngineImpl"
      },
      "type": "com.hazelcast.spi.impl.operationservice.impl.InvocationRegistry"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.operationservice.impl.InvocationRegistry"
      },
      "type": "com.hazelcast.spi.impl.operationservice.impl.InvocationRegistry",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.operationservice.impl.OperationServiceImpl"
      },
      "type": "com.hazelcast.spi.impl.operationservice.impl.InvocationRegistry"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.core.Hazelcast"
      },
      "type": "com.hazelcast.spi.impl.operationservice.impl.OperationRunnerImpl"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceFactory"
      },
      "type": "com.hazelcast.spi.impl.operationservice.impl.OperationRunnerImpl"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
      },
      "type": "com.hazelcast.spi.impl.operationservice.impl.OperationRunnerImpl"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.Node"
      },
      "type": "com.hazelcast.spi.impl.operationservice.impl.OperationRunnerImpl"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.NodeEngineImpl"
      },
      "type": "com.hazelcast.spi.impl.operationservice.impl.OperationRunnerImpl"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.operationexecutor.impl.OperationExecutorImpl"
      },
      "type": "com.hazelcast.spi.impl.operationservice.impl.OperationRunnerImpl"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.operationservice.impl.OperationRunnerImpl"
      },
      "type": "com.hazelcast.spi.impl.operationservice.impl.OperationRunnerImpl",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.operationservice.impl.OperationServiceImpl"
      },
      "type": "com.hazelcast.spi.impl.operationservice.impl.OperationRunnerImpl"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.core.Hazelcast"
      },
      "type": "com.hazelcast.spi.impl.operationservice.impl.OperationServiceImpl"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceFactory"
      },
      "type": "com.hazelcast.spi.impl.operationservice.impl.OperationServiceImpl"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
      },
      "type": "com.hazelcast.spi.impl.operationservice.impl.OperationServiceImpl"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.Node"
      },
      "type": "com.hazelcast.spi.impl.operationservice.impl.OperationServiceImpl"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.NodeEngineImpl"
      },
      "type": "com.hazelcast.spi.impl.operationservice.impl.OperationServiceImpl"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.operationservice.impl.OperationServiceImpl"
      },
      "type": "com.hazelcast.spi.impl.operationservice.impl.OperationServiceImpl",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.core.Hazelcast"
      },
      "type": "com.hazelcast.spi.impl.proxyservice.InternalProxyService"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceFactory"
      },
      "type": "com.hazelcast.spi.impl.proxyservice.InternalProxyService"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
      },
      "type": "com.hazelcast.spi.impl.proxyservice.InternalProxyService"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.Node"
      },
      "type": "com.hazelcast.spi.impl.proxyservice.InternalProxyService"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.NodeEngineImpl"
      },
      "type": "com.hazelcast.spi.impl.proxyservice.InternalProxyService"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.proxyservice.impl.ProxyServiceImpl"
      },
      "type": "com.hazelcast.spi.impl.proxyservice.InternalProxyService",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.core.Hazelcast"
      },
      "type": "com.hazelcast.spi.impl.proxyservice.ProxyService"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceFactory"
      },
      "type": "com.hazelcast.spi.impl.proxyservice.ProxyService"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
      },
      "type": "com.hazelcast.spi.impl.proxyservice.ProxyService"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.Node"
      },
      "type": "com.hazelcast.spi.impl.proxyservice.ProxyService"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.NodeEngineImpl"
      },
      "type": "com.hazelcast.spi.impl.proxyservice.ProxyService"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.proxyservice.impl.ProxyServiceImpl"
      },
      "type": "com.hazelcast.spi.impl.proxyservice.ProxyService",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.core.Hazelcast"
      },
      "type": "com.hazelcast.spi.impl.proxyservice.impl.ProxyServiceImpl"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceFactory"
      },
      "type": "com.hazelcast.spi.impl.proxyservice.impl.ProxyServiceImpl"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
      },
      "type": "com.hazelcast.spi.impl.proxyservice.impl.ProxyServiceImpl"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.Node"
      },
      "type": "com.hazelcast.spi.impl.proxyservice.impl.ProxyServiceImpl"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.metrics.impl.MetricsService"
      },
      "type": "com.hazelcast.spi.impl.proxyservice.impl.ProxyServiceImpl",
      "methods": [
        {
          "name": "getProxyCount",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.NodeEngineImpl"
      },
      "type": "com.hazelcast.spi.impl.proxyservice.impl.ProxyServiceImpl"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.proxyservice.impl.ProxyServiceImpl"
      },
      "type": "com.hazelcast.spi.impl.proxyservice.impl.ProxyServiceImpl",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.serialization.impl.DataSerializableSerializer"
      },
      "type": "com.hazelcast.sql.impl.SqlDataSerializerHook",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.topic.impl.TopicService"
      },
      "type": "com.hazelcast.topic.LocalTopicStats",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.serialization.impl.DataSerializableSerializer"
      },
      "type": "com.hazelcast.topic.impl.TopicDataSerializerHook",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.core.Hazelcast"
      },
      "type": "com.hazelcast.transaction.TransactionManagerService"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceFactory"
      },
      "type": "com.hazelcast.transaction.TransactionManagerService"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
      },
      "type": "com.hazelcast.transaction.TransactionManagerService"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.Node"
      },
      "type": "com.hazelcast.transaction.TransactionManagerService"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.NodeEngineImpl"
      },
      "type": "com.hazelcast.transaction.TransactionManagerService"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.transaction.impl.TransactionManagerServiceImpl"
      },
      "type": "com.hazelcast.transaction.TransactionManagerService",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.serialization.impl.DataSerializableSerializer"
      },
      "type": "com.hazelcast.transaction.impl.TransactionDataSerializerHook",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.core.Hazelcast"
      },
      "type": "com.hazelcast.transaction.impl.TransactionManagerServiceImpl"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceFactory"
      },
      "type": "com.hazelcast.transaction.impl.TransactionManagerServiceImpl"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
      },
      "type": "com.hazelcast.transaction.impl.TransactionManagerServiceImpl"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.Node"
      },
      "type": "com.hazelcast.transaction.impl.TransactionManagerServiceImpl"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.NodeEngineImpl"
      },
      "type": "com.hazelcast.transaction.impl.TransactionManagerServiceImpl"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.transaction.impl.TransactionManagerServiceImpl"
      },
      "type": "com.hazelcast.transaction.impl.TransactionManagerServiceImpl",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.serialization.impl.DataSerializableSerializer"
      },
      "type": "com.hazelcast.wan.impl.WanDataSerializerHook",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.util.phonehome.PhoneHome"
      },
      "type": "com.sun.crypto.provider.AESCipher$General",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.util.phonehome.PhoneHome"
      },
      "type": "com.sun.crypto.provider.ARCFOURCipher",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.util.phonehome.PhoneHome"
      },
      "type": "com.sun.crypto.provider.ChaCha20Cipher$ChaCha20Poly1305",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.util.phonehome.PhoneHome"
      },
      "type": "com.sun.crypto.provider.DESCipher",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.util.phonehome.PhoneHome"
      },
      "type": "com.sun.crypto.provider.DESedeCipher",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.util.phonehome.PhoneHome"
      },
      "type": "com.sun.crypto.provider.DHParameters",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.util.phonehome.PhoneHome"
      },
      "type": "com.sun.crypto.provider.GaloisCounterMode$AESGCM",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.util.phonehome.PhoneHome"
      },
      "type": "com.sun.crypto.provider.HmacCore$HmacSHA384",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.util.phonehome.PhoneHome"
      },
      "type": "com.sun.crypto.provider.TlsMasterSecretGenerator",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.util.XmlUtil"
      },
      "type": "com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.client.config.ClientConfig"
      },
      "type": "com.sun.org.apache.xerces.internal.impl.dv.xs.ExtendedSchemaDVFactoryImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.config.AbstractXmlConfigHelper"
      },
      "type": "com.sun.org.apache.xerces.internal.impl.dv.xs.SchemaDVFactoryImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.util.XmlUtil"
      },
      "type": "com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.config.AbstractXmlConfigBuilder"
      },
      "type": "com.sun.org.apache.xpath.internal.functions.FuncNot",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.core.Hazelcast"
      },
      "type": "java.lang.Boolean",
      "fields": [
        {
          "name": "TYPE"
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.core.Hazelcast"
      },
      "type": "java.lang.Byte",
      "fields": [
        {
          "name": "TYPE"
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.core.Hazelcast"
      },
      "type": "java.lang.Character",
      "fields": [
        {
          "name": "TYPE"
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.serialization.impl.compact.record.JavaRecordSerializer"
      },
      "type": "java.lang.Class",
      "methods": [
        {
          "name": "getRecordComponents",
          "parameterTypes": []
        },
        {
          "name": "isRecord",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.util.ModularJavaUtils"
      },
      "type": "java.lang.Class",
      "methods": [
        {
          "name": "getModule",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.core.Hazelcast"
      },
      "type": "java.lang.Deprecated"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.core.Hazelcast"
      },
      "type": "java.lang.Double",
      "fields": [
        {
          "name": "TYPE"
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.nio.IOUtil$ClassLoaderAwareObjectInputStream"
      },
      "type": "java.lang.Enum"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.core.Hazelcast"
      },
      "type": "java.lang.Float",
      "fields": [
        {
          "name": "TYPE"
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.core.Hazelcast"
      },
      "type": "java.lang.Integer",
      "fields": [
        {
          "name": "TYPE"
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.core.Hazelcast"
      },
      "type": "java.lang.Iterable"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceFactory"
      },
      "type": "java.lang.Iterable"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
      },
      "type": "java.lang.Iterable"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.Node"
      },
      "type": "java.lang.Iterable"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.NodeEngineImpl"
      },
      "type": "java.lang.Iterable"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.operationservice.impl.InvocationRegistry"
      },
      "type": "java.lang.Iterable",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.operationservice.impl.OperationServiceImpl"
      },
      "type": "java.lang.Iterable"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.core.Hazelcast"
      },
      "type": "java.lang.Long",
      "fields": [
        {
          "name": "TYPE"
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.util.ModularJavaUtils"
      },
      "type": "java.lang.Module",
      "methods": [
        {
          "name": "getName",
          "parameterTypes": []
        },
        {
          "name": "isOpen",
          "parameterTypes": [
            "java.lang.String",
            "java.lang.Module"
          ]
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.util.ModularJavaUtils"
      },
      "type": "java.lang.ModuleLayer",
      "methods": [
        {
          "name": "boot",
          "parameterTypes": []
        },
        {
          "name": "modules",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.cache.impl.AbstractCacheService"
      },
      "type": "java.lang.Object"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.client.HazelcastClient"
      },
      "type": "java.lang.Object"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.client.cache.impl.HazelcastClientCachingProvider"
      },
      "type": "java.lang.Object"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.client.impl.ClientEndpointManagerImpl"
      },
      "type": "java.lang.Object"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.client.impl.ClientEngineImpl"
      },
      "type": "java.lang.Object"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.client.impl.clientside.HazelcastClientInstanceImpl"
      },
      "type": "java.lang.Object"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.client.impl.spi.impl.ClientExecutionServiceImpl"
      },
      "type": "java.lang.Object"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.client.impl.spi.impl.ClientInvocationServiceImpl"
      },
      "type": "java.lang.Object"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.client.impl.spi.impl.listener.ClientListenerServiceImpl"
      },
      "type": "java.lang.Object"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.client.impl.statistics.ClientStatisticsService"
      },
      "type": "java.lang.Object"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.client.impl.statistics.ClusterConnectionMetricsProvider"
      },
      "type": "java.lang.Object"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.collection.impl.list.ListService"
      },
      "type": "java.lang.Object"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.collection.impl.queue.QueueService"
      },
      "type": "java.lang.Object"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.collection.impl.set.SetService"
      },
      "type": "java.lang.Object"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.core.Hazelcast"
      },
      "type": "java.lang.Object"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.cp.internal.RaftService"
      },
      "type": "java.lang.Object"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.cp.internal.RaftServiceDescriptorProvider$RaftServiceDescriptor"
      },
      "type": "java.lang.Object"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.DefaultNodeExtension"
      },
      "type": "java.lang.Object"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceFactory"
      },
      "type": "java.lang.Object"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
      },
      "type": "java.lang.Object"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.Node"
      },
      "type": "java.lang.Object"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.cluster.impl.ClusterServiceImpl"
      },
      "type": "java.lang.Object"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.metrics.impl.MetricsCollectionCycle"
      },
      "type": "java.lang.Object"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.metrics.impl.MetricsCollectionCycle$MetricsContext"
      },
      "type": "java.lang.Object"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.metrics.impl.MetricsRegistryImpl"
      },
      "type": "java.lang.Object"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.metrics.impl.MetricsRegistryImpl$$Lambda$1635/0x0000000800f8ad98"
      },
      "type": "java.lang.Object"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.metrics.impl.MetricsService"
      },
      "type": "java.lang.Object"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.metrics.impl.ProviderHelper"
      },
      "type": "java.lang.Object"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.metrics.impl.SourceMetadata"
      },
      "type": "java.lang.Object",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.metrics.metricsets.GarbageCollectionMetricSet"
      },
      "type": "java.lang.Object"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.networking.nio.NioNetworking"
      },
      "type": "java.lang.Object"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.partition.impl.InternalPartitionServiceImpl"
      },
      "type": "java.lang.Object"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.partition.impl.MigrationManager"
      },
      "type": "java.lang.Object"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.server.tcp.TcpServer$MetricsProvider"
      },
      "type": "java.lang.Object"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.server.tcp.TcpServerAcceptor"
      },
      "type": "java.lang.Object"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.server.tcp.TcpServerConnectionManager"
      },
      "type": "java.lang.Object"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.map.impl.MapService"
      },
      "type": "java.lang.Object"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.map.impl.MapServiceConstructor"
      },
      "type": "java.lang.Object"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.map.impl.MapServiceConstructor$$Lambda$1553/0x0000000800ecf330"
      },
      "type": "java.lang.Object"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.map.impl.MapServiceContextImpl"
      },
      "type": "java.lang.Object"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.map.impl.querycache.NodeQueryCacheContext"
      },
      "type": "java.lang.Object"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.map.impl.querycache.publisher.DefaultPublisherContext"
      },
      "type": "java.lang.Object"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.replicatedmap.impl.ReplicatedMapService"
      },
      "type": "java.lang.Object"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.NodeEngineImpl"
      },
      "type": "java.lang.Object"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.eventservice.impl.EventServiceImpl"
      },
      "type": "java.lang.Object"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.executionservice.impl.ExecutionServiceImpl$MetricsProvider"
      },
      "type": "java.lang.Object"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.operationexecutor.impl.OperationExecutorImpl"
      },
      "type": "java.lang.Object"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.operationexecutor.impl.OperationThread"
      },
      "type": "java.lang.Object"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.operationparker.impl.OperationParkerImpl"
      },
      "type": "java.lang.Object"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.operationservice.impl.InboundResponseHandlerSupplier"
      },
      "type": "java.lang.Object"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.operationservice.impl.InvocationMonitor"
      },
      "type": "java.lang.Object"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.operationservice.impl.InvocationRegistry"
      },
      "type": "java.lang.Object"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.operationservice.impl.OperationRunnerImpl"
      },
      "type": "java.lang.Object"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.operationservice.impl.OperationServiceImpl"
      },
      "type": "java.lang.Object"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.proxyservice.impl.ProxyServiceImpl"
      },
      "type": "java.lang.Object"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.servicemanager.impl.ServiceManagerImpl"
      },
      "type": "java.lang.Object"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.topic.impl.TopicService"
      },
      "type": "java.lang.Object"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.transaction.impl.TransactionManagerServiceImpl"
      },
      "type": "java.lang.Object"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.client.HazelcastClient"
      },
      "type": "java.lang.Runnable"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.client.cache.impl.HazelcastClientCachingProvider"
      },
      "type": "java.lang.Runnable"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.client.impl.clientside.HazelcastClientInstanceImpl"
      },
      "type": "java.lang.Runnable"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.client.impl.statistics.ClientStatisticsService"
      },
      "type": "java.lang.Runnable"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.core.Hazelcast"
      },
      "type": "java.lang.Runnable"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceFactory"
      },
      "type": "java.lang.Runnable"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
      },
      "type": "java.lang.Runnable"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.Node"
      },
      "type": "java.lang.Runnable"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.metrics.impl.MetricsCollectionCycle"
      },
      "type": "java.lang.Runnable"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.metrics.impl.MetricsRegistryImpl"
      },
      "type": "java.lang.Runnable"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.metrics.impl.MetricsService"
      },
      "type": "java.lang.Runnable"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.metrics.metricsets.GarbageCollectionMetricSet"
      },
      "type": "java.lang.Runnable",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.networking.nio.NioNetworking"
      },
      "type": "java.lang.Runnable",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.NodeEngineImpl"
      },
      "type": "java.lang.Runnable"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.operationexecutor.impl.OperationExecutorImpl"
      },
      "type": "java.lang.Runnable"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.operationexecutor.impl.OperationThread"
      },
      "type": "java.lang.Runnable",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.operationservice.impl.OperationServiceImpl"
      },
      "type": "java.lang.Runnable"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.util.JavaVersion"
      },
      "type": "java.lang.Runtime",
      "methods": [
        {
          "name": "version",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.util.JavaVersion"
      },
      "type": "java.lang.Runtime$Version",
      "methods": [
        {
          "name": "major",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.core.Hazelcast"
      },
      "type": "java.lang.Short",
      "fields": [
        {
          "name": "TYPE"
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.core.Hazelcast"
      },
      "type": "java.lang.StackTraceElement"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.core.Hazelcast"
      },
      "type": "java.lang.String"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.util.phonehome.PhoneHome"
      },
      "type": "java.lang.String"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.client.impl.statistics.ClientStatisticsService"
      },
      "type": "java.lang.Thread"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.core.Hazelcast"
      },
      "type": "java.lang.Thread"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceFactory"
      },
      "type": "java.lang.Thread"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
      },
      "type": "java.lang.Thread"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.Node"
      },
      "type": "java.lang.Thread"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.metrics.impl.MetricsCollectionCycle"
      },
      "type": "java.lang.Thread"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.metrics.impl.MetricsRegistryImpl"
      },
      "type": "java.lang.Thread"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.metrics.impl.MetricsService"
      },
      "type": "java.lang.Thread"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.networking.nio.NioNetworking"
      },
      "type": "java.lang.Thread",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.NodeEngineImpl"
      },
      "type": "java.lang.Thread"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.operationexecutor.impl.OperationExecutorImpl"
      },
      "type": "java.lang.Thread"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.operationexecutor.impl.OperationThread"
      },
      "type": "java.lang.Thread",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.operationservice.impl.OperationServiceImpl"
      },
      "type": "java.lang.Thread"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.core.Hazelcast"
      },
      "type": "java.lang.Void",
      "fields": [
        {
          "name": "TYPE"
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.serialization.impl.compact.record.JavaRecordSerializer"
      },
      "type": "java.lang.reflect.RecordComponent",
      "methods": [
        {
          "name": "getGenericType",
          "parameterTypes": []
        },
        {
          "name": "getName",
          "parameterTypes": []
        },
        {
          "name": "getType",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.core.Hazelcast"
      },
      "type": "java.math.BigDecimal"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.core.Hazelcast"
      },
      "type": "java.math.BigInteger"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.util.phonehome.PhoneHome"
      },
      "type": "java.security.AlgorithmParametersSpi"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.util.phonehome.PhoneHome"
      },
      "type": "java.security.KeyStoreSpi"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.util.phonehome.PhoneHome"
      },
      "type": "java.security.SecureRandomParameters"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.util.phonehome.PhoneHome"
      },
      "type": "java.security.interfaces.RSAPrivateKey"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.util.phonehome.PhoneHome"
      },
      "type": "java.security.interfaces.RSAPublicKey"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.core.Hazelcast"
      },
      "type": "java.util.Date"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.util.phonehome.PhoneHome"
      },
      "type": "java.util.Date"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.core.Hazelcast"
      },
      "type": "java.util.PropertyPermission",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.String",
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.executionservice.impl.ExecutionServiceImpl$MetricsProvider"
      },
      "type": "java.util.concurrent.AbstractExecutorService",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.client.HazelcastClient"
      },
      "type": "java.util.concurrent.Executor"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.client.cache.impl.HazelcastClientCachingProvider"
      },
      "type": "java.util.concurrent.Executor"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.client.impl.clientside.HazelcastClientInstanceImpl"
      },
      "type": "java.util.concurrent.Executor"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.client.impl.spi.impl.ClientExecutionServiceImpl"
      },
      "type": "java.util.concurrent.Executor",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.executionservice.impl.ExecutionServiceImpl$MetricsProvider"
      },
      "type": "java.util.concurrent.Executor",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.executionservice.impl.ExecutionServiceImpl$MetricsProvider"
      },
      "type": "java.util.concurrent.ExecutorService",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.executionservice.impl.ExecutionServiceImpl$MetricsProvider"
      },
      "type": "java.util.concurrent.ThreadPoolExecutor",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.nio.IOUtil$ClassLoaderAwareObjectInputStream"
      },
      "type": "java.util.concurrent.TimeUnit"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.core.Hazelcast"
      },
      "type": "java.util.function.Consumer"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceFactory"
      },
      "type": "java.util.function.Consumer"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
      },
      "type": "java.util.function.Consumer"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.Node"
      },
      "type": "java.util.function.Consumer"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.server.tcp.TcpServerConnectionManager"
      },
      "type": "java.util.function.Consumer",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.NodeEngineImpl"
      },
      "type": "java.util.function.Consumer"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.eventservice.impl.EventServiceImpl"
      },
      "type": "java.util.function.Consumer",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.operationexecutor.impl.OperationExecutorImpl"
      },
      "type": "java.util.function.Consumer",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.operationservice.impl.InvocationMonitor"
      },
      "type": "java.util.function.Consumer",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.operationservice.impl.OperationServiceImpl"
      },
      "type": "java.util.function.Consumer"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.client.impl.statistics.ClientStatisticsService"
      },
      "type": "java.util.function.Supplier"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.core.Hazelcast"
      },
      "type": "java.util.function.Supplier"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceFactory"
      },
      "type": "java.util.function.Supplier"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.HazelcastInstanceImpl"
      },
      "type": "java.util.function.Supplier"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.instance.impl.Node"
      },
      "type": "java.util.function.Supplier"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.metrics.impl.MetricsCollectionCycle"
      },
      "type": "java.util.function.Supplier"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.metrics.impl.MetricsRegistryImpl"
      },
      "type": "java.util.function.Supplier"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.metrics.impl.MetricsService"
      },
      "type": "java.util.function.Supplier"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.networking.nio.NioNetworking"
      },
      "type": "java.util.function.Supplier",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.NodeEngineImpl"
      },
      "type": "java.util.function.Supplier"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.operationservice.impl.InboundResponseHandlerSupplier"
      },
      "type": "java.util.function.Supplier",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.operationservice.impl.OperationServiceImpl"
      },
      "type": "java.util.function.Supplier"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.core.Hazelcast"
      },
      "type": "java.util.logging.LogManager",
      "methods": [
        {
          "name": "getLoggingMXBean",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.core.Hazelcast"
      },
      "type": "java.util.logging.LoggingMXBean"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.nio.ClassLoaderUtil"
      },
      "type": "javax.cache.Caching"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.nio.ClassLoaderUtil"
      },
      "type": "javax.cache.configuration.CompleteConfiguration"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.nio.IOUtil$ClassLoaderAwareObjectInputStream"
      },
      "type": "javax.cache.configuration.FactoryBuilder$SingletonFactory"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.nio.IOUtil$ClassLoaderAwareObjectInputStream"
      },
      "type": "javax.cache.expiry.AccessedExpiryPolicy"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.nio.IOUtil$ClassLoaderAwareObjectInputStream"
      },
      "type": "javax.cache.expiry.Duration"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.nio.IOUtil$ClassLoaderAwareObjectInputStream"
      },
      "type": "javax.cache.expiry.EternalExpiryPolicy"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.nio.ClassLoaderUtil"
      },
      "type": "javax.cache.integration.CacheLoaderException"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.nio.ClassLoaderUtil"
      },
      "type": "javax.cache.integration.CacheWriterException"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.operationservice.impl.OperationRunnerImpl"
      },
      "type": "javax.cache.management.CacheMXBean"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.spi.impl.operationservice.impl.OperationRunnerImpl"
      },
      "type": "javax.cache.management.CacheStatisticsMXBean"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.nio.ClassLoaderUtil"
      },
      "type": "javax.cache.processor.EntryProcessorException"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.util.phonehome.PhoneHome"
      },
      "type": "javax.security.auth.x500.X500Principal",
      "fields": [
        {
          "name": "thisX500Name"
        }
      ],
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "sun.security.x509.X500Name"
          ]
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.memory.impl.UnsafeUtil$1"
      },
      "type": "sun.misc.Unsafe",
      "fields": [
        {
          "name": "theUnsafe"
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.networking.nio.SelectorOptimizer"
      },
      "type": "sun.nio.ch.SelectorImpl",
      "fields": [
        {
          "name": "selectedKeys"
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.util.phonehome.PhoneHome"
      },
      "type": "sun.security.pkcs12.PKCS12KeyStore",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.util.phonehome.PhoneHome"
      },
      "type": "sun.security.pkcs12.PKCS12KeyStore$DualFormatPKCS12",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.util.phonehome.PhoneHome"
      },
      "type": "sun.security.provider.DSA$SHA224withDSA",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.util.phonehome.PhoneHome"
      },
      "type": "sun.security.provider.DSA$SHA256withDSA",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.util.phonehome.PhoneHome"
      },
      "type": "sun.security.provider.JavaKeyStore$DualFormatJKS",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.util.phonehome.PhoneHome"
      },
      "type": "sun.security.provider.JavaKeyStore$JKS",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.util.phonehome.PhoneHome"
      },
      "type": "sun.security.provider.NativePRNG",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.util.phonehome.PhoneHome"
      },
      "type": "sun.security.provider.SHA",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.util.phonehome.PhoneHome"
      },
      "type": "sun.security.provider.SHA2$SHA224",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.util.phonehome.PhoneHome"
      },
      "type": "sun.security.provider.SHA2$SHA256",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.util.phonehome.PhoneHome"
      },
      "type": "sun.security.provider.SHA5$SHA384",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.util.phonehome.PhoneHome"
      },
      "type": "sun.security.provider.SHA5$SHA512",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.util.phonehome.PhoneHome"
      },
      "type": "sun.security.provider.X509Factory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.util.phonehome.PhoneHome"
      },
      "type": "sun.security.provider.certpath.PKIXCertPathValidator",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.util.phonehome.PhoneHome"
      },
      "type": "sun.security.rsa.PSSParameters",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.util.phonehome.PhoneHome"
      },
      "type": "sun.security.rsa.RSAKeyFactory$Legacy",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.util.phonehome.PhoneHome"
      },
      "type": "sun.security.rsa.RSAPSSSignature",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.util.phonehome.PhoneHome"
      },
      "type": "sun.security.rsa.RSASignature$SHA224withRSA",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.util.phonehome.PhoneHome"
      },
      "type": "sun.security.rsa.RSASignature$SHA256withRSA",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.util.phonehome.PhoneHome"
      },
      "type": "sun.security.ssl.KeyManagerFactoryImpl$SunX509",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.util.phonehome.PhoneHome"
      },
      "type": "sun.security.ssl.SSLContextImpl$DefaultSSLContext",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.util.phonehome.PhoneHome"
      },
      "type": "sun.security.ssl.TrustManagerFactoryImpl$PKIXFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.util.phonehome.PhoneHome"
      },
      "type": "sun.security.util.ObjectIdentifier"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.util.phonehome.PhoneHome"
      },
      "type": "sun.security.x509.AuthorityInfoAccessExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.util.phonehome.PhoneHome"
      },
      "type": "sun.security.x509.AuthorityKeyIdentifierExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.util.phonehome.PhoneHome"
      },
      "type": "sun.security.x509.BasicConstraintsExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.util.phonehome.PhoneHome"
      },
      "type": "sun.security.x509.CRLDistributionPointsExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.util.phonehome.PhoneHome"
      },
      "type": "sun.security.x509.CertificateExtensions"
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.util.phonehome.PhoneHome"
      },
      "type": "sun.security.x509.CertificatePoliciesExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.util.phonehome.PhoneHome"
      },
      "type": "sun.security.x509.ExtendedKeyUsageExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.util.phonehome.PhoneHome"
      },
      "type": "sun.security.x509.IssuerAlternativeNameExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.util.phonehome.PhoneHome"
      },
      "type": "sun.security.x509.KeyUsageExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.util.phonehome.PhoneHome"
      },
      "type": "sun.security.x509.NetscapeCertTypeExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.util.phonehome.PhoneHome"
      },
      "type": "sun.security.x509.PrivateKeyUsageExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.util.phonehome.PhoneHome"
      },
      "type": "sun.security.x509.SubjectAlternativeNameExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.util.phonehome.PhoneHome"
      },
      "type": "sun.security.x509.SubjectKeyIdentifierExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    }
  ],
  "jni": [
    {
      "condition": {
        "typeReached": "com.hazelcast.internal.util.JVMUtil"
      },
      "type": "java.lang.Boolean",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "boolean"
          ]
        }
      ]
    },
    {
      "condition": {
        "typeReached": "com.hazelcast.core.Hazelcast"
      },
      "type": "java.util.Arrays",
      "methods": [
        {
          "name": "asList",
          "parameterTypes": [
            "java.lang.Object[]"
          ]
        }
      ]
    }
  ]
}