{
  "reflection": [
    {
      "condition": {
        "typeReached": "io.jsonwebtoken.impl.crypto.MacSigner"
      },
      "type": "com.sun.crypto.provider.HmacCore$HmacSHA256",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.jsonwebtoken.impl.crypto.MacSigner"
      },
      "type": "com.sun.crypto.provider.HmacCore$HmacSHA384",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.jsonwebtoken.impl.crypto.MacSigner"
      },
      "type": "com.sun.crypto.provider.HmacCore$HmacSHA512",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.jsonwebtoken.impl.crypto.MacProvider"
      },
      "type": "com.sun.crypto.provider.KeyGeneratorCore$HmacKG$SHA256",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.jsonwebtoken.impl.crypto.MacProvider"
      },
      "type": "com.sun.crypto.provider.KeyGeneratorCore$HmacKG$SHA384",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.jsonwebtoken.impl.crypto.MacProvider"
      },
      "type": "com.sun.crypto.provider.KeyGeneratorCore$HmacKG$SHA512",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.jsonwebtoken.Jwts"
      },
      "type": "io.jsonwebtoken.impl.DefaultJwtBuilder",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.jsonwebtoken.Jwts"
      },
      "type": "io.jsonwebtoken.impl.DefaultJwtParserBuilder",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.jsonwebtoken.CompressionCodecs"
      },
      "type": "io.jsonwebtoken.impl.compression.DeflateCompressionCodec",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.jsonwebtoken.CompressionCodecs"
      },
      "type": "io.jsonwebtoken.impl.compression.GzipCompressionCodec",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.jsonwebtoken.security.Keys"
      },
      "type": "io.jsonwebtoken.impl.crypto.EllipticCurveProvider",
      "methods": [
        {
          "name": "generateKeyPair",
          "parameterTypes": [
            "io.jsonwebtoken.SignatureAlgorithm"
          ]
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.jsonwebtoken.security.Keys"
      },
      "type": "io.jsonwebtoken.impl.crypto.MacProvider",
      "methods": [
        {
          "name": "generateKey",
          "parameterTypes": [
            "io.jsonwebtoken.SignatureAlgorithm"
          ]
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.jsonwebtoken.security.Keys"
      },
      "type": "io.jsonwebtoken.impl.crypto.RsaProvider",
      "methods": [
        {
          "name": "generateKeyPair",
          "parameterTypes": [
            "io.jsonwebtoken.SignatureAlgorithm"
          ]
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.jsonwebtoken.impl.crypto.EllipticCurveProvider"
      },
      "type": "java.security.AlgorithmParametersSpi"
    },
    {
      "condition": {
        "typeReached": "io.jsonwebtoken.impl.crypto.EllipticCurveSigner"
      },
      "type": "java.security.SecureRandomParameters"
    },
    {
      "condition": {
        "typeReached": "io.jsonwebtoken.impl.crypto.MacProvider"
      },
      "type": "java.security.SecureRandomParameters"
    },
    {
      "condition": {
        "typeReached": "io.jsonwebtoken.impl.crypto.SignatureProvider"
      },
      "type": "java.security.SecureRandomParameters"
    },
    {
      "condition": {
        "typeReached": "io.jsonwebtoken.impl.crypto.EllipticCurveSigner"
      },
      "type": "java.security.interfaces.ECPrivateKey"
    },
    {
      "condition": {
        "typeReached": "io.jsonwebtoken.impl.crypto.EllipticCurveSigner"
      },
      "type": "java.security.interfaces.ECPublicKey"
    },
    {
      "condition": {
        "typeReached": "io.jsonwebtoken.impl.crypto.RsaSigner"
      },
      "type": "java.security.interfaces.RSAPrivateKey"
    },
    {
      "condition": {
        "typeReached": "io.jsonwebtoken.impl.crypto.RsaSigner"
      },
      "type": "java.security.interfaces.RSAPublicKey"
    },
    {
      "condition": {
        "typeReached": "io.jsonwebtoken.orgjson.io.OrgJsonSerializer"
      },
      "type": "org.json.JSONString"
    },
    {
      "condition": {
        "typeReached": "io.jsonwebtoken.impl.crypto.EllipticCurveSigner"
      },
      "type": "sun.security.provider.NativePRNG",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.jsonwebtoken.impl.crypto.MacProvider"
      },
      "type": "sun.security.provider.NativePRNG",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.jsonwebtoken.impl.crypto.SignatureProvider"
      },
      "type": "sun.security.provider.NativePRNG",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.jsonwebtoken.impl.crypto.EllipticCurveSignatureValidator"
      },
      "type": "sun.security.provider.SHA2$SHA256",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.jsonwebtoken.impl.crypto.EllipticCurveSigner"
      },
      "type": "sun.security.provider.SHA2$SHA256",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.jsonwebtoken.impl.crypto.MacSigner"
      },
      "type": "sun.security.provider.SHA2$SHA256",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.jsonwebtoken.impl.crypto.RsaSignatureValidator"
      },
      "type": "sun.security.provider.SHA2$SHA256",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.jsonwebtoken.impl.crypto.RsaSigner"
      },
      "type": "sun.security.provider.SHA2$SHA256",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.jsonwebtoken.impl.crypto.SignatureProvider"
      },
      "type": "sun.security.provider.SHA2$SHA256",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.jsonwebtoken.impl.crypto.EllipticCurveSignatureValidator"
      },
      "type": "sun.security.provider.SHA5$SHA384",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.jsonwebtoken.impl.crypto.EllipticCurveSigner"
      },
      "type": "sun.security.provider.SHA5$SHA384",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.jsonwebtoken.impl.crypto.MacSigner"
      },
      "type": "sun.security.provider.SHA5$SHA384",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.jsonwebtoken.impl.crypto.RsaSignatureValidator"
      },
      "type": "sun.security.provider.SHA5$SHA384",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.jsonwebtoken.impl.crypto.RsaSigner"
      },
      "type": "sun.security.provider.SHA5$SHA384",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.jsonwebtoken.impl.crypto.SignatureProvider"
      },
      "type": "sun.security.provider.SHA5$SHA384",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.jsonwebtoken.impl.crypto.EllipticCurveSignatureValidator"
      },
      "type": "sun.security.provider.SHA5$SHA512",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.jsonwebtoken.impl.crypto.EllipticCurveSigner"
      },
      "type": "sun.security.provider.SHA5$SHA512",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.jsonwebtoken.impl.crypto.MacSigner"
      },
      "type": "sun.security.provider.SHA5$SHA512",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.jsonwebtoken.impl.crypto.RsaSignatureValidator"
      },
      "type": "sun.security.provider.SHA5$SHA512",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.jsonwebtoken.impl.crypto.RsaSigner"
      },
      "type": "sun.security.provider.SHA5$SHA512",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.jsonwebtoken.impl.crypto.SignatureProvider"
      },
      "type": "sun.security.provider.SHA5$SHA512",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.jsonwebtoken.impl.crypto.RsaProvider"
      },
      "type": "sun.security.rsa.RSAKeyPairGenerator$Legacy",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.jsonwebtoken.impl.crypto.RsaSignatureValidator"
      },
      "type": "sun.security.rsa.RSASignature$SHA256withRSA",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.jsonwebtoken.impl.crypto.RsaSigner"
      },
      "type": "sun.security.rsa.RSASignature$SHA256withRSA",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.jsonwebtoken.impl.crypto.RsaSignatureValidator"
      },
      "type": "sun.security.rsa.RSASignature$SHA384withRSA",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.jsonwebtoken.impl.crypto.RsaSigner"
      },
      "type": "sun.security.rsa.RSASignature$SHA384withRSA",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.jsonwebtoken.impl.crypto.RsaSignatureValidator"
      },
      "type": "sun.security.rsa.RSASignature$SHA512withRSA",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.jsonwebtoken.impl.crypto.RsaSigner"
      },
      "type": "sun.security.rsa.RSASignature$SHA512withRSA",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    }
  ],
  "resources": [
    {
      "condition": {
        "typeReached": "io.jsonwebtoken.impl.lang.Services"
      },
      "glob": "META-INF/services/io.jsonwebtoken.CompressionCodec"
    },
    {
      "condition": {
        "typeReached": "io.jsonwebtoken.impl.DefaultJwtParserBuilder"
      },
      "glob": "META-INF/services/io.jsonwebtoken.io.Deserializer"
    },
    {
      "condition": {
        "typeReached": "io.jsonwebtoken.impl.lang.LegacyServices"
      },
      "glob": "META-INF/services/io.jsonwebtoken.io.Serializer"
    }
  ],
  
  "bundles": []
}