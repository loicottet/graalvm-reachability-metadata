{
  "reflection": [
    {
      "condition": {
        "typeReached": "io.netty.internal.tcnative.Library"
      },
      "type": "[B"
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.AbstractChannel"
      },
      "type": "ch.qos.logback.classic.encoder.PatternLayoutEncoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.MultithreadEventLoopGroup"
      },
      "type": "ch.qos.logback.classic.encoder.PatternLayoutEncoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.http.websocketx.extensions.compression.DeflateDecoder"
      },
      "type": "ch.qos.logback.classic.encoder.PatternLayoutEncoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.http2.DefaultHttp2Headers"
      },
      "type": "ch.qos.logback.classic.encoder.PatternLayoutEncoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.stomp.DefaultStompHeaders"
      },
      "type": "ch.qos.logback.classic.encoder.PatternLayoutEncoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.util.AsciiString"
      },
      "type": "ch.qos.logback.classic.encoder.PatternLayoutEncoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.util.ResourceLeakDetector"
      },
      "type": "ch.qos.logback.classic.encoder.PatternLayoutEncoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.util.concurrent.AbstractEventExecutor"
      },
      "type": "ch.qos.logback.classic.encoder.PatternLayoutEncoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.util.concurrent.UnorderedThreadPoolEventExecutor"
      },
      "type": "ch.qos.logback.classic.encoder.PatternLayoutEncoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.util.internal.SystemPropertyUtil"
      },
      "type": "ch.qos.logback.classic.encoder.PatternLayoutEncoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.util.internal.logging.InternalLoggerFactory"
      },
      "type": "ch.qos.logback.classic.encoder.PatternLayoutEncoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.util.internal.logging.Slf4JLoggerFactory"
      },
      "type": "ch.qos.logback.classic.encoder.PatternLayoutEncoder",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.util.internal.logging.Slf4JLoggerFactory$NopInstanceHolder"
      },
      "type": "ch.qos.logback.classic.encoder.PatternLayoutEncoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.util.internal.logging.Slf4JLoggerFactory"
      },
      "type": "ch.qos.logback.classic.pattern.DateConverter",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.util.internal.logging.Slf4JLoggerFactory"
      },
      "type": "ch.qos.logback.classic.pattern.LevelConverter",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.util.internal.logging.Slf4JLoggerFactory"
      },
      "type": "ch.qos.logback.classic.pattern.LineSeparatorConverter",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.util.internal.logging.Slf4JLoggerFactory"
      },
      "type": "ch.qos.logback.classic.pattern.LoggerConverter",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.util.internal.logging.Slf4JLoggerFactory"
      },
      "type": "ch.qos.logback.classic.pattern.MessageConverter",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.util.internal.logging.Slf4JLoggerFactory"
      },
      "type": "ch.qos.logback.classic.pattern.ThreadConverter",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.AbstractChannel"
      },
      "type": "ch.qos.logback.core.ConsoleAppender"
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.MultithreadEventLoopGroup"
      },
      "type": "ch.qos.logback.core.ConsoleAppender"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.http.websocketx.extensions.compression.DeflateDecoder"
      },
      "type": "ch.qos.logback.core.ConsoleAppender"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.http2.DefaultHttp2Headers"
      },
      "type": "ch.qos.logback.core.ConsoleAppender"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.stomp.DefaultStompHeaders"
      },
      "type": "ch.qos.logback.core.ConsoleAppender"
    },
    {
      "condition": {
        "typeReached": "io.netty.util.AsciiString"
      },
      "type": "ch.qos.logback.core.ConsoleAppender"
    },
    {
      "condition": {
        "typeReached": "io.netty.util.ResourceLeakDetector"
      },
      "type": "ch.qos.logback.core.ConsoleAppender"
    },
    {
      "condition": {
        "typeReached": "io.netty.util.concurrent.AbstractEventExecutor"
      },
      "type": "ch.qos.logback.core.ConsoleAppender"
    },
    {
      "condition": {
        "typeReached": "io.netty.util.concurrent.UnorderedThreadPoolEventExecutor"
      },
      "type": "ch.qos.logback.core.ConsoleAppender"
    },
    {
      "condition": {
        "typeReached": "io.netty.util.internal.SystemPropertyUtil"
      },
      "type": "ch.qos.logback.core.ConsoleAppender"
    },
    {
      "condition": {
        "typeReached": "io.netty.util.internal.logging.InternalLoggerFactory"
      },
      "type": "ch.qos.logback.core.ConsoleAppender"
    },
    {
      "condition": {
        "typeReached": "io.netty.util.internal.logging.Slf4JLoggerFactory"
      },
      "type": "ch.qos.logback.core.ConsoleAppender",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.util.internal.logging.Slf4JLoggerFactory$NopInstanceHolder"
      },
      "type": "ch.qos.logback.core.ConsoleAppender"
    },
    {
      "condition": {
        "typeReached": "io.netty.util.internal.logging.Slf4JLoggerFactory"
      },
      "type": "ch.qos.logback.core.OutputStreamAppender",
      "methods": [
        {
          "name": "setEncoder",
          "parameterTypes": [
            "ch.qos.logback.core.encoder.Encoder"
          ]
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.util.internal.logging.Slf4JLoggerFactory"
      },
      "type": "ch.qos.logback.core.encoder.LayoutWrappingEncoder",
      "methods": [
        {
          "name": "setParent",
          "parameterTypes": [
            "ch.qos.logback.core.Appender"
          ]
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.util.internal.logging.Slf4JLoggerFactory"
      },
      "type": "ch.qos.logback.core.pattern.PatternLayoutEncoderBase",
      "methods": [
        {
          "name": "setPattern",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.compression.Brotli"
      },
      "type": "com.aayushatharva.brotli4j.Brotli4jLoader"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.compression.Zstd"
      },
      "type": "com.github.luben.zstd.Zstd"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.compression.LzfDecoder"
      },
      "type": "com.ning.compress.lzf.impl.UnsafeChunkDecoder",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.DefaultEventLoop"
      },
      "type": "com.sun.crypto.provider.AESCipher$General",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.epoll.AbstractEpollChannel$AbstractEpollUnsafe$1"
      },
      "type": "com.sun.crypto.provider.AESCipher$General",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.epoll.EpollEventLoop"
      },
      "type": "com.sun.crypto.provider.AESCipher$General",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.local.LocalChannel"
      },
      "type": "com.sun.crypto.provider.AESCipher$General",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.nio.NioEventLoop"
      },
      "type": "com.sun.crypto.provider.AESCipher$General",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.oio.AbstractOioByteChannel"
      },
      "type": "com.sun.crypto.provider.AESCipher$General",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.JdkAlpnSslEngine"
      },
      "type": "com.sun.crypto.provider.AESCipher$General",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.JdkSslEngine"
      },
      "type": "com.sun.crypto.provider.AESCipher$General",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.SslHandler"
      },
      "type": "com.sun.crypto.provider.AESCipher$General",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.SslHandler$SslEngineType$3"
      },
      "type": "com.sun.crypto.provider.AESCipher$General",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.SslHandler$SslTasksRunner"
      },
      "type": "com.sun.crypto.provider.AESCipher$General",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.util.concurrent.FastThreadLocalRunnable"
      },
      "type": "com.sun.crypto.provider.AESCipher$General",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.local.LocalChannel"
      },
      "type": "com.sun.crypto.provider.DHKeyAgreement",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.local.LocalChannel"
      },
      "type": "com.sun.crypto.provider.DHKeyFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.DefaultEventLoop"
      },
      "type": "com.sun.crypto.provider.DHKeyPairGenerator",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.local.LocalChannel"
      },
      "type": "com.sun.crypto.provider.DHKeyPairGenerator",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.epoll.EpollEventLoop"
      },
      "type": "com.sun.crypto.provider.DHParameters",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.nio.NioEventLoop"
      },
      "type": "com.sun.crypto.provider.DHParameters",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.JdkSslEngine"
      },
      "type": "com.sun.crypto.provider.DHParameters",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.DefaultEventLoop"
      },
      "type": "com.sun.crypto.provider.HmacCore$HmacSHA256",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.epoll.EpollEventLoop"
      },
      "type": "com.sun.crypto.provider.HmacCore$HmacSHA256",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.local.LocalChannel"
      },
      "type": "com.sun.crypto.provider.HmacCore$HmacSHA256",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.nio.NioEventLoop"
      },
      "type": "com.sun.crypto.provider.HmacCore$HmacSHA256",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.oio.AbstractOioByteChannel"
      },
      "type": "com.sun.crypto.provider.HmacCore$HmacSHA256",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.PseudoRandomFunction"
      },
      "type": "com.sun.crypto.provider.HmacCore$HmacSHA256",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.SslContext"
      },
      "type": "com.sun.crypto.provider.HmacCore$HmacSHA256",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.ThreadPerChannelEventLoop"
      },
      "type": "com.sun.crypto.provider.HmacSHA1",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.epoll.AbstractEpollChannel$AbstractEpollUnsafe$1"
      },
      "type": "com.sun.crypto.provider.HmacSHA1",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.epoll.EpollEventLoop"
      },
      "type": "com.sun.crypto.provider.HmacSHA1",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.nio.NioEventLoop"
      },
      "type": "com.sun.crypto.provider.HmacSHA1",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.oio.AbstractOioByteChannel"
      },
      "type": "com.sun.crypto.provider.HmacSHA1",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.util.concurrent.FastThreadLocalRunnable"
      },
      "type": "com.sun.crypto.provider.HmacSHA1",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.OpenSslX509KeyManagerFactory$OpenSslKeyManagerFactorySpi"
      },
      "type": "com.sun.crypto.provider.PBEKeyFactory$PBEWithMD5AndDES",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.SslContext"
      },
      "type": "com.sun.crypto.provider.PBEKeyFactory$PBEWithMD5AndDES",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.SslContext"
      },
      "type": "com.sun.crypto.provider.PBEParameters",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.SslContext"
      },
      "type": "com.sun.crypto.provider.PBES2Core$HmacSHA256AndAES_256",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.SslContext"
      },
      "type": "com.sun.crypto.provider.PBES2Parameters$General",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.SslContext"
      },
      "type": "com.sun.crypto.provider.PBES2Parameters$HmacSHA256AndAES_256",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.epoll.AbstractEpollChannel$AbstractEpollUnsafe$1"
      },
      "type": "com.sun.crypto.provider.RSACipher",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.epoll.EpollEventLoop"
      },
      "type": "com.sun.crypto.provider.RSACipher",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.nio.NioEventLoop"
      },
      "type": "com.sun.crypto.provider.RSACipher",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.oio.AbstractOioByteChannel"
      },
      "type": "com.sun.crypto.provider.RSACipher",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.DefaultEventLoop"
      },
      "type": "com.sun.crypto.provider.TlsKeyMaterialGenerator",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.epoll.AbstractEpollChannel$AbstractEpollUnsafe$1"
      },
      "type": "com.sun.crypto.provider.TlsKeyMaterialGenerator",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.epoll.EpollEventLoop"
      },
      "type": "com.sun.crypto.provider.TlsKeyMaterialGenerator",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.local.LocalChannel"
      },
      "type": "com.sun.crypto.provider.TlsKeyMaterialGenerator",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.nio.NioEventLoop"
      },
      "type": "com.sun.crypto.provider.TlsKeyMaterialGenerator",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.oio.AbstractOioByteChannel"
      },
      "type": "com.sun.crypto.provider.TlsKeyMaterialGenerator",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.DefaultEventLoop"
      },
      "type": "com.sun.crypto.provider.TlsMasterSecretGenerator",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.epoll.AbstractEpollChannel$AbstractEpollUnsafe$1"
      },
      "type": "com.sun.crypto.provider.TlsMasterSecretGenerator",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.epoll.EpollEventLoop"
      },
      "type": "com.sun.crypto.provider.TlsMasterSecretGenerator",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.local.LocalChannel"
      },
      "type": "com.sun.crypto.provider.TlsMasterSecretGenerator",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.nio.NioEventLoop"
      },
      "type": "com.sun.crypto.provider.TlsMasterSecretGenerator",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.oio.AbstractOioByteChannel"
      },
      "type": "com.sun.crypto.provider.TlsMasterSecretGenerator",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.DefaultEventLoop"
      },
      "type": "com.sun.crypto.provider.TlsPrfGenerator$V12",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.epoll.AbstractEpollChannel$AbstractEpollUnsafe$1"
      },
      "type": "com.sun.crypto.provider.TlsPrfGenerator$V12",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.epoll.EpollEventLoop"
      },
      "type": "com.sun.crypto.provider.TlsPrfGenerator$V12",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.local.LocalChannel"
      },
      "type": "com.sun.crypto.provider.TlsPrfGenerator$V12",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.nio.NioEventLoop"
      },
      "type": "com.sun.crypto.provider.TlsPrfGenerator$V12",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.oio.AbstractOioByteChannel"
      },
      "type": "com.sun.crypto.provider.TlsPrfGenerator$V12",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.SslHandler$SslTasksRunner"
      },
      "type": "com.sun.crypto.provider.TlsPrfGenerator$V12",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.epoll.AbstractEpollChannel$AbstractEpollUnsafe$1"
      },
      "type": "com.sun.crypto.provider.TlsRsaPremasterSecretGenerator",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.epoll.EpollEventLoop"
      },
      "type": "com.sun.crypto.provider.TlsRsaPremasterSecretGenerator",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.nio.NioEventLoop"
      },
      "type": "com.sun.crypto.provider.TlsRsaPremasterSecretGenerator",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.oio.AbstractOioByteChannel"
      },
      "type": "com.sun.crypto.provider.TlsRsaPremasterSecretGenerator",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.util.internal.logging.Slf4JLoggerFactory"
      },
      "type": "com.sun.org.apache.xerces.internal.jaxp.SAXParserFactoryImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.bootstrap.ServerBootstrap$1"
      },
      "type": "io.netty.bootstrap.ServerBootstrap$1"
    },
    {
      "condition": {
        "typeReached": "io.netty.bootstrap.ServerBootstrap$ServerBootstrapAcceptor"
      },
      "type": "io.netty.bootstrap.ServerBootstrap$ServerBootstrapAcceptor"
    },
    {
      "condition": {
        "typeReached": "io.netty.buffer.AbstractByteBufAllocator"
      },
      "type": "io.netty.buffer.AbstractByteBufAllocator"
    },
    {
      "condition": {
        "typeReached": "io.netty.buffer.ByteBufAllocator"
      },
      "type": "io.netty.buffer.AbstractByteBufAllocator"
    },
    {
      "condition": {
        "typeReached": "io.netty.buffer.ByteBufUtil"
      },
      "type": "io.netty.buffer.AbstractByteBufAllocator"
    },
    {
      "condition": {
        "typeReached": "io.netty.buffer.Unpooled"
      },
      "type": "io.netty.buffer.AbstractByteBufAllocator"
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.DefaultChannelConfig"
      },
      "type": "io.netty.buffer.AbstractByteBufAllocator"
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.local.LocalServerChannel$1"
      },
      "type": "io.netty.buffer.AbstractByteBufAllocator"
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.sctp.DefaultSctpServerChannelConfig"
      },
      "type": "io.netty.buffer.AbstractByteBufAllocator"
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.socket.DefaultDatagramChannelConfig"
      },
      "type": "io.netty.buffer.AbstractByteBufAllocator"
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.udt.DefaultUdtServerChannelConfig"
      },
      "type": "io.netty.buffer.AbstractByteBufAllocator"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.ReplayingDecoderByteBuf"
      },
      "type": "io.netty.buffer.AbstractByteBufAllocator"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.http.HttpObjectEncoder"
      },
      "type": "io.netty.buffer.AbstractByteBufAllocator"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.http.websocketx.extensions.compression.DeflateDecoder"
      },
      "type": "io.netty.buffer.AbstractByteBufAllocator"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.redis.FixedRedisMessagePool"
      },
      "type": "io.netty.buffer.AbstractByteBufAllocator"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.smtp.SmtpRequestEncoder"
      },
      "type": "io.netty.buffer.AbstractByteBufAllocator"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.PemPrivateKey"
      },
      "type": "io.netty.buffer.AbstractByteBufAllocator"
    },
    {
      "condition": {
        "typeReached": "io.netty.buffer.AbstractReferenceCountedByteBuf"
      },
      "type": "io.netty.buffer.AbstractReferenceCountedByteBuf",
      "fields": [
        {
          "name": "refCnt"
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.buffer.AdvancedLeakAwareByteBuf"
      },
      "type": "io.netty.buffer.AdvancedLeakAwareByteBuf"
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.ChannelDuplexHandler"
      },
      "type": "io.netty.channel.ChannelDuplexHandler"
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.ChannelHandler"
      },
      "type": "io.netty.channel.ChannelHandler"
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.ChannelHandlerAdapter"
      },
      "type": "io.netty.channel.ChannelHandlerAdapter"
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.ChannelInboundHandler"
      },
      "type": "io.netty.channel.ChannelInboundHandler"
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.ChannelInboundHandlerAdapter"
      },
      "type": "io.netty.channel.ChannelInboundHandlerAdapter"
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.ChannelInitializer"
      },
      "type": "io.netty.channel.ChannelInitializer"
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.ChannelOutboundHandler"
      },
      "type": "io.netty.channel.ChannelOutboundHandler"
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.ChannelOutboundHandlerAdapter"
      },
      "type": "io.netty.channel.ChannelOutboundHandlerAdapter"
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.CombinedChannelDuplexHandler"
      },
      "type": "io.netty.channel.CombinedChannelDuplexHandler"
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.DefaultChannelPipeline$HeadContext"
      },
      "type": "io.netty.channel.DefaultChannelPipeline$HeadContext"
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.DefaultChannelPipeline$TailContext"
      },
      "type": "io.netty.channel.DefaultChannelPipeline$TailContext"
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.epoll.Native"
      },
      "type": "io.netty.channel.DefaultFileRegion"
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.kqueue.Native"
      },
      "type": "io.netty.channel.DefaultFileRegion"
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.SimpleChannelInboundHandler"
      },
      "type": "io.netty.channel.SimpleChannelInboundHandler"
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.SimpleUserEventChannelHandler"
      },
      "type": "io.netty.channel.SimpleUserEventChannelHandler"
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.embedded.EmbeddedChannel$2"
      },
      "type": "io.netty.channel.embedded.EmbeddedChannel$2"
    },
    {
      "condition": {
        "typeReached": "io.netty.bootstrap.Bootstrap"
      },
      "type": "io.netty.channel.epoll.EpollSocketChannel",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.epoll.Native"
      },
      "type": "io.netty.channel.epoll.NativeDatagramPacketArray$NativeDatagramPacket"
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.pool.SimpleChannelPool"
      },
      "type": "io.netty.channel.local.LocalChannel",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.pool.SimpleChannelPool$1"
      },
      "type": "io.netty.channel.pool.SimpleChannelPool$1"
    },
    {
      "condition": {
        "typeReached": "io.netty.bootstrap.Bootstrap"
      },
      "type": "io.netty.channel.socket.nio.NioDatagramChannel",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.resolver.dns.DnsAddressResolverGroup"
      },
      "type": "io.netty.channel.socket.nio.NioDatagramChannel",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.resolver.dns.DnsNameResolver"
      },
      "type": "io.netty.channel.socket.nio.NioDatagramChannel",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.resolver.dns.DnsNameResolverBuilder"
      },
      "type": "io.netty.channel.socket.nio.NioDatagramChannel"
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.socket.nio.NioServerSocketChannel"
      },
      "type": "io.netty.channel.socket.nio.NioServerSocketChannel",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.proxy.ProxyServer"
      },
      "type": "io.netty.channel.socket.nio.NioServerSocketChannel",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.bootstrap.Bootstrap"
      },
      "type": "io.netty.channel.socket.nio.NioSocketChannel",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.proxy.ProxyServer$IntermediaryHandler"
      },
      "type": "io.netty.channel.socket.nio.NioSocketChannel",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler"
      },
      "type": "io.netty.channel.socket.nio.NioSocketChannel",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.resolver.dns.DnsNameResolverBuilder"
      },
      "type": "io.netty.channel.socket.nio.NioSocketChannel"
    },
    {
      "condition": {
        "typeReached": "io.netty.bootstrap.Bootstrap"
      },
      "type": "io.netty.channel.socket.oio.OioSocketChannel",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.unix.Unix"
      },
      "type": "io.netty.channel.unix.DatagramSocketAddress"
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.unix.Unix"
      },
      "type": "io.netty.channel.unix.DomainDatagramSocketAddress"
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.epoll.Native"
      },
      "type": "io.netty.channel.unix.PeerCredentials"
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.kqueue.Native"
      },
      "type": "io.netty.channel.unix.PeerCredentials"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.address.DynamicAddressConnectHandler"
      },
      "type": "io.netty.handler.address.DynamicAddressConnectHandler"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.address.ResolveAddressHandler"
      },
      "type": "io.netty.handler.address.ResolveAddressHandler"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.ByteToMessageCodec"
      },
      "type": "io.netty.handler.codec.ByteToMessageCodec"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.ByteToMessageCodec$1"
      },
      "type": "io.netty.handler.codec.ByteToMessageCodec$1"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.ByteToMessageCodec$Encoder"
      },
      "type": "io.netty.handler.codec.ByteToMessageCodec$Encoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.ByteToMessageDecoder"
      },
      "type": "io.netty.handler.codec.ByteToMessageDecoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.DatagramPacketDecoder"
      },
      "type": "io.netty.handler.codec.DatagramPacketDecoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.DatagramPacketEncoder"
      },
      "type": "io.netty.handler.codec.DatagramPacketEncoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.DelimiterBasedFrameDecoder"
      },
      "type": "io.netty.handler.codec.DelimiterBasedFrameDecoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.FixedLengthFrameDecoder"
      },
      "type": "io.netty.handler.codec.FixedLengthFrameDecoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.LengthFieldBasedFrameDecoder"
      },
      "type": "io.netty.handler.codec.LengthFieldBasedFrameDecoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.LengthFieldPrepender"
      },
      "type": "io.netty.handler.codec.LengthFieldPrepender"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.LineBasedFrameDecoder"
      },
      "type": "io.netty.handler.codec.LineBasedFrameDecoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.MessageAggregator"
      },
      "type": "io.netty.handler.codec.MessageAggregator"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.MessageToByteEncoder"
      },
      "type": "io.netty.handler.codec.MessageToByteEncoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.MessageToMessageCodec"
      },
      "type": "io.netty.handler.codec.MessageToMessageCodec"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.MessageToMessageCodec$1"
      },
      "type": "io.netty.handler.codec.MessageToMessageCodec$1"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.MessageToMessageCodec$2"
      },
      "type": "io.netty.handler.codec.MessageToMessageCodec$2"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.MessageToMessageDecoder"
      },
      "type": "io.netty.handler.codec.MessageToMessageDecoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.MessageToMessageEncoder"
      },
      "type": "io.netty.handler.codec.MessageToMessageEncoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.ReplayingDecoder"
      },
      "type": "io.netty.handler.codec.ReplayingDecoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.base64.Base64Decoder"
      },
      "type": "io.netty.handler.codec.base64.Base64Decoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.base64.Base64Encoder"
      },
      "type": "io.netty.handler.codec.base64.Base64Encoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.bytes.ByteArrayDecoder"
      },
      "type": "io.netty.handler.codec.bytes.ByteArrayDecoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.bytes.ByteArrayEncoder"
      },
      "type": "io.netty.handler.codec.bytes.ByteArrayEncoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.compression.BrotliDecoder"
      },
      "type": "io.netty.handler.codec.compression.BrotliDecoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.compression.BrotliEncoder"
      },
      "type": "io.netty.handler.codec.compression.BrotliEncoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.compression.Bzip2Decoder"
      },
      "type": "io.netty.handler.codec.compression.Bzip2Decoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.compression.Bzip2Encoder"
      },
      "type": "io.netty.handler.codec.compression.Bzip2Encoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.compression.FastLzFrameDecoder"
      },
      "type": "io.netty.handler.codec.compression.FastLzFrameDecoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.compression.FastLzFrameEncoder"
      },
      "type": "io.netty.handler.codec.compression.FastLzFrameEncoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.compression.JZlibDecoder"
      },
      "type": "io.netty.handler.codec.compression.JZlibDecoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.compression.JZlibEncoder"
      },
      "type": "io.netty.handler.codec.compression.JZlibEncoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.compression.JdkZlibDecoder"
      },
      "type": "io.netty.handler.codec.compression.JdkZlibDecoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.compression.JdkZlibEncoder"
      },
      "type": "io.netty.handler.codec.compression.JdkZlibEncoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.compression.Lz4FrameDecoder"
      },
      "type": "io.netty.handler.codec.compression.Lz4FrameDecoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.compression.Lz4FrameEncoder"
      },
      "type": "io.netty.handler.codec.compression.Lz4FrameEncoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.compression.LzfDecoder"
      },
      "type": "io.netty.handler.codec.compression.LzfDecoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.compression.LzfEncoder"
      },
      "type": "io.netty.handler.codec.compression.LzfEncoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.compression.LzmaFrameEncoder"
      },
      "type": "io.netty.handler.codec.compression.LzmaFrameEncoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.compression.SnappyFrameDecoder"
      },
      "type": "io.netty.handler.codec.compression.SnappyFrameDecoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.compression.SnappyFrameEncoder"
      },
      "type": "io.netty.handler.codec.compression.SnappyFrameEncoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.compression.SnappyFramedDecoder"
      },
      "type": "io.netty.handler.codec.compression.SnappyFramedDecoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.compression.SnappyFramedEncoder"
      },
      "type": "io.netty.handler.codec.compression.SnappyFramedEncoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.compression.ZlibDecoder"
      },
      "type": "io.netty.handler.codec.compression.ZlibDecoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.compression.ZlibEncoder"
      },
      "type": "io.netty.handler.codec.compression.ZlibEncoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.compression.ZstdEncoder"
      },
      "type": "io.netty.handler.codec.compression.ZstdEncoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.dns.DatagramDnsQueryDecoder"
      },
      "type": "io.netty.handler.codec.dns.DatagramDnsQueryDecoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.dns.DatagramDnsQueryEncoder"
      },
      "type": "io.netty.handler.codec.dns.DatagramDnsQueryEncoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.dns.DatagramDnsResponseDecoder"
      },
      "type": "io.netty.handler.codec.dns.DatagramDnsResponseDecoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.dns.DatagramDnsResponseEncoder"
      },
      "type": "io.netty.handler.codec.dns.DatagramDnsResponseEncoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.dns.TcpDnsQueryDecoder"
      },
      "type": "io.netty.handler.codec.dns.TcpDnsQueryDecoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.dns.TcpDnsQueryEncoder"
      },
      "type": "io.netty.handler.codec.dns.TcpDnsQueryEncoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.dns.TcpDnsResponseDecoder"
      },
      "type": "io.netty.handler.codec.dns.TcpDnsResponseDecoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.dns.TcpDnsResponseEncoder"
      },
      "type": "io.netty.handler.codec.dns.TcpDnsResponseEncoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.haproxy.HAProxyMessageDecoder"
      },
      "type": "io.netty.handler.codec.haproxy.HAProxyMessageDecoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.haproxy.HAProxyMessageEncoder"
      },
      "type": "io.netty.handler.codec.haproxy.HAProxyMessageEncoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.http.HttpClientCodec"
      },
      "type": "io.netty.handler.codec.http.HttpClientCodec"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.http.HttpClientCodec$Decoder"
      },
      "type": "io.netty.handler.codec.http.HttpClientCodec$Decoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.http.HttpClientCodec$Encoder"
      },
      "type": "io.netty.handler.codec.http.HttpClientCodec$Encoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.http.HttpClientUpgradeHandler"
      },
      "type": "io.netty.handler.codec.http.HttpClientUpgradeHandler"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.http.HttpContentCompressor"
      },
      "type": "io.netty.handler.codec.http.HttpContentCompressor"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.http.HttpContentDecoder"
      },
      "type": "io.netty.handler.codec.http.HttpContentDecoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.http.HttpContentDecompressor"
      },
      "type": "io.netty.handler.codec.http.HttpContentDecompressor"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.http.HttpContentEncoder"
      },
      "type": "io.netty.handler.codec.http.HttpContentEncoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.http.HttpObjectAggregator"
      },
      "type": "io.netty.handler.codec.http.HttpObjectAggregator"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.http.HttpObjectDecoder"
      },
      "type": "io.netty.handler.codec.http.HttpObjectDecoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.http.HttpObjectEncoder"
      },
      "type": "io.netty.handler.codec.http.HttpObjectEncoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.http.HttpRequestDecoder"
      },
      "type": "io.netty.handler.codec.http.HttpRequestDecoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.http.HttpRequestEncoder"
      },
      "type": "io.netty.handler.codec.http.HttpRequestEncoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.http.HttpResponseDecoder"
      },
      "type": "io.netty.handler.codec.http.HttpResponseDecoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.http.HttpResponseEncoder"
      },
      "type": "io.netty.handler.codec.http.HttpResponseEncoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.http.HttpServerCodec"
      },
      "type": "io.netty.handler.codec.http.HttpServerCodec"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.http.HttpServerCodec$HttpServerRequestDecoder"
      },
      "type": "io.netty.handler.codec.http.HttpServerCodec$HttpServerRequestDecoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.http.HttpServerCodec$HttpServerResponseEncoder"
      },
      "type": "io.netty.handler.codec.http.HttpServerCodec$HttpServerResponseEncoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.http.HttpServerExpectContinueHandler"
      },
      "type": "io.netty.handler.codec.http.HttpServerExpectContinueHandler"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.http.HttpServerKeepAliveHandler"
      },
      "type": "io.netty.handler.codec.http.HttpServerKeepAliveHandler"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.http.HttpServerUpgradeHandler"
      },
      "type": "io.netty.handler.codec.http.HttpServerUpgradeHandler"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.http.cors.CorsHandler"
      },
      "type": "io.netty.handler.codec.http.cors.CorsHandler"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.http.websocketx.Utf8FrameValidator"
      },
      "type": "io.netty.handler.codec.http.websocketx.Utf8FrameValidator"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.http.websocketx.WebSocket00FrameDecoder"
      },
      "type": "io.netty.handler.codec.http.websocketx.WebSocket00FrameDecoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.http.websocketx.WebSocket00FrameEncoder"
      },
      "type": "io.netty.handler.codec.http.websocketx.WebSocket00FrameEncoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.http.websocketx.WebSocket07FrameDecoder"
      },
      "type": "io.netty.handler.codec.http.websocketx.WebSocket07FrameDecoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.http.websocketx.WebSocket07FrameEncoder"
      },
      "type": "io.netty.handler.codec.http.websocketx.WebSocket07FrameEncoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.http.websocketx.WebSocket08FrameDecoder"
      },
      "type": "io.netty.handler.codec.http.websocketx.WebSocket08FrameDecoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.http.websocketx.WebSocket08FrameEncoder"
      },
      "type": "io.netty.handler.codec.http.websocketx.WebSocket08FrameEncoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.http.websocketx.WebSocket13FrameDecoder"
      },
      "type": "io.netty.handler.codec.http.websocketx.WebSocket13FrameDecoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.http.websocketx.WebSocket13FrameEncoder"
      },
      "type": "io.netty.handler.codec.http.websocketx.WebSocket13FrameEncoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker$4"
      },
      "type": "io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker$4"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.http.websocketx.WebSocketClientProtocolHandler"
      },
      "type": "io.netty.handler.codec.http.websocketx.WebSocketClientProtocolHandler"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.http.websocketx.WebSocketClientProtocolHandshakeHandler"
      },
      "type": "io.netty.handler.codec.http.websocketx.WebSocketClientProtocolHandshakeHandler"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.http.websocketx.WebSocketFrameAggregator"
      },
      "type": "io.netty.handler.codec.http.websocketx.WebSocketFrameAggregator"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.http.websocketx.WebSocketFrameDecoder"
      },
      "type": "io.netty.handler.codec.http.websocketx.WebSocketFrameDecoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.http.websocketx.WebSocketFrameEncoder"
      },
      "type": "io.netty.handler.codec.http.websocketx.WebSocketFrameEncoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.http.websocketx.WebSocketProtocolHandler"
      },
      "type": "io.netty.handler.codec.http.websocketx.WebSocketProtocolHandler"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker$2"
      },
      "type": "io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker$2"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandler"
      },
      "type": "io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandler"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandshakeHandler"
      },
      "type": "io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandshakeHandler"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.http.websocketx.extensions.WebSocketClientExtensionHandler"
      },
      "type": "io.netty.handler.codec.http.websocketx.extensions.WebSocketClientExtensionHandler"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionDecoder"
      },
      "type": "io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionDecoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionEncoder"
      },
      "type": "io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionEncoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler"
      },
      "type": "io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.http.websocketx.extensions.compression.DeflateDecoder"
      },
      "type": "io.netty.handler.codec.http.websocketx.extensions.compression.DeflateDecoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.http.websocketx.extensions.compression.DeflateEncoder"
      },
      "type": "io.netty.handler.codec.http.websocketx.extensions.compression.DeflateEncoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.http.websocketx.extensions.compression.PerFrameDeflateDecoder"
      },
      "type": "io.netty.handler.codec.http.websocketx.extensions.compression.PerFrameDeflateDecoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.http.websocketx.extensions.compression.PerFrameDeflateEncoder"
      },
      "type": "io.netty.handler.codec.http.websocketx.extensions.compression.PerFrameDeflateEncoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.http.websocketx.extensions.compression.PerMessageDeflateDecoder"
      },
      "type": "io.netty.handler.codec.http.websocketx.extensions.compression.PerMessageDeflateDecoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.http.websocketx.extensions.compression.PerMessageDeflateEncoder"
      },
      "type": "io.netty.handler.codec.http.websocketx.extensions.compression.PerMessageDeflateEncoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.http.websocketx.extensions.compression.WebSocketClientCompressionHandler"
      },
      "type": "io.netty.handler.codec.http.websocketx.extensions.compression.WebSocketClientCompressionHandler"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.http.websocketx.extensions.compression.WebSocketServerCompressionHandler"
      },
      "type": "io.netty.handler.codec.http.websocketx.extensions.compression.WebSocketServerCompressionHandler"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.http2.CleartextHttp2ServerUpgradeHandler"
      },
      "type": "io.netty.handler.codec.http2.CleartextHttp2ServerUpgradeHandler"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.http2.Http2ChannelDuplexHandler"
      },
      "type": "io.netty.handler.codec.http2.Http2ChannelDuplexHandler"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.http2.Http2ConnectionHandler"
      },
      "type": "io.netty.handler.codec.http2.Http2ConnectionHandler"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.http2.Http2FrameCodec"
      },
      "type": "io.netty.handler.codec.http2.Http2FrameCodec"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.http2.Http2FrameLogger"
      },
      "type": "io.netty.handler.codec.http2.Http2FrameLogger"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.http2.Http2MultiplexCodec"
      },
      "type": "io.netty.handler.codec.http2.Http2MultiplexCodec"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.http2.Http2MultiplexHandler"
      },
      "type": "io.netty.handler.codec.http2.Http2MultiplexHandler"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.http2.Http2StreamFrameToHttpObjectCodec"
      },
      "type": "io.netty.handler.codec.http2.Http2StreamFrameToHttpObjectCodec"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.http2.HttpToHttp2ConnectionHandler"
      },
      "type": "io.netty.handler.codec.http2.HttpToHttp2ConnectionHandler"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.http2.InboundHttpToHttp2Adapter"
      },
      "type": "io.netty.handler.codec.http2.InboundHttpToHttp2Adapter"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.json.JsonObjectDecoder"
      },
      "type": "io.netty.handler.codec.json.JsonObjectDecoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.marshalling.CompatibleMarshallingDecoder"
      },
      "type": "io.netty.handler.codec.marshalling.CompatibleMarshallingDecoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.marshalling.CompatibleMarshallingEncoder"
      },
      "type": "io.netty.handler.codec.marshalling.CompatibleMarshallingEncoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.marshalling.MarshallingDecoder"
      },
      "type": "io.netty.handler.codec.marshalling.MarshallingDecoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.marshalling.MarshallingEncoder"
      },
      "type": "io.netty.handler.codec.marshalling.MarshallingEncoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.memcache.AbstractMemcacheObjectAggregator"
      },
      "type": "io.netty.handler.codec.memcache.AbstractMemcacheObjectAggregator"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.memcache.AbstractMemcacheObjectDecoder"
      },
      "type": "io.netty.handler.codec.memcache.AbstractMemcacheObjectDecoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.memcache.AbstractMemcacheObjectEncoder"
      },
      "type": "io.netty.handler.codec.memcache.AbstractMemcacheObjectEncoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.memcache.binary.AbstractBinaryMemcacheDecoder"
      },
      "type": "io.netty.handler.codec.memcache.binary.AbstractBinaryMemcacheDecoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.memcache.binary.AbstractBinaryMemcacheEncoder"
      },
      "type": "io.netty.handler.codec.memcache.binary.AbstractBinaryMemcacheEncoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.memcache.binary.BinaryMemcacheClientCodec"
      },
      "type": "io.netty.handler.codec.memcache.binary.BinaryMemcacheClientCodec"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.memcache.binary.BinaryMemcacheClientCodec$Decoder"
      },
      "type": "io.netty.handler.codec.memcache.binary.BinaryMemcacheClientCodec$Decoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.memcache.binary.BinaryMemcacheClientCodec$Encoder"
      },
      "type": "io.netty.handler.codec.memcache.binary.BinaryMemcacheClientCodec$Encoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.memcache.binary.BinaryMemcacheObjectAggregator"
      },
      "type": "io.netty.handler.codec.memcache.binary.BinaryMemcacheObjectAggregator"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.memcache.binary.BinaryMemcacheRequestDecoder"
      },
      "type": "io.netty.handler.codec.memcache.binary.BinaryMemcacheRequestDecoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.memcache.binary.BinaryMemcacheRequestEncoder"
      },
      "type": "io.netty.handler.codec.memcache.binary.BinaryMemcacheRequestEncoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.memcache.binary.BinaryMemcacheResponseDecoder"
      },
      "type": "io.netty.handler.codec.memcache.binary.BinaryMemcacheResponseDecoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.memcache.binary.BinaryMemcacheResponseEncoder"
      },
      "type": "io.netty.handler.codec.memcache.binary.BinaryMemcacheResponseEncoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.memcache.binary.BinaryMemcacheServerCodec"
      },
      "type": "io.netty.handler.codec.memcache.binary.BinaryMemcacheServerCodec"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.mqtt.MqttDecoder"
      },
      "type": "io.netty.handler.codec.mqtt.MqttDecoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.mqtt.MqttEncoder"
      },
      "type": "io.netty.handler.codec.mqtt.MqttEncoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.protobuf.ProtobufDecoder"
      },
      "type": "io.netty.handler.codec.protobuf.ProtobufDecoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.protobuf.ProtobufDecoderNano"
      },
      "type": "io.netty.handler.codec.protobuf.ProtobufDecoderNano"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.protobuf.ProtobufEncoder"
      },
      "type": "io.netty.handler.codec.protobuf.ProtobufEncoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.protobuf.ProtobufEncoderNano"
      },
      "type": "io.netty.handler.codec.protobuf.ProtobufEncoderNano"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.protobuf.ProtobufVarint32FrameDecoder"
      },
      "type": "io.netty.handler.codec.protobuf.ProtobufVarint32FrameDecoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.protobuf.ProtobufVarint32LengthFieldPrepender"
      },
      "type": "io.netty.handler.codec.protobuf.ProtobufVarint32LengthFieldPrepender"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.redis.RedisArrayAggregator"
      },
      "type": "io.netty.handler.codec.redis.RedisArrayAggregator"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.redis.RedisBulkStringAggregator"
      },
      "type": "io.netty.handler.codec.redis.RedisBulkStringAggregator"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.redis.RedisDecoder"
      },
      "type": "io.netty.handler.codec.redis.RedisDecoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.redis.RedisEncoder"
      },
      "type": "io.netty.handler.codec.redis.RedisEncoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.rtsp.RtspDecoder"
      },
      "type": "io.netty.handler.codec.rtsp.RtspDecoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.rtsp.RtspEncoder"
      },
      "type": "io.netty.handler.codec.rtsp.RtspEncoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.rtsp.RtspObjectDecoder"
      },
      "type": "io.netty.handler.codec.rtsp.RtspObjectDecoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.rtsp.RtspObjectEncoder"
      },
      "type": "io.netty.handler.codec.rtsp.RtspObjectEncoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.rtsp.RtspRequestDecoder"
      },
      "type": "io.netty.handler.codec.rtsp.RtspRequestDecoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.rtsp.RtspRequestEncoder"
      },
      "type": "io.netty.handler.codec.rtsp.RtspRequestEncoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.rtsp.RtspResponseDecoder"
      },
      "type": "io.netty.handler.codec.rtsp.RtspResponseDecoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.rtsp.RtspResponseEncoder"
      },
      "type": "io.netty.handler.codec.rtsp.RtspResponseEncoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.sctp.SctpInboundByteStreamHandler"
      },
      "type": "io.netty.handler.codec.sctp.SctpInboundByteStreamHandler"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.sctp.SctpMessageCompletionHandler"
      },
      "type": "io.netty.handler.codec.sctp.SctpMessageCompletionHandler"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.sctp.SctpMessageToMessageDecoder"
      },
      "type": "io.netty.handler.codec.sctp.SctpMessageToMessageDecoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.sctp.SctpOutboundByteStreamHandler"
      },
      "type": "io.netty.handler.codec.sctp.SctpOutboundByteStreamHandler"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.serialization.CompatibleObjectEncoder"
      },
      "type": "io.netty.handler.codec.serialization.CompatibleObjectEncoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.serialization.ObjectDecoder"
      },
      "type": "io.netty.handler.codec.serialization.ObjectDecoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.serialization.ObjectEncoder"
      },
      "type": "io.netty.handler.codec.serialization.ObjectEncoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.smtp.SmtpRequestEncoder"
      },
      "type": "io.netty.handler.codec.smtp.SmtpRequestEncoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.smtp.SmtpResponseDecoder"
      },
      "type": "io.netty.handler.codec.smtp.SmtpResponseDecoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.socks.SocksAuthRequestDecoder"
      },
      "type": "io.netty.handler.codec.socks.SocksAuthRequestDecoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.socks.SocksAuthResponseDecoder"
      },
      "type": "io.netty.handler.codec.socks.SocksAuthResponseDecoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.socks.SocksCmdRequestDecoder"
      },
      "type": "io.netty.handler.codec.socks.SocksCmdRequestDecoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.socks.SocksCmdResponseDecoder"
      },
      "type": "io.netty.handler.codec.socks.SocksCmdResponseDecoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.socks.SocksInitRequestDecoder"
      },
      "type": "io.netty.handler.codec.socks.SocksInitRequestDecoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.socks.SocksInitResponseDecoder"
      },
      "type": "io.netty.handler.codec.socks.SocksInitResponseDecoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.socks.SocksMessageEncoder"
      },
      "type": "io.netty.handler.codec.socks.SocksMessageEncoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.socksx.SocksPortUnificationServerHandler"
      },
      "type": "io.netty.handler.codec.socksx.SocksPortUnificationServerHandler"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.socksx.v4.Socks4ClientDecoder"
      },
      "type": "io.netty.handler.codec.socksx.v4.Socks4ClientDecoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.socksx.v4.Socks4ClientEncoder"
      },
      "type": "io.netty.handler.codec.socksx.v4.Socks4ClientEncoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.socksx.v4.Socks4ServerDecoder"
      },
      "type": "io.netty.handler.codec.socksx.v4.Socks4ServerDecoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.socksx.v4.Socks4ServerEncoder"
      },
      "type": "io.netty.handler.codec.socksx.v4.Socks4ServerEncoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.socksx.v5.Socks5ClientEncoder"
      },
      "type": "io.netty.handler.codec.socksx.v5.Socks5ClientEncoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.socksx.v5.Socks5CommandRequestDecoder"
      },
      "type": "io.netty.handler.codec.socksx.v5.Socks5CommandRequestDecoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.socksx.v5.Socks5CommandResponseDecoder"
      },
      "type": "io.netty.handler.codec.socksx.v5.Socks5CommandResponseDecoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.socksx.v5.Socks5InitialRequestDecoder"
      },
      "type": "io.netty.handler.codec.socksx.v5.Socks5InitialRequestDecoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.socksx.v5.Socks5InitialResponseDecoder"
      },
      "type": "io.netty.handler.codec.socksx.v5.Socks5InitialResponseDecoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.socksx.v5.Socks5PasswordAuthRequestDecoder"
      },
      "type": "io.netty.handler.codec.socksx.v5.Socks5PasswordAuthRequestDecoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.socksx.v5.Socks5PasswordAuthResponseDecoder"
      },
      "type": "io.netty.handler.codec.socksx.v5.Socks5PasswordAuthResponseDecoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.socksx.v5.Socks5ServerEncoder"
      },
      "type": "io.netty.handler.codec.socksx.v5.Socks5ServerEncoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.spdy.SpdyFrameCodec"
      },
      "type": "io.netty.handler.codec.spdy.SpdyFrameCodec"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.spdy.SpdyHttpCodec"
      },
      "type": "io.netty.handler.codec.spdy.SpdyHttpCodec"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.spdy.SpdyHttpDecoder"
      },
      "type": "io.netty.handler.codec.spdy.SpdyHttpDecoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.spdy.SpdyHttpEncoder"
      },
      "type": "io.netty.handler.codec.spdy.SpdyHttpEncoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.spdy.SpdyHttpResponseStreamIdHandler"
      },
      "type": "io.netty.handler.codec.spdy.SpdyHttpResponseStreamIdHandler"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.spdy.SpdySessionHandler"
      },
      "type": "io.netty.handler.codec.spdy.SpdySessionHandler"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.stomp.StompSubframeAggregator"
      },
      "type": "io.netty.handler.codec.stomp.StompSubframeAggregator"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.stomp.StompSubframeDecoder"
      },
      "type": "io.netty.handler.codec.stomp.StompSubframeDecoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.stomp.StompSubframeEncoder"
      },
      "type": "io.netty.handler.codec.stomp.StompSubframeEncoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.string.LineEncoder"
      },
      "type": "io.netty.handler.codec.string.LineEncoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.string.StringDecoder"
      },
      "type": "io.netty.handler.codec.string.StringDecoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.string.StringEncoder"
      },
      "type": "io.netty.handler.codec.string.StringEncoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.xml.XmlDecoder"
      },
      "type": "io.netty.handler.codec.xml.XmlDecoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.xml.XmlFrameDecoder"
      },
      "type": "io.netty.handler.codec.xml.XmlFrameDecoder"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.flow.FlowControlHandler"
      },
      "type": "io.netty.handler.flow.FlowControlHandler"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.flush.FlushConsolidationHandler"
      },
      "type": "io.netty.handler.flush.FlushConsolidationHandler"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ipfilter.AbstractRemoteAddressFilter"
      },
      "type": "io.netty.handler.ipfilter.AbstractRemoteAddressFilter"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ipfilter.IpSubnetFilter"
      },
      "type": "io.netty.handler.ipfilter.IpSubnetFilter"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ipfilter.RuleBasedIpFilter"
      },
      "type": "io.netty.handler.ipfilter.RuleBasedIpFilter"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ipfilter.UniqueIpFilter"
      },
      "type": "io.netty.handler.ipfilter.UniqueIpFilter"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.logging.LoggingHandler"
      },
      "type": "io.netty.handler.logging.LoggingHandler"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.pcap.PcapWriteHandler"
      },
      "type": "io.netty.handler.pcap.PcapWriteHandler"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.proxy.HttpProxyHandler"
      },
      "type": "io.netty.handler.proxy.HttpProxyHandler"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.proxy.HttpProxyHandler$HttpClientCodecWrapper"
      },
      "type": "io.netty.handler.proxy.HttpProxyHandler$HttpClientCodecWrapper"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.proxy.ProxyHandler"
      },
      "type": "io.netty.handler.proxy.ProxyHandler"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.proxy.Socks4ProxyHandler"
      },
      "type": "io.netty.handler.proxy.Socks4ProxyHandler"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.proxy.Socks5ProxyHandler"
      },
      "type": "io.netty.handler.proxy.Socks5ProxyHandler"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.AbstractSniHandler"
      },
      "type": "io.netty.handler.ssl.AbstractSniHandler"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.ApplicationProtocolNegotiationHandler"
      },
      "type": "io.netty.handler.ssl.ApplicationProtocolNegotiationHandler"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.OptionalSslHandler"
      },
      "type": "io.netty.handler.ssl.OptionalSslHandler"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.SniHandler"
      },
      "type": "io.netty.handler.ssl.SniHandler"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.SslClientHelloHandler"
      },
      "type": "io.netty.handler.ssl.SslClientHelloHandler"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.SslHandler"
      },
      "type": "io.netty.handler.ssl.SslHandler"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.SslMasterKeyHandler"
      },
      "type": "io.netty.handler.ssl.SslMasterKeyHandler"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.SslMasterKeyHandler$WiresharkSslMasterKeyHandler"
      },
      "type": "io.netty.handler.ssl.SslMasterKeyHandler$WiresharkSslMasterKeyHandler"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.ocsp.OcspClientHandler"
      },
      "type": "io.netty.handler.ssl.ocsp.OcspClientHandler"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.stream.ChunkedWriteHandler"
      },
      "type": "io.netty.handler.stream.ChunkedWriteHandler"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.timeout.IdleStateHandler"
      },
      "type": "io.netty.handler.timeout.IdleStateHandler"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.timeout.ReadTimeoutHandler"
      },
      "type": "io.netty.handler.timeout.ReadTimeoutHandler"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.timeout.WriteTimeoutHandler"
      },
      "type": "io.netty.handler.timeout.WriteTimeoutHandler"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.traffic.AbstractTrafficShapingHandler"
      },
      "type": "io.netty.handler.traffic.AbstractTrafficShapingHandler"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.traffic.ChannelTrafficShapingHandler"
      },
      "type": "io.netty.handler.traffic.ChannelTrafficShapingHandler"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.traffic.GlobalChannelTrafficShapingHandler"
      },
      "type": "io.netty.handler.traffic.GlobalChannelTrafficShapingHandler"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.traffic.GlobalTrafficShapingHandler"
      },
      "type": "io.netty.handler.traffic.GlobalTrafficShapingHandler"
    },
    {
      "condition": {
        "typeReached": "io.netty.internal.tcnative.Library"
      },
      "type": "io.netty.internal.tcnative.CertificateCallback"
    },
    {
      "condition": {
        "typeReached": "io.netty.internal.tcnative.Library"
      },
      "type": "io.netty.internal.tcnative.CertificateCallbackTask"
    },
    {
      "condition": {
        "typeReached": "io.netty.internal.tcnative.Library"
      },
      "type": "io.netty.internal.tcnative.SSLPrivateKeyMethodDecryptTask"
    },
    {
      "condition": {
        "typeReached": "io.netty.internal.tcnative.Library"
      },
      "type": "io.netty.internal.tcnative.SSLPrivateKeyMethodSignTask"
    },
    {
      "condition": {
        "typeReached": "io.netty.internal.tcnative.Library"
      },
      "type": "io.netty.internal.tcnative.SSLPrivateKeyMethodTask"
    },
    {
      "condition": {
        "typeReached": "io.netty.internal.tcnative.Library"
      },
      "type": "io.netty.internal.tcnative.SSLTask"
    },
    {
      "condition": {
        "typeReached": "io.netty.resolver.dns.DnsNameResolver$1"
      },
      "type": "io.netty.resolver.dns.DnsNameResolver$1"
    },
    {
      "condition": {
        "typeReached": "io.netty.resolver.dns.DnsNameResolver$3"
      },
      "type": "io.netty.resolver.dns.DnsNameResolver$3"
    },
    {
      "condition": {
        "typeReached": "io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler"
      },
      "type": "io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler"
    },
    {
      "condition": {
        "typeReached": "io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler$1$1"
      },
      "type": "io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler$1$1"
    },
    {
      "condition": {
        "typeReached": "io.netty.resolver.dns.DnsServerAddressStreamProviders"
      },
      "type": "io.netty.resolver.dns.macos.MacOSDnsServerAddressStreamProvider",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.resolver.dns.DnsServerAddressStreamProviders$1"
      },
      "type": "io.netty.resolver.dns.macos.MacOSDnsServerAddressStreamProvider"
    },
    {
      "condition": {
        "typeReached": "io.netty.util.AbstractReferenceCounted"
      },
      "type": "io.netty.util.AbstractReferenceCounted",
      "fields": [
        {
          "name": "refCnt"
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.DefaultChannelPipeline"
      },
      "type": "io.netty.util.ReferenceCountUtil"
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.epoll.AbstractEpollServerChannel$EpollServerSocketUnsafe"
      },
      "type": "io.netty.util.ReferenceCountUtil"
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.local.LocalServerChannel"
      },
      "type": "io.netty.util.ReferenceCountUtil"
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.nio.NioEventLoop"
      },
      "type": "io.netty.util.ReferenceCountUtil"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.proxy.HttpProxyHandler$HttpClientCodecWrapper"
      },
      "type": "io.netty.util.ReferenceCountUtil"
    },
    {
      "condition": {
        "typeReached": "io.netty.util.ReferenceCountUtil"
      },
      "type": "io.netty.util.ReferenceCountUtil"
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.epoll.Native"
      },
      "type": "io.netty.util.internal.NativeLibraryUtil"
    },
    {
      "condition": {
        "typeReached": "io.netty.util.internal.NativeLibraryLoader"
      },
      "type": "io.netty.util.internal.NativeLibraryUtil"
    },
    {
      "condition": {
        "typeReached": "io.netty.util.internal.NativeLibraryLoader$1"
      },
      "type": "io.netty.util.internal.NativeLibraryUtil",
      "methods": [
        {
          "name": "loadLibrary",
          "parameterTypes": [
            "java.lang.String",
            "boolean"
          ]
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.util.internal.shaded.org.jctools.queues.BaseLinkedQueueConsumerNodeRef"
      },
      "type": "io.netty.util.internal.shaded.org.jctools.queues.BaseLinkedQueueConsumerNodeRef",
      "fields": [
        {
          "name": "consumerNode"
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.util.internal.shaded.org.jctools.queues.BaseLinkedQueueProducerNodeRef"
      },
      "type": "io.netty.util.internal.shaded.org.jctools.queues.BaseLinkedQueueProducerNodeRef",
      "fields": [
        {
          "name": "producerNode"
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueColdProducerFields"
      },
      "type": "io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueColdProducerFields",
      "fields": [
        {
          "name": "producerLimit"
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueConsumerFields"
      },
      "type": "io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueConsumerFields",
      "fields": [
        {
          "name": "consumerIndex"
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueProducerFields"
      },
      "type": "io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueProducerFields",
      "fields": [
        {
          "name": "producerIndex"
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.util.internal.shaded.org.jctools.queues.LinkedQueueNode"
      },
      "type": "io.netty.util.internal.shaded.org.jctools.queues.LinkedQueueNode",
      "fields": [
        {
          "name": "next"
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueConsumerIndexField"
      },
      "type": "io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueConsumerIndexField",
      "fields": [
        {
          "name": "consumerIndex"
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueProducerIndexField"
      },
      "type": "io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueProducerIndexField",
      "fields": [
        {
          "name": "producerIndex"
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueProducerLimitField"
      },
      "type": "io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueProducerLimitField",
      "fields": [
        {
          "name": "producerLimit"
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.epoll.Native"
      },
      "type": "java.io.FileDescriptor"
    },
    {
      "condition": {
        "typeReached": "io.netty.util.internal.logging.Slf4JLoggerFactory"
      },
      "type": "java.io.FilePermission"
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.unix.Unix"
      },
      "type": "java.io.IOException"
    },
    {
      "condition": {
        "typeReached": "io.netty.internal.tcnative.Library"
      },
      "type": "java.lang.Exception"
    },
    {
      "condition": {
        "typeReached": "io.netty.internal.tcnative.Library"
      },
      "type": "java.lang.IllegalArgumentException"
    },
    {
      "condition": {
        "typeReached": "io.netty.internal.tcnative.Library"
      },
      "type": "java.lang.NullPointerException"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.marshalling.MarshallingEncoder"
      },
      "type": "java.lang.Object",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.unix.Unix"
      },
      "type": "java.lang.OutOfMemoryError"
    },
    {
      "condition": {
        "typeReached": "io.netty.internal.tcnative.Library"
      },
      "type": "java.lang.OutOfMemoryError"
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.DefaultChannelId"
      },
      "type": "java.lang.ProcessHandle",
      "methods": [
        {
          "name": "current",
          "parameterTypes": []
        },
        {
          "name": "pid",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.unix.Unix"
      },
      "type": "java.lang.RuntimeException"
    },
    {
      "condition": {
        "typeReached": "io.netty.util.internal.logging.Slf4JLoggerFactory"
      },
      "type": "java.lang.RuntimePermission"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.marshalling.MarshallingEncoder"
      },
      "type": "java.lang.String",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "io.netty.internal.tcnative.Library"
      },
      "type": "java.lang.String"
    },
    {
      "condition": {
        "typeReached": "io.netty.util.internal.logging.CommonsLoggerFactory"
      },
      "type": "java.lang.String"
    },
    {
      "condition": {
        "typeReached": "io.netty.util.internal.logging.LocationAwareSlf4JLogger"
      },
      "type": "java.lang.Throwable",
      "methods": [
        {
          "name": "getSuppressed",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.DefaultChannelId"
      },
      "type": "java.lang.management.ManagementFactory",
      "methods": [
        {
          "name": "getRuntimeMXBean",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.util.internal.PlatformDependent"
      },
      "type": "java.lang.management.ManagementFactory",
      "methods": [
        {
          "name": "getRuntimeMXBean",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.DefaultChannelId"
      },
      "type": "java.lang.management.RuntimeMXBean",
      "methods": [
        {
          "name": "getName",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.util.internal.PlatformDependent"
      },
      "type": "java.lang.management.RuntimeMXBean",
      "methods": [
        {
          "name": "getInputArguments",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.resolver.HostsFileEntriesProvider"
      },
      "type": "java.lang.reflect.Executable",
      "methods": [
        {
          "name": "getParameterCount",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.resolver.dns.DnsNameResolverBuilder"
      },
      "type": "java.lang.reflect.Executable",
      "methods": [
        {
          "name": "getParameterCount",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.util.concurrent.SingleThreadEventExecutor"
      },
      "type": "java.lang.reflect.Executable",
      "methods": [
        {
          "name": "getParameterCount",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.marshalling.DefaultUnmarshallerProvider"
      },
      "type": "java.lang.reflect.Proxy",
      "fields": [
        {
          "name": "h"
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.unix.Unix"
      },
      "type": "java.net.InetSocketAddress"
    },
    {
      "condition": {
        "typeReached": "io.netty.util.internal.logging.Slf4JLoggerFactory"
      },
      "type": "java.net.NetPermission"
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.unix.Unix"
      },
      "type": "java.net.PortUnreachableException"
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.socket.nio.NioDatagramChannelConfig"
      },
      "type": "java.net.SocketOption"
    },
    {
      "condition": {
        "typeReached": "io.netty.util.internal.logging.Slf4JLoggerFactory"
      },
      "type": "java.net.SocketPermission"
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.socket.nio.NioDatagramChannelConfig"
      },
      "type": "java.net.StandardSocketOptions",
      "fields": [
        {
          "name": "IP_MULTICAST_IF"
        },
        {
          "name": "IP_MULTICAST_LOOP"
        },
        {
          "name": "IP_MULTICAST_TTL"
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.util.internal.logging.Slf4JLoggerFactory"
      },
      "type": "java.net.URLPermission",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.String",
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.util.internal.PlatformDependent0$6"
      },
      "type": "java.nio.Bits",
      "fields": [
        {
          "name": "UNALIGNED"
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.util.internal.PlatformDependent0$4"
      },
      "type": "java.nio.Buffer",
      "fields": [
        {
          "name": "address"
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.util.internal.PlatformDependent0"
      },
      "type": "java.nio.ByteBuffer",
      "methods": [
        {
          "name": "alignedSlice",
          "parameterTypes": [
            "int"
          ]
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.util.internal.PlatformDependent0$9"
      },
      "type": "java.nio.ByteBuffer"
    },
    {
      "condition": {
        "typeReached": "io.netty.util.internal.PlatformDependent0"
      },
      "type": "java.nio.DirectByteBuffer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "long",
            "int"
          ]
        },
        {
          "name": "<init>",
          "parameterTypes": [
            "long",
            "long"
          ]
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.util.internal.PlatformDependent0$5"
      },
      "type": "java.nio.DirectByteBuffer"
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.unix.Unix"
      },
      "type": "java.nio.channels.ClosedChannelException"
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.epoll.Native"
      },
      "type": "java.nio.channels.FileChannel"
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.socket.nio.NioDatagramChannelConfig"
      },
      "type": "java.nio.channels.NetworkChannel",
      "methods": [
        {
          "name": "getOption",
          "parameterTypes": [
            "java.net.SocketOption"
          ]
        },
        {
          "name": "setOption",
          "parameterTypes": [
            "java.net.SocketOption",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.socket.nio.NioServerSocketChannel"
      },
      "type": "java.nio.channels.spi.SelectorProvider",
      "methods": [
        {
          "name": "openServerSocketChannel",
          "parameterTypes": [
            "java.net.ProtocolFamily"
          ]
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.socket.nio.NioSocketChannel"
      },
      "type": "java.nio.channels.spi.SelectorProvider",
      "methods": [
        {
          "name": "openSocketChannel",
          "parameterTypes": [
            "java.net.ProtocolFamily"
          ]
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.util.internal.logging.Slf4JLoggerFactory"
      },
      "type": "java.security.AllPermission"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.JdkSslContext$Defaults"
      },
      "type": "java.security.KeyStoreSpi"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.JdkAlpnSslUtils"
      },
      "type": "java.security.SecureRandomParameters"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.JdkSslClientContext"
      },
      "type": "java.security.SecureRandomParameters"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.JdkSslContext$Defaults"
      },
      "type": "java.security.SecureRandomParameters"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.JdkSslServerContext"
      },
      "type": "java.security.SecureRandomParameters"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.OpenSslX509TrustManagerWrapper"
      },
      "type": "java.security.SecureRandomParameters"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.OpenSslX509TrustManagerWrapper$UnsafeTrustManagerWrapper"
      },
      "type": "java.security.SecureRandomParameters"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.SslContext"
      },
      "type": "java.security.SecureRandomParameters"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.SslUtils"
      },
      "type": "java.security.SecureRandomParameters"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.util.ThreadLocalInsecureRandom"
      },
      "type": "java.security.SecureRandomParameters"
    },
    {
      "condition": {
        "typeReached": "io.netty.util.internal.PlatformDependent"
      },
      "type": "java.security.SecureRandomParameters"
    },
    {
      "condition": {
        "typeReached": "io.netty.util.internal.logging.Slf4JLoggerFactory"
      },
      "type": "java.security.SecurityPermission"
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.nio.NioEventLoop"
      },
      "type": "java.security.cert.CertStoreParameters"
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.epoll.EpollEventLoop"
      },
      "type": "java.security.interfaces.ECPrivateKey"
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.nio.NioEventLoop"
      },
      "type": "java.security.interfaces.ECPrivateKey"
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.epoll.EpollEventLoop"
      },
      "type": "java.security.interfaces.ECPublicKey"
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.nio.NioEventLoop"
      },
      "type": "java.security.interfaces.ECPublicKey"
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.epoll.EpollEventLoop"
      },
      "type": "java.security.interfaces.RSAPrivateKey"
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.nio.NioEventLoop"
      },
      "type": "java.security.interfaces.RSAPrivateKey"
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.epoll.EpollEventLoop"
      },
      "type": "java.security.interfaces.RSAPublicKey"
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.nio.NioEventLoop"
      },
      "type": "java.security.interfaces.RSAPublicKey"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.serialization.ClassLoaderClassResolver"
      },
      "type": "java.util.List"
    },
    {
      "condition": {
        "typeReached": "io.netty.util.internal.logging.Slf4JLoggerFactory"
      },
      "type": "java.util.PropertyPermission"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.compression.ByteBufChecksum"
      },
      "type": "java.util.zip.Adler32",
      "methods": [
        {
          "name": "update",
          "parameterTypes": [
            "java.nio.ByteBuffer"
          ]
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.compression.FastLzFrameDecoder"
      },
      "type": "java.util.zip.Adler32",
      "methods": [
        {
          "name": "update",
          "parameterTypes": [
            "java.nio.ByteBuffer"
          ]
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.compression.FastLzFrameEncoder"
      },
      "type": "java.util.zip.Adler32",
      "methods": [
        {
          "name": "update",
          "parameterTypes": [
            "java.nio.ByteBuffer"
          ]
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.compression.ByteBufChecksum"
      },
      "type": "java.util.zip.CRC32",
      "methods": [
        {
          "name": "update",
          "parameterTypes": [
            "java.nio.ByteBuffer"
          ]
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.compression.JdkZlibDecoder"
      },
      "type": "java.util.zip.CRC32",
      "methods": [
        {
          "name": "update",
          "parameterTypes": [
            "java.nio.ByteBuffer"
          ]
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.util.internal.logging.Slf4JLoggerFactory"
      },
      "type": "javax.management.ObjectName"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.OpenSslX509TrustManagerWrapper$3"
      },
      "type": "javax.net.ssl.SSLContext",
      "fields": [
        {
          "name": "contextSpi"
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.JdkAlpnSslUtils"
      },
      "type": "javax.net.ssl.SSLEngine",
      "methods": [
        {
          "name": "getApplicationProtocol",
          "parameterTypes": []
        },
        {
          "name": "getHandshakeApplicationProtocol",
          "parameterTypes": []
        },
        {
          "name": "getHandshakeApplicationProtocolSelector",
          "parameterTypes": []
        },
        {
          "name": "setHandshakeApplicationProtocolSelector",
          "parameterTypes": [
            "java.util.function.BiFunction"
          ]
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.JdkAlpnSslUtils$1"
      },
      "type": "javax.net.ssl.SSLEngine"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.JdkAlpnSslUtils$2"
      },
      "type": "javax.net.ssl.SSLEngine"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.JdkAlpnSslUtils$4"
      },
      "type": "javax.net.ssl.SSLEngine"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.JdkAlpnSslUtils$6"
      },
      "type": "javax.net.ssl.SSLEngine"
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.nio.NioEventLoop"
      },
      "type": "javax.net.ssl.SSLParameters",
      "methods": [
        {
          "name": "setApplicationProtocols",
          "parameterTypes": [
            "java.lang.String[]"
          ]
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.JdkAlpnSslUtils"
      },
      "type": "javax.net.ssl.SSLParameters",
      "methods": [
        {
          "name": "setApplicationProtocols",
          "parameterTypes": [
            "java.lang.String[]"
          ]
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.JdkAlpnSslUtils$3"
      },
      "type": "javax.net.ssl.SSLParameters"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.SslUtils"
      },
      "type": "javax.net.ssl.SSLParameters",
      "methods": [
        {
          "name": "setApplicationProtocols",
          "parameterTypes": [
            "java.lang.String[]"
          ]
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.epoll.EpollEventLoop"
      },
      "type": "javax.security.auth.x500.X500Principal",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "sun.security.x509.X500Name"
          ]
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.nio.NioEventLoop"
      },
      "type": "javax.security.auth.x500.X500Principal",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "sun.security.x509.X500Name"
          ]
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.ReferenceCountedOpenSslEngine$DefaultOpenSslSession"
      },
      "type": "javax.security.auth.x500.X500Principal",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "sun.security.x509.X500Name"
          ]
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.util.LazyX509Certificate"
      },
      "type": "javax.security.auth.x500.X500Principal",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "sun.security.x509.X500Name"
          ]
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.util.concurrent.FastThreadLocalRunnable"
      },
      "type": "javax.security.auth.x500.X500Principal",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "sun.security.x509.X500Name"
          ]
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.util.internal.PlatformDependent0$7"
      },
      "type": "jdk.internal.misc.Unsafe",
      "methods": [
        {
          "name": "getUnsafe",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.util.internal.PlatformDependent0$8"
      },
      "type": "jdk.internal.misc.Unsafe",
      "methods": [
        {
          "name": "allocateUninitializedArray",
          "parameterTypes": [
            "java.lang.Class",
            "int"
          ]
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.util.internal.logging.CommonsLoggerFactory"
      },
      "type": "org.apache.commons.logging.LogFactory"
    },
    {
      "condition": {
        "typeReached": "io.netty.util.internal.logging.CommonsLoggerFactory"
      },
      "type": "org.apache.commons.logging.impl.Log4JLogger",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.util.internal.logging.CommonsLoggerFactory"
      },
      "type": "org.apache.commons.logging.impl.LogFactoryImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.util.internal.logging.CommonsLoggerFactory"
      },
      "type": "org.apache.commons.logging.impl.WeakHashtable",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.util.internal.logging.CommonsLoggerFactory"
      },
      "type": "org.apache.log4j.Level",
      "fields": [
        {
          "name": "TRACE"
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.util.internal.logging.CommonsLoggerFactory"
      },
      "type": "org.apache.log4j.Priority"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.Conscrypt"
      },
      "type": "org.conscrypt.Conscrypt",
      "methods": [
        {
          "name": "isConscrypt",
          "parameterTypes": [
            "javax.net.ssl.SSLEngine"
          ]
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.SslUtils"
      },
      "type": "org.conscrypt.OpenSSLContextImpl$TLSv13",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.nio.NioEventLoop"
      },
      "type": "org.hamcrest.number.OrderingComparison"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.proxy.HttpProxyServer$HttpIntermediaryHandler"
      },
      "type": "org.hamcrest.number.OrderingComparison"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.compression.LzfEncoder"
      },
      "type": "sun.misc.Unsafe",
      "fields": [
        {
          "name": "theUnsafe"
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.marshalling.DefaultUnmarshallerProvider"
      },
      "type": "sun.misc.Unsafe",
      "fields": [
        {
          "name": "theUnsafe"
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.marshalling.MarshallingEncoder"
      },
      "type": "sun.misc.Unsafe",
      "fields": [
        {
          "name": "theUnsafe"
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.util.internal.CleanerJava9"
      },
      "type": "sun.misc.Unsafe",
      "methods": [
        {
          "name": "invokeCleaner",
          "parameterTypes": [
            "java.nio.ByteBuffer"
          ]
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.util.internal.CleanerJava9$1"
      },
      "type": "sun.misc.Unsafe",
      "methods": [
        {
          "name": "invokeCleaner",
          "parameterTypes": [
            "java.nio.ByteBuffer"
          ]
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.util.internal.PlatformDependent0$1"
      },
      "type": "sun.misc.Unsafe",
      "fields": [
        {
          "name": "theUnsafe"
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.util.internal.PlatformDependent0$2"
      },
      "type": "sun.misc.Unsafe"
    },
    {
      "condition": {
        "typeReached": "io.netty.util.internal.PlatformDependent0$3"
      },
      "type": "sun.misc.Unsafe"
    },
    {
      "condition": {
        "typeReached": "io.netty.util.internal.shaded.org.jctools.util.UnsafeAccess"
      },
      "type": "sun.misc.Unsafe",
      "fields": [
        {
          "name": "theUnsafe"
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.nio.NioEventLoop$3"
      },
      "type": "sun.nio.ch.SelectorImpl"
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.nio.NioEventLoop$4"
      },
      "type": "sun.nio.ch.SelectorImpl",
      "fields": [
        {
          "name": "publicSelectedKeys"
        },
        {
          "name": "selectedKeys"
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.JdkAlpnApplicationProtocolNegotiator"
      },
      "type": "sun.security.pkcs12.PKCS12KeyStore",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.JdkSslContext$Defaults"
      },
      "type": "sun.security.pkcs12.PKCS12KeyStore",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.OpenSslServerContext"
      },
      "type": "sun.security.pkcs12.PKCS12KeyStore",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.SslContext"
      },
      "type": "sun.security.pkcs12.PKCS12KeyStore",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.JdkAlpnApplicationProtocolNegotiator"
      },
      "type": "sun.security.pkcs12.PKCS12KeyStore$DualFormatPKCS12",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.JdkSslContext$Defaults"
      },
      "type": "sun.security.pkcs12.PKCS12KeyStore$DualFormatPKCS12",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.OpenSslServerContext"
      },
      "type": "sun.security.pkcs12.PKCS12KeyStore$DualFormatPKCS12",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.SslContext"
      },
      "type": "sun.security.pkcs12.PKCS12KeyStore$DualFormatPKCS12",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.epoll.EpollEventLoop"
      },
      "type": "sun.security.provider.DSA$SHA224withDSA",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.nio.NioEventLoop"
      },
      "type": "sun.security.provider.DSA$SHA224withDSA",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.JdkSslEngine"
      },
      "type": "sun.security.provider.DSA$SHA224withDSA",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.epoll.EpollEventLoop"
      },
      "type": "sun.security.provider.DSA$SHA256withDSA",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.nio.NioEventLoop"
      },
      "type": "sun.security.provider.DSA$SHA256withDSA",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.JdkAlpnApplicationProtocolNegotiator"
      },
      "type": "sun.security.provider.JavaKeyStore$JKS",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.JdkSslContext$Defaults"
      },
      "type": "sun.security.provider.JavaKeyStore$JKS",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.OpenSslServerContext"
      },
      "type": "sun.security.provider.JavaKeyStore$JKS",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.http.websocketx.WebSocketUtil$1"
      },
      "type": "sun.security.provider.MD5",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.JdkAlpnSslUtils"
      },
      "type": "sun.security.provider.NativePRNG",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.JdkSslClientContext"
      },
      "type": "sun.security.provider.NativePRNG",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.JdkSslContext$Defaults"
      },
      "type": "sun.security.provider.NativePRNG",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.JdkSslServerContext"
      },
      "type": "sun.security.provider.NativePRNG",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.OpenSslX509TrustManagerWrapper"
      },
      "type": "sun.security.provider.NativePRNG",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.OpenSslX509TrustManagerWrapper$UnsafeTrustManagerWrapper"
      },
      "type": "sun.security.provider.NativePRNG",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.SslContext"
      },
      "type": "sun.security.provider.NativePRNG",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.SslUtils"
      },
      "type": "sun.security.provider.NativePRNG",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.util.ThreadLocalInsecureRandom"
      },
      "type": "sun.security.provider.NativePRNG",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.util.internal.PlatformDependent"
      },
      "type": "sun.security.provider.NativePRNG",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.ThreadPerChannelEventLoop"
      },
      "type": "sun.security.provider.SHA",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.epoll.AbstractEpollChannel$AbstractEpollUnsafe$1"
      },
      "type": "sun.security.provider.SHA",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.epoll.EpollEventLoop"
      },
      "type": "sun.security.provider.SHA",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.epoll.Native"
      },
      "type": "sun.security.provider.SHA",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.nio.NioEventLoop"
      },
      "type": "sun.security.provider.SHA",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.oio.AbstractOioByteChannel"
      },
      "type": "sun.security.provider.SHA",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.http.websocketx.WebSocketUtil$2"
      },
      "type": "sun.security.provider.SHA",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.util.FingerprintTrustManagerFactory"
      },
      "type": "sun.security.provider.SHA",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.util.concurrent.FastThreadLocalRunnable"
      },
      "type": "sun.security.provider.SHA",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.epoll.EpollEventLoop"
      },
      "type": "sun.security.provider.SHA2$SHA224",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.nio.NioEventLoop"
      },
      "type": "sun.security.provider.SHA2$SHA224",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.JdkSslEngine"
      },
      "type": "sun.security.provider.SHA2$SHA224",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.DefaultEventLoop"
      },
      "type": "sun.security.provider.SHA2$SHA256",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.epoll.AbstractEpollChannel$AbstractEpollUnsafe$1"
      },
      "type": "sun.security.provider.SHA2$SHA256",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.epoll.EpollEventLoop"
      },
      "type": "sun.security.provider.SHA2$SHA256",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.local.LocalChannel"
      },
      "type": "sun.security.provider.SHA2$SHA256",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.nio.NioEventLoop"
      },
      "type": "sun.security.provider.SHA2$SHA256",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.oio.AbstractOioByteChannel"
      },
      "type": "sun.security.provider.SHA2$SHA256",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.ConscryptAlpnSslEngine"
      },
      "type": "sun.security.provider.SHA2$SHA256",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.JdkSslEngine"
      },
      "type": "sun.security.provider.SHA2$SHA256",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.PseudoRandomFunction"
      },
      "type": "sun.security.provider.SHA2$SHA256",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.SslContext"
      },
      "type": "sun.security.provider.SHA2$SHA256",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.SslHandler$SslTasksRunner"
      },
      "type": "sun.security.provider.SHA2$SHA256",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.util.BouncyCastleSelfSignedCertGenerator"
      },
      "type": "sun.security.provider.SHA2$SHA256",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.util.FingerprintTrustManagerFactoryBuilder"
      },
      "type": "sun.security.provider.SHA2$SHA256",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.util.OpenJdkSelfSignedCertGenerator"
      },
      "type": "sun.security.provider.SHA2$SHA256",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.util.concurrent.FastThreadLocalRunnable"
      },
      "type": "sun.security.provider.SHA2$SHA256",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.epoll.EpollEventLoop"
      },
      "type": "sun.security.provider.SHA5$SHA384",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.nio.NioEventLoop"
      },
      "type": "sun.security.provider.SHA5$SHA384",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.JdkSslEngine"
      },
      "type": "sun.security.provider.SHA5$SHA384",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.DefaultEventLoop"
      },
      "type": "sun.security.provider.SHA5$SHA512",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.epoll.EpollEventLoop"
      },
      "type": "sun.security.provider.SHA5$SHA512",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.local.LocalChannel"
      },
      "type": "sun.security.provider.SHA5$SHA512",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.nio.NioEventLoop"
      },
      "type": "sun.security.provider.SHA5$SHA512",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.oio.AbstractOioByteChannel"
      },
      "type": "sun.security.provider.SHA5$SHA512",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.JdkSslEngine"
      },
      "type": "sun.security.provider.SHA5$SHA512",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.DefaultEventLoop"
      },
      "type": "sun.security.provider.X509Factory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.epoll.AbstractEpollChannel$AbstractEpollUnsafe$1"
      },
      "type": "sun.security.provider.X509Factory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.epoll.EpollEventLoop"
      },
      "type": "sun.security.provider.X509Factory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.local.LocalChannel"
      },
      "type": "sun.security.provider.X509Factory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.nio.NioEventLoop"
      },
      "type": "sun.security.provider.X509Factory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.oio.AbstractOioByteChannel"
      },
      "type": "sun.security.provider.X509Factory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.JdkAlpnApplicationProtocolNegotiator"
      },
      "type": "sun.security.provider.X509Factory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.JdkSslContext$Defaults"
      },
      "type": "sun.security.provider.X509Factory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.OpenSslServerContext"
      },
      "type": "sun.security.provider.X509Factory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.SslContext"
      },
      "type": "sun.security.provider.X509Factory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.SslHandler$SslEngineType$2"
      },
      "type": "sun.security.provider.X509Factory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.util.LazyX509Certificate"
      },
      "type": "sun.security.provider.X509Factory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.util.SelfSignedCertificate"
      },
      "type": "sun.security.provider.X509Factory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.util.concurrent.FastThreadLocalRunnable"
      },
      "type": "sun.security.provider.X509Factory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.nio.NioEventLoop"
      },
      "type": "sun.security.provider.certpath.CollectionCertStore",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.security.cert.CertStoreParameters"
          ]
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.nio.NioEventLoop"
      },
      "type": "sun.security.provider.certpath.PKIXCertPathValidator",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.util.concurrent.FastThreadLocalRunnable"
      },
      "type": "sun.security.provider.certpath.PKIXCertPathValidator",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.nio.NioEventLoop"
      },
      "type": "sun.security.provider.certpath.SunCertPathBuilder",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.epoll.EpollEventLoop"
      },
      "type": "sun.security.rsa.PSSParameters",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.nio.NioEventLoop"
      },
      "type": "sun.security.rsa.PSSParameters",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.JdkSslEngine"
      },
      "type": "sun.security.rsa.PSSParameters",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.nio.NioEventLoop"
      },
      "type": "sun.security.rsa.RSAKeyFactory$Legacy",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.JdkSslContext$Defaults"
      },
      "type": "sun.security.rsa.RSAKeyFactory$Legacy",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.JdkSslServerContext"
      },
      "type": "sun.security.rsa.RSAKeyFactory$Legacy",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.OpenSsl"
      },
      "type": "sun.security.rsa.RSAKeyFactory$Legacy",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.OpenSslServerContext"
      },
      "type": "sun.security.rsa.RSAKeyFactory$Legacy",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.OpenSslX509KeyManagerFactory$OpenSslKeyManagerFactorySpi"
      },
      "type": "sun.security.rsa.RSAKeyFactory$Legacy",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.SslContext"
      },
      "type": "sun.security.rsa.RSAKeyFactory$Legacy",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.SslContextBuilder"
      },
      "type": "sun.security.rsa.RSAKeyFactory$Legacy",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.util.SelfSignedCertificate"
      },
      "type": "sun.security.rsa.RSAKeyFactory$Legacy",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.util.concurrent.FastThreadLocalRunnable"
      },
      "type": "sun.security.rsa.RSAKeyFactory$Legacy",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.util.SelfSignedCertificate"
      },
      "type": "sun.security.rsa.RSAKeyPairGenerator$Legacy",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.DefaultEventLoop"
      },
      "type": "sun.security.rsa.RSAPSSSignature",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.epoll.EpollEventLoop"
      },
      "type": "sun.security.rsa.RSAPSSSignature",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.local.LocalChannel"
      },
      "type": "sun.security.rsa.RSAPSSSignature",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.nio.NioEventLoop"
      },
      "type": "sun.security.rsa.RSAPSSSignature",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.oio.AbstractOioByteChannel"
      },
      "type": "sun.security.rsa.RSAPSSSignature",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.JdkSslEngine"
      },
      "type": "sun.security.rsa.RSAPSSSignature",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.SslHandler$SslTasksRunner"
      },
      "type": "sun.security.rsa.RSAPSSSignature",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.epoll.EpollEventLoop"
      },
      "type": "sun.security.rsa.RSASignature$SHA224withRSA",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.nio.NioEventLoop"
      },
      "type": "sun.security.rsa.RSASignature$SHA224withRSA",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.JdkSslEngine"
      },
      "type": "sun.security.rsa.RSASignature$SHA224withRSA",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.util.OpenJdkSelfSignedCertGenerator"
      },
      "type": "sun.security.rsa.RSASignature$SHA256withRSA",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.util.SelfSignedCertificate"
      },
      "type": "sun.security.rsa.RSASignature$SHA256withRSA",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.DefaultEventLoop"
      },
      "type": "sun.security.rsa.RSASignature$SHA512withRSA",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.epoll.EpollEventLoop"
      },
      "type": "sun.security.rsa.RSASignature$SHA512withRSA",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.local.LocalChannel"
      },
      "type": "sun.security.rsa.RSASignature$SHA512withRSA",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.nio.NioEventLoop"
      },
      "type": "sun.security.rsa.RSASignature$SHA512withRSA",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.oio.AbstractOioByteChannel"
      },
      "type": "sun.security.rsa.RSASignature$SHA512withRSA",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.OpenSslX509KeyManagerFactory"
      },
      "type": "sun.security.ssl.KeyManagerFactoryImpl$SunX509",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.SslContext"
      },
      "type": "sun.security.ssl.KeyManagerFactoryImpl$SunX509",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.OpenSslX509TrustManagerWrapper$3"
      },
      "type": "sun.security.ssl.SSLContextImpl",
      "fields": [
        {
          "name": "trustManager"
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.JdkAlpnSslUtils"
      },
      "type": "sun.security.ssl.SSLContextImpl$TLSContext",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.JdkSslClientContext"
      },
      "type": "sun.security.ssl.SSLContextImpl$TLSContext",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.JdkSslContext$Defaults"
      },
      "type": "sun.security.ssl.SSLContextImpl$TLSContext",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.JdkSslServerContext"
      },
      "type": "sun.security.ssl.SSLContextImpl$TLSContext",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.OpenSslX509TrustManagerWrapper"
      },
      "type": "sun.security.ssl.SSLContextImpl$TLSContext",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.SslUtils"
      },
      "type": "sun.security.ssl.SSLContextImpl$TLSContext",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.SslMasterKeyHandler"
      },
      "type": "sun.security.ssl.SSLSessionImpl",
      "fields": [
        {
          "name": "masterSecret"
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.JdkAlpnSslUtils"
      },
      "type": "sun.security.ssl.TrustManagerFactoryImpl$PKIXFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.JdkSslClientContext"
      },
      "type": "sun.security.ssl.TrustManagerFactoryImpl$PKIXFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.JdkSslContext$Defaults"
      },
      "type": "sun.security.ssl.TrustManagerFactoryImpl$PKIXFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.JdkSslServerContext"
      },
      "type": "sun.security.ssl.TrustManagerFactoryImpl$PKIXFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.OpenSslServerContext"
      },
      "type": "sun.security.ssl.TrustManagerFactoryImpl$PKIXFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.JdkSslContext$Defaults"
      },
      "type": "sun.security.x509.AuthorityInfoAccessExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.nio.NioEventLoop"
      },
      "type": "sun.security.x509.AuthorityKeyIdentifierExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.JdkSslContext$Defaults"
      },
      "type": "sun.security.x509.AuthorityKeyIdentifierExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.JdkSslContext$Defaults"
      },
      "type": "sun.security.x509.BasicConstraintsExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.JdkSslContext$Defaults"
      },
      "type": "sun.security.x509.CRLDistributionPointsExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.JdkSslContext$Defaults"
      },
      "type": "sun.security.x509.CertificatePoliciesExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.nio.NioEventLoop"
      },
      "type": "sun.security.x509.ExtendedKeyUsageExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.JdkSslContext$Defaults"
      },
      "type": "sun.security.x509.ExtendedKeyUsageExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.JdkSslContext$Defaults"
      },
      "type": "sun.security.x509.IssuerAlternativeNameExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.nio.NioEventLoop"
      },
      "type": "sun.security.x509.KeyUsageExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.JdkSslContext$Defaults"
      },
      "type": "sun.security.x509.KeyUsageExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.JdkSslContext$Defaults"
      },
      "type": "sun.security.x509.NetscapeCertTypeExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.JdkSslContext$Defaults"
      },
      "type": "sun.security.x509.PrivateKeyUsageExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.JdkSslContext$Defaults"
      },
      "type": "sun.security.x509.SubjectAlternativeNameExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.JdkSslContext$Defaults"
      },
      "type": "sun.security.x509.SubjectKeyIdentifierExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    }
  ],
  "resources": [
    {
      "condition": {
        "typeReached": "io.netty.util.internal.NativeLibraryLoader"
      },
      "glob": "META-INF/native/libnetty_resolver_dns_native_macos_aarch_64.jnilib"
    },
    {
      "condition": {
        "typeReached": "io.netty.util.internal.NativeLibraryLoader"
      },
      "glob": "META-INF/native/libnetty_resolver_dns_native_macos_x86_64.jnilib"
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.epoll.Native"
      },
      "glob": "META-INF/native/libnetty_transport_native_epoll_x86_64.so"
    },
    {
      "condition": {
        "typeReached": "io.netty.util.internal.NativeLibraryLoader"
      },
      "glob": "META-INF/native/libnetty_transport_native_kqueue_aarch_64.jnilib"
    },
    {
      "condition": {
        "typeReached": "io.netty.util.internal.NativeLibraryLoader"
      },
      "glob": "META-INF/native/libnetty_transport_native_kqueue_x86_64.jnilib"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.compression.Brotli"
      },
      "glob": "lib/linux-x86_64/libbrotli.so"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.compression.ZstdEncoder"
      },
      "glob": "linux/amd64/libzstd-jni-1.5.0-2.so"
    },
    {
      "condition": {
        "typeReached": "io.netty.util.internal.logging.Slf4JLoggerFactory"
      },
      "glob": "org/slf4j/impl/StaticLoggerBinder.class"
    }
  ],
  
  "bundles": [],
  "serialization": [
    {
      "condition": {
        "typeReached": "io.netty.channel.epoll.EpollEventLoop"
      },
      "type": "java.lang.String"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.marshalling.MarshallingEncoder"
      },
      "type": "java.lang.String"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.marshalling.MarshallingEncoder"
      },
      "type": "java.lang.String",
      "customTargetConstructorClass": "java.lang.Object"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.marshalling.MarshallingEncoder"
      },
      "type": "java.lang.String",
      "customTargetConstructorClass": "java.lang.String"
    },
    {
      "condition": {
        "typeReached": "io.netty.util.concurrent.FastThreadLocalRunnable"
      },
      "type": "java.lang.String"
    }
  ],
  "jni": [
    {
      "condition": {
        "typeReached": "io.netty.resolver.dns.macos.MacOSDnsServerAddressStreamProvider"
      },
      "type": "[Lio.netty.resolver.dns.macos.DnsResolver;"
    },
    {
      "condition": {
        "typeReached": "io.netty.internal.tcnative.SSL"
      },
      "type": "[Ljava.lang.String;"
    },
    {
      "condition": {
        "typeReached": "io.netty.resolver.dns.macos.MacOSDnsServerAddressStreamProvider"
      },
      "type": "[Ljava.lang.String;"
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.DefaultEventLoop"
      },
      "type": "[[B"
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.epoll.EpollEventLoop"
      },
      "type": "[[B"
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.local.LocalChannel"
      },
      "type": "[[B"
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.nio.NioEventLoop"
      },
      "type": "[[B"
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.oio.AbstractOioByteChannel"
      },
      "type": "[[B"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.SslHandler$SslEngineType$2"
      },
      "type": "[[B"
    },
    {
      "condition": {
        "typeReached": "io.netty.internal.tcnative.SSL"
      },
      "type": "[[B"
    },
    {
      "condition": {
        "typeReached": "io.netty.resolver.dns.macos.MacOSDnsServerAddressStreamProvider"
      },
      "type": "[[B"
    },
    {
      "condition": {
        "typeReached": "io.netty.util.concurrent.FastThreadLocalRunnable"
      },
      "type": "[[B"
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.udt.DefaultUdtChannelConfig"
      },
      "type": "com.barchart.udt.LingerUDT",
      "methods": [
        {
          "name": "intValue",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.codec.compression.ZstdEncoder"
      },
      "type": "com.github.luben.zstd.ZstdCompressCtx",
      "fields": [
        {
          "name": "nativePtr"
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.epoll.Native"
      },
      "type": "io.netty.channel.ChannelException"
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.kqueue.Native"
      },
      "type": "io.netty.channel.ChannelException"
    },
    {
      "condition": {
        "typeReached": "io.netty.util.internal.NativeLibraryUtil"
      },
      "type": "io.netty.channel.DefaultFileRegion",
      "fields": [
        {
          "name": "file"
        },
        {
          "name": "transferred"
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.util.internal.NativeLibraryUtil"
      },
      "type": "io.netty.channel.kqueue.BsdSocket"
    },
    {
      "condition": {
        "typeReached": "io.netty.util.internal.NativeLibraryUtil"
      },
      "type": "io.netty.channel.kqueue.KQueueEventArray"
    },
    {
      "condition": {
        "typeReached": "io.netty.util.internal.NativeLibraryUtil"
      },
      "type": "io.netty.channel.kqueue.KQueueStaticallyReferencedJniMethods"
    },
    {
      "condition": {
        "typeReached": "io.netty.util.internal.NativeLibraryUtil"
      },
      "type": "io.netty.channel.kqueue.Native"
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.epoll.Native"
      },
      "type": "io.netty.channel.unix.Buffer"
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.kqueue.Native"
      },
      "type": "io.netty.channel.unix.Buffer"
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.epoll.Native"
      },
      "type": "io.netty.channel.unix.DatagramSocketAddress",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "byte[]",
            "int",
            "int",
            "int",
            "io.netty.channel.unix.DatagramSocketAddress"
          ]
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.kqueue.Native"
      },
      "type": "io.netty.channel.unix.DatagramSocketAddress",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "byte[]",
            "int",
            "int",
            "int",
            "io.netty.channel.unix.DatagramSocketAddress"
          ]
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.epoll.Native"
      },
      "type": "io.netty.channel.unix.DomainDatagramSocketAddress",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "byte[]",
            "int",
            "io.netty.channel.unix.DomainDatagramSocketAddress"
          ]
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.kqueue.Native"
      },
      "type": "io.netty.channel.unix.DomainDatagramSocketAddress",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "byte[]",
            "int",
            "io.netty.channel.unix.DomainDatagramSocketAddress"
          ]
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.epoll.Native"
      },
      "type": "io.netty.channel.unix.ErrorsStaticallyReferencedJniMethods"
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.kqueue.Native"
      },
      "type": "io.netty.channel.unix.ErrorsStaticallyReferencedJniMethods"
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.epoll.Native"
      },
      "type": "io.netty.channel.unix.FileDescriptor"
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.kqueue.Native"
      },
      "type": "io.netty.channel.unix.FileDescriptor"
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.epoll.Native"
      },
      "type": "io.netty.channel.unix.LimitsStaticallyReferencedJniMethods"
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.kqueue.Native"
      },
      "type": "io.netty.channel.unix.LimitsStaticallyReferencedJniMethods"
    },
    {
      "condition": {
        "typeReached": "io.netty.util.internal.NativeLibraryUtil"
      },
      "type": "io.netty.channel.unix.PeerCredentials",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "int",
            "int",
            "int[]"
          ]
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.epoll.Native"
      },
      "type": "io.netty.channel.unix.Socket"
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.kqueue.Native"
      },
      "type": "io.netty.channel.unix.Socket"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.ReferenceCountedOpenSslClientContext$OpenSslClientSessionContext"
      },
      "type": "io.netty.handler.ssl.OpenSslClientSessionCache"
    },
    {
      "condition": {
        "typeReached": "io.netty.internal.tcnative.SSLContext"
      },
      "type": "io.netty.handler.ssl.OpenSslSessionCache",
      "methods": [
        {
          "name": "getSession",
          "parameterTypes": [
            "long",
            "byte[]"
          ]
        },
        {
          "name": "sessionCreated",
          "parameterTypes": [
            "long",
            "long"
          ]
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.ReferenceCountedOpenSslClientContext"
      },
      "type": "io.netty.handler.ssl.ReferenceCountedOpenSslClientContext$ExtendedTrustManagerVerifyCallback"
    },
    {
      "condition": {
        "typeReached": "io.netty.internal.tcnative.SSLContext"
      },
      "type": "io.netty.handler.ssl.ReferenceCountedOpenSslContext$AbstractCertificateVerifier",
      "methods": [
        {
          "name": "verify",
          "parameterTypes": [
            "long",
            "byte[][]",
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.ReferenceCountedOpenSslServerContext"
      },
      "type": "io.netty.handler.ssl.ReferenceCountedOpenSslServerContext$ExtendedTrustManagerVerifyCallback"
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.ReferenceCountedOpenSslServerContext"
      },
      "type": "io.netty.handler.ssl.ReferenceCountedOpenSslServerContext$OpenSslServerCertificateCallback",
      "methods": [
        {
          "name": "handle",
          "parameterTypes": [
            "long",
            "byte[]",
            "byte[][]"
          ]
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.internal.tcnative.SSLContext"
      },
      "type": "io.netty.handler.ssl.ReferenceCountedOpenSslServerContext$OpenSslSniHostnameMatcher",
      "methods": [
        {
          "name": "match",
          "parameterTypes": [
            "long",
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.util.internal.NativeLibraryUtil"
      },
      "type": "io.netty.resolver.dns.macos.DnsResolver",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.String",
            "byte[][]",
            "int",
            "java.lang.String[]",
            "java.lang.String",
            "int",
            "int"
          ]
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.util.internal.NativeLibraryUtil"
      },
      "type": "io.netty.resolver.dns.macos.MacOSDnsServerAddressStreamProvider"
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.epoll.Native"
      },
      "type": "java.io.IOException"
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.AbstractChannel"
      },
      "type": "java.lang.Boolean",
      "methods": [
        {
          "name": "getBoolean",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.udt.DefaultUdtChannelConfig"
      },
      "type": "java.lang.Boolean",
      "methods": [
        {
          "name": "booleanValue",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.udt.nio.NioUdtAcceptorChannel"
      },
      "type": "java.lang.Boolean",
      "methods": [
        {
          "name": "booleanValue",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.udt.nio.NioUdtByteConnectorChannel"
      },
      "type": "java.lang.Boolean",
      "methods": [
        {
          "name": "booleanValue",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.udt.nio.NioUdtMessageConnectorChannel"
      },
      "type": "java.lang.Boolean",
      "methods": [
        {
          "name": "booleanValue",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.udt.nio.NioUdtProvider"
      },
      "type": "java.lang.Boolean",
      "methods": [
        {
          "name": "booleanValue",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.util.AsciiString"
      },
      "type": "java.lang.Boolean",
      "methods": [
        {
          "name": "getBoolean",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.util.ResourceLeakDetector"
      },
      "type": "java.lang.Boolean",
      "methods": [
        {
          "name": "getBoolean",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.util.concurrent.AbstractEventExecutor"
      },
      "type": "java.lang.Boolean",
      "methods": [
        {
          "name": "getBoolean",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.util.concurrent.UnorderedThreadPoolEventExecutor"
      },
      "type": "java.lang.Boolean",
      "methods": [
        {
          "name": "getBoolean",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.util.internal.SocketUtils$5"
      },
      "type": "java.lang.Boolean",
      "methods": [
        {
          "name": "booleanValue",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.internal.tcnative.SSLContext"
      },
      "type": "java.lang.Exception",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.udt.DefaultUdtChannelConfig"
      },
      "type": "java.lang.Integer",
      "methods": [
        {
          "name": "intValue",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.epoll.Native"
      },
      "type": "java.lang.OutOfMemoryError"
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.epoll.Native"
      },
      "type": "java.lang.RuntimeException"
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.epoll.Native"
      },
      "type": "java.net.InetSocketAddress",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.String",
            "int"
          ]
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.epoll.Native"
      },
      "type": "java.net.PortUnreachableException"
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.epoll.Native"
      },
      "type": "java.nio.Buffer",
      "fields": [
        {
          "name": "limit"
        },
        {
          "name": "position"
        }
      ],
      "methods": [
        {
          "name": "limit",
          "parameterTypes": []
        },
        {
          "name": "position",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.epoll.Native"
      },
      "type": "java.nio.DirectByteBuffer"
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.epoll.Native"
      },
      "type": "java.nio.channels.ClosedChannelException",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.nio.NioEventLoop"
      },
      "type": "javax.net.ssl.SSLProtocolException",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.SslHandler$SslEngineType$2"
      },
      "type": "javax.net.ssl.SSLProtocolException",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.channel.nio.NioEventLoop"
      },
      "type": "org.conscrypt.ConscryptEngine",
      "methods": [
        {
          "name": "clientCertificateRequested",
          "parameterTypes": [
            "byte[]",
            "int[]",
            "byte[][]"
          ]
        },
        {
          "name": "onNewSessionEstablished",
          "parameterTypes": [
            "long"
          ]
        },
        {
          "name": "onSSLStateChange",
          "parameterTypes": [
            "int",
            "int"
          ]
        },
        {
          "name": "serverCertificateRequested",
          "parameterTypes": []
        },
        {
          "name": "verifyCertificateChain",
          "parameterTypes": [
            "byte[][]",
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.JdkSslEngine"
      },
      "type": "org.conscrypt.ConscryptEngine",
      "methods": [
        {
          "name": "onSSLStateChange",
          "parameterTypes": [
            "int",
            "int"
          ]
        }
      ]
    },
    {
      "condition": {
        "typeReached": "io.netty.handler.ssl.SslHandler$SslEngineType$2"
      },
      "type": "org.conscrypt.ConscryptEngine",
      "methods": [
        {
          "name": "onNewSessionEstablished",
          "parameterTypes": [
            "long"
          ]
        },
        {
          "name": "onSSLStateChange",
          "parameterTypes": [
            "int",
            "int"
          ]
        },
        {
          "name": "serverCertificateRequested",
          "parameterTypes": []
        },
        {
          "name": "verifyCertificateChain",
          "parameterTypes": [
            "byte[][]",
            "java.lang.String"
          ]
        }
      ]
    }
  ]
}