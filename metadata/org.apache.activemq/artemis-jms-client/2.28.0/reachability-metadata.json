{
  "reflection": [
    {
      "condition": {
        "typeReached": "org.apache.activemq.artemis.utils.uri.BeanSupport"
      },
      "type": "[B"
    },
    {
      "condition": {
        "typeReached": "org.apache.activemq.artemis.utils.uri.BeanSupport"
      },
      "type": "[C"
    },
    {
      "condition": {
        "typeReached": "org.apache.activemq.artemis.utils.uri.BeanSupport"
      },
      "type": "[D"
    },
    {
      "condition": {
        "typeReached": "org.apache.activemq.artemis.utils.uri.BeanSupport"
      },
      "type": "[F"
    },
    {
      "condition": {
        "typeReached": "org.apache.activemq.artemis.utils.uri.BeanSupport"
      },
      "type": "[I"
    },
    {
      "condition": {
        "typeReached": "org.apache.activemq.artemis.utils.uri.BeanSupport"
      },
      "type": "[J"
    },
    {
      "condition": {
        "typeReached": "org.apache.activemq.artemis.utils.uri.BeanSupport"
      },
      "type": "[Ljava.io.File;"
    },
    {
      "condition": {
        "typeReached": "org.apache.activemq.artemis.utils.uri.BeanSupport"
      },
      "type": "[Ljava.lang.Boolean;"
    },
    {
      "condition": {
        "typeReached": "org.apache.activemq.artemis.utils.uri.BeanSupport"
      },
      "type": "[Ljava.lang.Byte;"
    },
    {
      "condition": {
        "typeReached": "org.apache.activemq.artemis.utils.uri.BeanSupport"
      },
      "type": "[Ljava.lang.Character;"
    },
    {
      "condition": {
        "typeReached": "org.apache.activemq.artemis.utils.uri.BeanSupport"
      },
      "type": "[Ljava.lang.Class;"
    },
    {
      "condition": {
        "typeReached": "org.apache.activemq.artemis.utils.uri.BeanSupport"
      },
      "type": "[Ljava.lang.Double;"
    },
    {
      "condition": {
        "typeReached": "org.apache.activemq.artemis.utils.uri.BeanSupport"
      },
      "type": "[Ljava.lang.Float;"
    },
    {
      "condition": {
        "typeReached": "org.apache.activemq.artemis.utils.uri.BeanSupport"
      },
      "type": "[Ljava.lang.Integer;"
    },
    {
      "condition": {
        "typeReached": "org.apache.activemq.artemis.utils.uri.BeanSupport"
      },
      "type": "[Ljava.lang.Long;"
    },
    {
      "condition": {
        "typeReached": "org.apache.activemq.artemis.utils.uri.BeanSupport"
      },
      "type": "[Ljava.lang.Short;"
    },
    {
      "condition": {
        "typeReached": "org.apache.activemq.artemis.utils.uri.BeanSupport"
      },
      "type": "[Ljava.lang.String;"
    },
    {
      "condition": {
        "typeReached": "org.apache.activemq.artemis.utils.uri.BeanSupport"
      },
      "type": "[Ljava.math.BigDecimal;"
    },
    {
      "condition": {
        "typeReached": "org.apache.activemq.artemis.utils.uri.BeanSupport"
      },
      "type": "[Ljava.math.BigInteger;"
    },
    {
      "condition": {
        "typeReached": "org.apache.activemq.artemis.utils.uri.BeanSupport"
      },
      "type": "[Ljava.net.URL;"
    },
    {
      "condition": {
        "typeReached": "org.apache.activemq.artemis.utils.uri.BeanSupport"
      },
      "type": "[Ljava.sql.Date;"
    },
    {
      "condition": {
        "typeReached": "org.apache.activemq.artemis.utils.uri.BeanSupport"
      },
      "type": "[Ljava.sql.Time;"
    },
    {
      "condition": {
        "typeReached": "org.apache.activemq.artemis.utils.uri.BeanSupport"
      },
      "type": "[Ljava.sql.Timestamp;"
    },
    {
      "condition": {
        "typeReached": "org.apache.activemq.artemis.utils.uri.BeanSupport"
      },
      "type": "[Ljava.util.Calendar;"
    },
    {
      "condition": {
        "typeReached": "org.apache.activemq.artemis.utils.uri.BeanSupport"
      },
      "type": "[Ljava.util.Date;"
    },
    {
      "condition": {
        "typeReached": "org.apache.activemq.artemis.utils.actors.ProcessorBase"
      },
      "type": "[Ljava.util.Iterator;"
    },
    {
      "condition": {
        "typeReached": "org.apache.activemq.artemis.core.client.impl.ServerLocatorImpl"
      },
      "type": "[Lorg.apache.activemq.artemis.api.core.Pair;"
    },
    {
      "condition": {
        "typeReached": "org.apache.activemq.artemis.utils.collections.LinkedListImpl"
      },
      "type": "[Lorg.apache.activemq.artemis.utils.collections.LinkedListImpl$Iterator;"
    },
    {
      "condition": {
        "typeReached": "org.apache.activemq.artemis.utils.collections.PriorityLinkedListImpl"
      },
      "type": "[Lorg.apache.activemq.artemis.utils.collections.LinkedListImpl;"
    },
    {
      "condition": {
        "typeReached": "org.apache.activemq.artemis.utils.uri.BeanSupport"
      },
      "type": "[S"
    },
    {
      "condition": {
        "typeReached": "org.apache.activemq.artemis.utils.uri.BeanSupport"
      },
      "type": "[Z"
    },
    {
      "condition": {
        "typeReached": "org.apache.activemq.artemis.core.remoting.impl.netty.NettyConnector$1"
      },
      "type": "io.netty.channel.ChannelDuplexHandler",
      "methods": [
        {
          "name": "bind",
          "parameterTypes": [
            "io.netty.channel.ChannelHandlerContext",
            "java.net.SocketAddress",
            "io.netty.channel.ChannelPromise"
          ]
        },
        {
          "name": "close",
          "parameterTypes": [
            "io.netty.channel.ChannelHandlerContext",
            "io.netty.channel.ChannelPromise"
          ]
        },
        {
          "name": "connect",
          "parameterTypes": [
            "io.netty.channel.ChannelHandlerContext",
            "java.net.SocketAddress",
            "java.net.SocketAddress",
            "io.netty.channel.ChannelPromise"
          ]
        },
        {
          "name": "deregister",
          "parameterTypes": [
            "io.netty.channel.ChannelHandlerContext",
            "io.netty.channel.ChannelPromise"
          ]
        },
        {
          "name": "disconnect",
          "parameterTypes": [
            "io.netty.channel.ChannelHandlerContext",
            "io.netty.channel.ChannelPromise"
          ]
        },
        {
          "name": "flush",
          "parameterTypes": [
            "io.netty.channel.ChannelHandlerContext"
          ]
        },
        {
          "name": "read",
          "parameterTypes": [
            "io.netty.channel.ChannelHandlerContext"
          ]
        },
        {
          "name": "write",
          "parameterTypes": [
            "io.netty.channel.ChannelHandlerContext",
            "java.lang.Object",
            "io.netty.channel.ChannelPromise"
          ]
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.apache.activemq.artemis.core.protocol.core.impl.ActiveMQClientProtocolManager"
      },
      "type": "io.netty.channel.ChannelInboundHandlerAdapter",
      "methods": [
        {
          "name": "channelActive",
          "parameterTypes": [
            "io.netty.channel.ChannelHandlerContext"
          ]
        },
        {
          "name": "channelRegistered",
          "parameterTypes": [
            "io.netty.channel.ChannelHandlerContext"
          ]
        },
        {
          "name": "channelUnregistered",
          "parameterTypes": [
            "io.netty.channel.ChannelHandlerContext"
          ]
        },
        {
          "name": "channelWritabilityChanged",
          "parameterTypes": [
            "io.netty.channel.ChannelHandlerContext"
          ]
        },
        {
          "name": "exceptionCaught",
          "parameterTypes": [
            "io.netty.channel.ChannelHandlerContext",
            "java.lang.Throwable"
          ]
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.apache.activemq.artemis.core.remoting.impl.netty.NettyConnector"
      },
      "type": "io.netty.channel.ChannelInboundHandlerAdapter",
      "methods": [
        {
          "name": "channelActive",
          "parameterTypes": [
            "io.netty.channel.ChannelHandlerContext"
          ]
        },
        {
          "name": "channelInactive",
          "parameterTypes": [
            "io.netty.channel.ChannelHandlerContext"
          ]
        },
        {
          "name": "channelRead",
          "parameterTypes": [
            "io.netty.channel.ChannelHandlerContext",
            "java.lang.Object"
          ]
        },
        {
          "name": "channelReadComplete",
          "parameterTypes": [
            "io.netty.channel.ChannelHandlerContext"
          ]
        },
        {
          "name": "channelUnregistered",
          "parameterTypes": [
            "io.netty.channel.ChannelHandlerContext"
          ]
        },
        {
          "name": "channelWritabilityChanged",
          "parameterTypes": [
            "io.netty.channel.ChannelHandlerContext"
          ]
        },
        {
          "name": "userEventTriggered",
          "parameterTypes": [
            "io.netty.channel.ChannelHandlerContext",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.apache.activemq.artemis.core.remoting.impl.netty.NettyConnector$1"
      },
      "type": "io.netty.channel.ChannelInboundHandlerAdapter",
      "methods": [
        {
          "name": "channelRegistered",
          "parameterTypes": [
            "io.netty.channel.ChannelHandlerContext"
          ]
        },
        {
          "name": "channelUnregistered",
          "parameterTypes": [
            "io.netty.channel.ChannelHandlerContext"
          ]
        },
        {
          "name": "userEventTriggered",
          "parameterTypes": [
            "io.netty.channel.ChannelHandlerContext",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.apache.activemq.artemis.core.remoting.impl.netty.NettyConnector"
      },
      "type": "io.netty.channel.ChannelInitializer",
      "methods": [
        {
          "name": "channelRegistered",
          "parameterTypes": [
            "io.netty.channel.ChannelHandlerContext"
          ]
        },
        {
          "name": "exceptionCaught",
          "parameterTypes": [
            "io.netty.channel.ChannelHandlerContext",
            "java.lang.Throwable"
          ]
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.apache.activemq.artemis.core.remoting.impl.netty.CheckDependencies"
      },
      "type": "io.netty.channel.DefaultFileRegion"
    },
    {
      "condition": {
        "typeReached": "org.apache.activemq.artemis.core.remoting.impl.netty.NettyConnector"
      },
      "type": "io.netty.channel.socket.nio.NioSocketChannel",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.apache.activemq.artemis.core.remoting.impl.netty.CheckDependencies"
      },
      "type": "io.netty.channel.unix.PeerCredentials"
    },
    {
      "condition": {
        "typeReached": "org.apache.activemq.artemis.core.protocol.core.impl.ActiveMQClientProtocolManager"
      },
      "type": "io.netty.handler.codec.ByteToMessageDecoder",
      "methods": [
        {
          "name": "channelInactive",
          "parameterTypes": [
            "io.netty.channel.ChannelHandlerContext"
          ]
        },
        {
          "name": "channelRead",
          "parameterTypes": [
            "io.netty.channel.ChannelHandlerContext",
            "java.lang.Object"
          ]
        },
        {
          "name": "channelReadComplete",
          "parameterTypes": [
            "io.netty.channel.ChannelHandlerContext"
          ]
        },
        {
          "name": "userEventTriggered",
          "parameterTypes": [
            "io.netty.channel.ChannelHandlerContext",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.apache.activemq.artemis.utils.uri.URISchema"
      },
      "type": "javax.jms.ConnectionFactory"
    },
    {
      "condition": {
        "typeReached": "org.apache.activemq.artemis.utils.uri.URISchema"
      },
      "type": "javax.jms.XAConnectionFactory"
    },
    {
      "condition": {
        "typeReached": "org.apache.activemq.artemis.uri.schema.serverLocator.TCPServerLocatorSchema"
      },
      "type": "org.apache.activemq.artemis.api.core.client.ServerLocator"
    },
    {
      "condition": {
        "typeReached": "org.apache.activemq.artemis.core.client.impl.ServerLocatorImpl$3"
      },
      "type": "org.apache.activemq.artemis.api.core.client.loadbalance.RoundRobinConnectionLoadBalancingPolicy",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.apache.activemq.artemis.logs.BundleFactory"
      },
      "type": "org.apache.activemq.artemis.core.client.ActiveMQClientMessageBundle_impl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.slf4j.Logger"
          ]
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.apache.activemq.artemis.uri.schema.serverLocator.TCPServerLocatorSchema"
      },
      "type": "org.apache.activemq.artemis.core.client.impl.ServerLocatorImpl"
    },
    {
      "condition": {
        "typeReached": "org.apache.activemq.artemis.uri.schema.serverLocator.TCPServerLocatorSchema"
      },
      "type": "org.apache.activemq.artemis.core.client.impl.ServerLocatorInternal"
    },
    {
      "condition": {
        "typeReached": "org.apache.activemq.artemis.uri.schema.serverLocator.TCPServerLocatorSchema"
      },
      "type": "org.apache.activemq.artemis.core.cluster.DiscoveryListener"
    },
    {
      "condition": {
        "typeReached": "org.apache.activemq.artemis.core.remoting.impl.netty.NettyConnector$1"
      },
      "type": "org.apache.activemq.artemis.core.remoting.impl.netty.ActiveMQChannelHandler",
      "methods": [
        {
          "name": "channelActive",
          "parameterTypes": [
            "io.netty.channel.ChannelHandlerContext"
          ]
        },
        {
          "name": "channelInactive",
          "parameterTypes": [
            "io.netty.channel.ChannelHandlerContext"
          ]
        },
        {
          "name": "channelRead",
          "parameterTypes": [
            "io.netty.channel.ChannelHandlerContext",
            "java.lang.Object"
          ]
        },
        {
          "name": "channelReadComplete",
          "parameterTypes": [
            "io.netty.channel.ChannelHandlerContext"
          ]
        },
        {
          "name": "channelWritabilityChanged",
          "parameterTypes": [
            "io.netty.channel.ChannelHandlerContext"
          ]
        },
        {
          "name": "exceptionCaught",
          "parameterTypes": [
            "io.netty.channel.ChannelHandlerContext",
            "java.lang.Throwable"
          ]
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.apache.activemq.artemis.core.protocol.core.impl.ActiveMQClientProtocolManager"
      },
      "type": "org.apache.activemq.artemis.core.remoting.impl.netty.ActiveMQFrameDecoder2"
    },
    {
      "condition": {
        "typeReached": "org.apache.activemq.artemis.core.remoting.impl.netty.NettyConnector"
      },
      "type": "org.apache.activemq.artemis.core.remoting.impl.netty.NettyConnector$1"
    },
    {
      "condition": {
        "typeReached": "org.apache.activemq.artemis.core.remoting.impl.netty.NettyConnector$1"
      },
      "type": "org.apache.activemq.artemis.core.remoting.impl.netty.NettyConnector$ActiveMQClientChannelHandler"
    },
    {
      "condition": {
        "typeReached": "org.apache.activemq.artemis.core.client.impl.ClientSessionFactoryImpl$2"
      },
      "type": "org.apache.activemq.artemis.core.remoting.impl.netty.NettyConnectorFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.apache.activemq.artemis.utils.uri.BeanSupport"
      },
      "type": "org.apache.activemq.artemis.jms.client.ActiveMQConnectionFactory",
      "methods": [
        {
          "name": "getCallFailoverTimeout",
          "parameterTypes": []
        },
        {
          "name": "getCallTimeout",
          "parameterTypes": []
        },
        {
          "name": "getClientFailureCheckPeriod",
          "parameterTypes": []
        },
        {
          "name": "getClientID",
          "parameterTypes": []
        },
        {
          "name": "getConfirmationWindowSize",
          "parameterTypes": []
        },
        {
          "name": "getConnectionLoadBalancingPolicyClassName",
          "parameterTypes": []
        },
        {
          "name": "getConnectionTTL",
          "parameterTypes": []
        },
        {
          "name": "getConsumerMaxRate",
          "parameterTypes": []
        },
        {
          "name": "getConsumerWindowSize",
          "parameterTypes": []
        },
        {
          "name": "getDeserializationBlackList",
          "parameterTypes": []
        },
        {
          "name": "getDeserializationWhiteList",
          "parameterTypes": []
        },
        {
          "name": "getDupsOKBatchSize",
          "parameterTypes": []
        },
        {
          "name": "getFactoryType",
          "parameterTypes": []
        },
        {
          "name": "getGroupID",
          "parameterTypes": []
        },
        {
          "name": "getIncomingInterceptorList",
          "parameterTypes": []
        },
        {
          "name": "getInitialConnectAttempts",
          "parameterTypes": []
        },
        {
          "name": "getInitialMessagePacketSize",
          "parameterTypes": []
        },
        {
          "name": "getMaxRetryInterval",
          "parameterTypes": []
        },
        {
          "name": "getMinLargeMessageSize",
          "parameterTypes": []
        },
        {
          "name": "getOutgoingInterceptorList",
          "parameterTypes": []
        },
        {
          "name": "getPassword",
          "parameterTypes": []
        },
        {
          "name": "getPasswordCodec",
          "parameterTypes": []
        },
        {
          "name": "getProducerMaxRate",
          "parameterTypes": []
        },
        {
          "name": "getProducerWindowSize",
          "parameterTypes": []
        },
        {
          "name": "getProtocolManagerFactoryStr",
          "parameterTypes": []
        },
        {
          "name": "getReconnectAttempts",
          "parameterTypes": []
        },
        {
          "name": "getRetryInterval",
          "parameterTypes": []
        },
        {
          "name": "getRetryIntervalMultiplier",
          "parameterTypes": []
        },
        {
          "name": "getScheduledThreadPoolMaxSize",
          "parameterTypes": []
        },
        {
          "name": "getThreadPoolMaxSize",
          "parameterTypes": []
        },
        {
          "name": "getTransactionBatchSize",
          "parameterTypes": []
        },
        {
          "name": "getUser",
          "parameterTypes": []
        },
        {
          "name": "isAutoGroup",
          "parameterTypes": []
        },
        {
          "name": "isBlockOnAcknowledge",
          "parameterTypes": []
        },
        {
          "name": "isBlockOnDurableSend",
          "parameterTypes": []
        },
        {
          "name": "isBlockOnNonDurableSend",
          "parameterTypes": []
        },
        {
          "name": "isCacheDestinations",
          "parameterTypes": []
        },
        {
          "name": "isCacheLargeMessagesClient",
          "parameterTypes": []
        },
        {
          "name": "isCompressLargeMessage",
          "parameterTypes": []
        },
        {
          "name": "isEnable1xPrefixes",
          "parameterTypes": []
        },
        {
          "name": "isEnableSharedClientID",
          "parameterTypes": []
        },
        {
          "name": "isFailoverOnInitialConnection",
          "parameterTypes": []
        },
        {
          "name": "isHA",
          "parameterTypes": []
        },
        {
          "name": "isIgnoreJTA",
          "parameterTypes": []
        },
        {
          "name": "isPreAcknowledge",
          "parameterTypes": []
        },
        {
          "name": "isUseGlobalPools",
          "parameterTypes": []
        },
        {
          "name": "isUseTopologyForLoadBalancing",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.apache.activemq.artemis.utils.uri.URISchema"
      },
      "type": "org.apache.activemq.artemis.jms.client.ActiveMQConnectionFactory"
    },
    {
      "condition": {
        "typeReached": "org.apache.activemq.artemis.utils.uri.URISchema"
      },
      "type": "org.apache.activemq.artemis.jms.client.ConnectionFactoryOptions"
    },
    {
      "condition": {
        "typeReached": "org.apache.activemq.artemis.utils.uri.URISchema"
      },
      "type": "org.apache.activemq.artemis.jndi.JNDIStorable"
    },
    {
      "condition": {
        "typeReached": "org.apache.activemq.artemis.logs.AuditLogger"
      },
      "type": "org.apache.activemq.artemis.logs.AuditLogger_impl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.slf4j.Logger"
          ]
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.apache.activemq.artemis.utils.uri.BeanSupport"
      },
      "type": "org.apache.activemq.artemis.spi.core.protocol.ProtocolManager"
    },
    {
      "condition": {
        "typeReached": "org.apache.activemq.artemis.uri.schema.serverLocator.AbstractServerLocatorSchema"
      },
      "type": "org.apache.activemq.artemis.uri.schema.serverLocator.ConnectionOptions",
      "methods": [
        {
          "name": "setHost",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setPort",
          "parameterTypes": [
            "int"
          ]
        }
      ]
    }
  ],
  "resources": [
    {
      "condition": {
        "typeReached": "org.apache.activemq.artemis.spi.core.remoting.ssl.OpenSSLContextFactoryProvider"
      },
      "glob": "META-INF/services/org.apache.activemq.artemis.spi.core.remoting.ssl.OpenSSLContextFactory"
    },
    {
      "condition": {
        "typeReached": "org.apache.activemq.artemis.spi.core.remoting.ssl.SSLContextFactoryProvider"
      },
      "glob": "META-INF/services/org.apache.activemq.artemis.spi.core.remoting.ssl.SSLContextFactory"
    },
    {
      "condition": {
        "typeReached": "org.apache.activemq.artemis.utils.VersionLoader"
      },
      "glob": "activemq-version.properties"
    }
  ],
  
  "bundles": []
}