{
  "reflection": [
    {
      "condition": {
        "typeReached": "org.apache.kafka.clients.consumer.ConsumerPartitionAssignor"
      },
      "type": "org.apache.kafka.clients.consumer.CooperativeStickyAssignor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.apache.kafka.clients.consumer.ConsumerPartitionAssignor"
      },
      "type": "org.apache.kafka.clients.consumer.RangeAssignor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.apache.kafka.clients.consumer.ConsumerPartitionAssignor"
      },
      "type": "org.apache.kafka.clients.consumer.RoundRobinAssignor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.apache.kafka.clients.consumer.ConsumerPartitionAssignor"
      },
      "type": "org.apache.kafka.clients.consumer.StickyAssignor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.apache.kafka.clients.producer.KafkaProducer"
      },
      "type": "org.apache.kafka.clients.producer.RoundRobinPartitioner",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.apache.kafka.common.utils.Utils"
      },
      "type": "org.apache.kafka.common.metrics.JmxReporter",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.apache.kafka.common.security.authenticator.LoginManager"
      },
      "type": "org.apache.kafka.common.security.authenticator.AbstractLogin$DefaultLoginCallbackHandler",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.apache.kafka.common.security.authenticator.LoginManager"
      },
      "type": "org.apache.kafka.common.security.authenticator.DefaultLogin",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.apache.kafka.common.network.SaslChannelBuilder"
      },
      "type": "org.apache.kafka.common.security.authenticator.SaslClientCallbackHandler",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.apache.kafka.common.security.authenticator.AbstractLogin"
      },
      "type": "org.apache.kafka.common.security.plain.PlainLoginModule",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.apache.kafka.common.security.authenticator.AbstractLogin"
      },
      "type": "org.apache.kafka.common.security.scram.ScramLoginModule",
      "allDeclaredMethods": true,
      "allDeclaredConstructors": true
    },
    {
      "condition": {
        "typeReached": "org.apache.kafka.common.security.scram.internals.ScramSaslClientProvider"
      },
      "type": "org.apache.kafka.common.security.scram.internals.ScramSaslClient$ScramSaslClientFactory",
      "allDeclaredMethods": true,
      "allDeclaredConstructors": true
    },
    {
      "condition": {
        "typeReached": "org.apache.kafka.clients.consumer.KafkaConsumer"
      },
      "type": "org.apache.kafka.common.serialization.BooleanDeserializer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.apache.kafka.clients.producer.KafkaProducer"
      },
      "type": "org.apache.kafka.common.serialization.BooleanSerializer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.apache.kafka.clients.consumer.KafkaConsumer"
      },
      "type": "org.apache.kafka.common.serialization.ByteArrayDeserializer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.apache.kafka.clients.producer.KafkaProducer"
      },
      "type": "org.apache.kafka.common.serialization.ByteArraySerializer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.apache.kafka.clients.consumer.KafkaConsumer"
      },
      "type": "org.apache.kafka.common.serialization.ByteBufferDeserializer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.apache.kafka.clients.producer.KafkaProducer"
      },
      "type": "org.apache.kafka.common.serialization.ByteBufferSerializer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.apache.kafka.clients.consumer.KafkaConsumer"
      },
      "type": "org.apache.kafka.common.serialization.BytesDeserializer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.apache.kafka.clients.producer.KafkaProducer"
      },
      "type": "org.apache.kafka.common.serialization.BytesSerializer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.apache.kafka.clients.consumer.KafkaConsumer"
      },
      "type": "org.apache.kafka.common.serialization.DoubleDeserializer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.apache.kafka.clients.producer.KafkaProducer"
      },
      "type": "org.apache.kafka.common.serialization.DoubleSerializer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.apache.kafka.clients.consumer.KafkaConsumer"
      },
      "type": "org.apache.kafka.common.serialization.FloatDeserializer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.apache.kafka.clients.producer.KafkaProducer"
      },
      "type": "org.apache.kafka.common.serialization.FloatSerializer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.apache.kafka.clients.consumer.KafkaConsumer"
      },
      "type": "org.apache.kafka.common.serialization.IntegerDeserializer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.apache.kafka.clients.producer.KafkaProducer"
      },
      "type": "org.apache.kafka.common.serialization.IntegerSerializer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.apache.kafka.clients.consumer.KafkaConsumer"
      },
      "type": "org.apache.kafka.common.serialization.ListDeserializer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.apache.kafka.clients.producer.KafkaProducer"
      },
      "type": "org.apache.kafka.common.serialization.ListSerializer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.apache.kafka.clients.consumer.KafkaConsumer"
      },
      "type": "org.apache.kafka.common.serialization.LongDeserializer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.apache.kafka.clients.producer.KafkaProducer"
      },
      "type": "org.apache.kafka.common.serialization.LongSerializer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.apache.kafka.common.serialization.ListDeserializer"
      },
      "type": "org.apache.kafka.common.serialization.Serdes$BooleanSerde",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.apache.kafka.common.serialization.ListSerializer"
      },
      "type": "org.apache.kafka.common.serialization.Serdes$BooleanSerde",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.apache.kafka.common.serialization.ListSerializer"
      },
      "type": "org.apache.kafka.common.serialization.Serdes$ByteArraySerde",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.apache.kafka.common.serialization.ListSerializer"
      },
      "type": "org.apache.kafka.common.serialization.Serdes$ByteBufferSerde",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.apache.kafka.common.serialization.ListSerializer"
      },
      "type": "org.apache.kafka.common.serialization.Serdes$BytesSerde",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.apache.kafka.common.serialization.ListSerializer"
      },
      "type": "org.apache.kafka.common.serialization.Serdes$DoubleSerde",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.apache.kafka.common.serialization.ListSerializer"
      },
      "type": "org.apache.kafka.common.serialization.Serdes$FloatSerde",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.apache.kafka.common.serialization.ListSerializer"
      },
      "type": "org.apache.kafka.common.serialization.Serdes$IntegerSerde",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.apache.kafka.common.serialization.ListSerializer"
      },
      "type": "org.apache.kafka.common.serialization.Serdes$LongSerde",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.apache.kafka.common.serialization.ListSerializer"
      },
      "type": "org.apache.kafka.common.serialization.Serdes$ShortSerde",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.apache.kafka.common.serialization.ListSerializer"
      },
      "type": "org.apache.kafka.common.serialization.Serdes$StringSerde",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.apache.kafka.common.serialization.ListSerializer"
      },
      "type": "org.apache.kafka.common.serialization.Serdes$UUIDSerde",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.apache.kafka.common.serialization.ListSerializer"
      },
      "type": "org.apache.kafka.common.serialization.Serdes$VoidSerde",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.apache.kafka.clients.consumer.KafkaConsumer"
      },
      "type": "org.apache.kafka.common.serialization.ShortDeserializer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.apache.kafka.clients.producer.KafkaProducer"
      },
      "type": "org.apache.kafka.common.serialization.ShortSerializer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.apache.kafka.clients.consumer.KafkaConsumer"
      },
      "type": "org.apache.kafka.common.serialization.StringDeserializer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.apache.kafka.clients.producer.KafkaProducer"
      },
      "type": "org.apache.kafka.common.serialization.StringSerializer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.apache.kafka.clients.consumer.KafkaConsumer"
      },
      "type": "org.apache.kafka.common.serialization.UUIDDeserializer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.apache.kafka.clients.producer.KafkaProducer"
      },
      "type": "org.apache.kafka.common.serialization.UUIDSerializer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.apache.kafka.clients.consumer.KafkaConsumer"
      },
      "type": "org.apache.kafka.common.serialization.VoidDeserializer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.apache.kafka.clients.producer.KafkaProducer"
      },
      "type": "org.apache.kafka.common.serialization.VoidSerializer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.apache.kafka.common.utils.AppInfoParser"
      },
      "type": "org.apache.kafka.common.utils.AppInfoParser$AppInfo"
    },
    {
      "condition": {
        "typeReached": "org.apache.kafka.common.utils.AppInfoParser"
      },
      "type": "org.apache.kafka.common.utils.AppInfoParser$AppInfoMBean"
    }
  ]
}