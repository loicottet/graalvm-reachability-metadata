{
  "reflection": [
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.constraintvalidators.bv.money.DecimalMaxValidatorForMonetaryAmount"
      },
      "type": "[B"
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.constraintvalidators.bv.money.DecimalMaxValidatorForMonetaryAmount"
      },
      "type": "[C"
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.constraintvalidators.bv.money.DecimalMaxValidatorForMonetaryAmount"
      },
      "type": "[D"
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.constraintvalidators.bv.money.DecimalMaxValidatorForMonetaryAmount"
      },
      "type": "[F"
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.constraintvalidators.bv.money.DecimalMaxValidatorForMonetaryAmount"
      },
      "type": "[I"
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.constraintvalidators.bv.money.DecimalMaxValidatorForMonetaryAmount"
      },
      "type": "[J"
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "[Ljava.lang.Object;"
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.metadata.descriptor.CrossParameterDescriptorImpl"
      },
      "type": "[Ljava.lang.Object;"
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.xml.mapping.ConstrainedMethodStaxBuilder"
      },
      "type": "[Ljava.lang.Object;"
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.xml.mapping.CrossParameterStaxBuilder"
      },
      "type": "[Ljava.lang.Object;"
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.constraintvalidators.bv.money.DecimalMaxValidatorForMonetaryAmount"
      },
      "type": "[Ljava.lang.String;"
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.xml.mapping.ConstrainedMethodStaxBuilder"
      },
      "type": "[Ljava.lang.String;"
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.spi.scripting.ScriptEngineScriptEvaluator"
      },
      "type": "[Ljava.lang.String;"
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.constraintvalidators.bv.money.DecimalMaxValidatorForMonetaryAmount"
      },
      "type": "[S"
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.constraintvalidators.bv.money.DecimalMaxValidatorForMonetaryAmount"
      },
      "type": "[Z"
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.xml.mapping.ConstrainedMethodStaxBuilder"
      },
      "type": "[[Ljava.lang.String;"
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.constraintvalidators.bv.money.DecimalMaxValidatorForMonetaryAmount"
      },
      "type": "com.fasterxml.jackson.core.JsonParser"
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.constraintvalidators.bv.money.DecimalMaxValidatorForMonetaryAmount"
      },
      "type": "com.fasterxml.jackson.databind.JsonNode"
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.constraintvalidators.bv.money.DecimalMaxValidatorForMonetaryAmount"
      },
      "type": "com.fasterxml.jackson.databind.ObjectMapper"
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator"
      },
      "type": "com.sun.el.ExpressionFactoryImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.util.privilegedactions.NewSchema"
      },
      "type": "com.sun.org.apache.xerces.internal.impl.dv.xs.SchemaDVFactoryImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.xml.config.ValidationXmlParser"
      },
      "type": "com.sun.org.apache.xerces.internal.impl.dv.xs.SchemaDVFactoryImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.xml.mapping.MappingXmlParser"
      },
      "type": "com.sun.org.apache.xerces.internal.impl.dv.xs.SchemaDVFactoryImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.xml.XmlParserHelper"
      },
      "type": "com.sun.xml.internal.stream.XMLInputFactoryImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.spi.scripting.ScriptEngineScriptEvaluator"
      },
      "type": "groovy.grape.GrabAnnotationTransformation",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.constraintvalidators.hv.ParameterScriptAssertValidator"
      },
      "type": "groovy.lang.Script"
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory"
      },
      "type": "groovy.lang.Script"
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.spi.scripting.ScriptEngineScriptEvaluator"
      },
      "type": "groovyjarjarantlr.CommonToken"
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.util.logging.Log_$logger"
      },
      "type": "jakarta.el.CompositeELResolver"
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.resolver.TraversableResolvers"
      },
      "type": "jakarta.persistence.Persistence",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "getPersistenceUtil",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.metadata.provider.ProgrammaticMetaDataProvider"
      },
      "type": "jakarta.validation.constraints.Email"
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.metadata.provider.ProgrammaticMetaDataProvider"
      },
      "type": "jakarta.validation.constraints.Future"
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.cfg.context.FieldConstraintMappingContextImpl"
      },
      "type": "jakarta.validation.constraints.Min"
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "jakarta.validation.constraints.Min"
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.xml.mapping.ConstrainedGetterStaxBuilder"
      },
      "type": "jakarta.validation.constraints.Min"
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "jakarta.validation.constraints.NotEmpty"
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.metadata.provider.ProgrammaticMetaDataProvider"
      },
      "type": "jakarta.validation.constraints.NotEmpty"
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.cfg.context.DefaultConstraintMapping"
      },
      "type": "jakarta.validation.constraints.NotNull"
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.cfg.context.GetterConstraintMappingContextImpl"
      },
      "type": "jakarta.validation.constraints.NotNull"
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.cfg.context.ParameterConstraintMappingContextImpl"
      },
      "type": "jakarta.validation.constraints.NotNull"
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.cfg.context.TypeConstraintMappingContextImpl"
      },
      "type": "jakarta.validation.constraints.NotNull"
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "jakarta.validation.constraints.NotNull"
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.metadata.provider.ProgrammaticMetaDataProvider"
      },
      "type": "jakarta.validation.constraints.NotNull"
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.util.annotation.ConstraintAnnotationDescriptor$Builder"
      },
      "type": "jakarta.validation.constraints.NotNull",
      "methods": [
        {
          "name": "groups",
          "parameterTypes": []
        },
        {
          "name": "message",
          "parameterTypes": []
        },
        {
          "name": "payload",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.xml.mapping.ConstrainedFieldStaxBuilder"
      },
      "type": "jakarta.validation.constraints.NotNull"
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.xml.mapping.ConstrainedGetterStaxBuilder"
      },
      "type": "jakarta.validation.constraints.NotNull"
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.xml.mapping.ConstrainedParameterStaxBuilder"
      },
      "type": "jakarta.validation.constraints.NotNull"
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "jakarta.validation.constraints.Pattern"
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.xml.mapping.ConstrainedFieldStaxBuilder"
      },
      "type": "jakarta.validation.constraints.Pattern"
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.cfg.context.ParameterConstraintMappingContextImpl"
      },
      "type": "jakarta.validation.constraints.Size"
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.metadata.provider.ProgrammaticMetaDataProvider"
      },
      "type": "jakarta.validation.constraints.Size"
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.xml.mapping.ConstrainedFieldStaxBuilder"
      },
      "type": "jakarta.validation.constraints.Size"
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.xml.mapping.ConstrainedGetterStaxBuilder"
      },
      "type": "jakarta.validation.constraints.Size"
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.constraintvalidators.bv.money.DecimalMaxValidatorForMonetaryAmount"
      },
      "type": "java.io.ObjectInputStream"
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "java.io.Serializable",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.metadata.PredefinedScopeBeanMetaDataManager"
      },
      "type": "java.io.Serializable",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.constraintvalidators.bv.money.DecimalMaxValidatorForMonetaryAmount"
      },
      "type": "java.lang.Boolean",
      "fields": [
        {
          "name": "TYPE"
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.constraintvalidators.bv.money.DecimalMaxValidatorForMonetaryAmount"
      },
      "type": "java.lang.Byte",
      "fields": [
        {
          "name": "TYPE"
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.constraintvalidators.bv.money.DecimalMaxValidatorForMonetaryAmount"
      },
      "type": "java.lang.Character",
      "fields": [
        {
          "name": "TYPE"
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.resourceloading.PlatformResourceBundleLocator"
      },
      "type": "java.lang.Class",
      "methods": [
        {
          "name": "getModule",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "java.lang.Comparable",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.metadata.PredefinedScopeBeanMetaDataManager"
      },
      "type": "java.lang.Comparable",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.constraintvalidators.bv.money.DecimalMaxValidatorForMonetaryAmount"
      },
      "type": "java.lang.Deprecated"
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.constraintvalidators.bv.money.DecimalMaxValidatorForMonetaryAmount"
      },
      "type": "java.lang.Double",
      "fields": [
        {
          "name": "TYPE"
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "java.lang.Double",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.metadata.PredefinedScopeBeanMetaDataManager"
      },
      "type": "java.lang.Enum",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.constraintvalidators.bv.money.DecimalMaxValidatorForMonetaryAmount"
      },
      "type": "java.lang.Float",
      "fields": [
        {
          "name": "TYPE"
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.constraintvalidators.bv.money.DecimalMaxValidatorForMonetaryAmount"
      },
      "type": "java.lang.Integer",
      "fields": [
        {
          "name": "TYPE"
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.xml.mapping.ConstrainedMethodStaxBuilder"
      },
      "type": "java.lang.Integer"
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.constraintvalidators.bv.money.DecimalMaxValidatorForMonetaryAmount"
      },
      "type": "java.lang.Long",
      "fields": [
        {
          "name": "TYPE"
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.xml.mapping.ConstrainedMethodStaxBuilder"
      },
      "type": "java.lang.Long"
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.resourceloading.PlatformResourceBundleLocator"
      },
      "type": "java.lang.Module",
      "methods": [
        {
          "name": "isNamed",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "java.lang.Number",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.constraintvalidators.bv.money.DecimalMaxValidatorForMonetaryAmount"
      },
      "type": "java.lang.Object",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorFactoryImpl"
      },
      "type": "java.lang.Object"
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.metadata.BeanMetaDataManagerImpl"
      },
      "type": "java.lang.Object"
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.metadata.PredefinedScopeBeanMetaDataManager"
      },
      "type": "java.lang.Object"
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.metadata.provider.AnnotationMetaDataProvider"
      },
      "type": "java.lang.Object",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.util.annotation.AnnotationProxy"
      },
      "type": "java.lang.Object",
      "methods": [
        {
          "name": "hashCode",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "java.lang.Record",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.constraintvalidators.bv.money.DecimalMaxValidatorForMonetaryAmount"
      },
      "type": "java.lang.Short",
      "fields": [
        {
          "name": "TYPE"
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.constraintvalidators.bv.money.DecimalMaxValidatorForMonetaryAmount"
      },
      "type": "java.lang.StackTraceElement"
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.constraintvalidators.bv.money.DecimalMaxValidatorForMonetaryAmount"
      },
      "type": "java.lang.String"
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.xml.mapping.ConstrainedMethodStaxBuilder"
      },
      "type": "java.lang.String"
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.constraintvalidators.bv.money.DecimalMaxValidatorForMonetaryAmount"
      },
      "type": "java.lang.Void",
      "fields": [
        {
          "name": "TYPE"
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.spi.scripting.ScriptEngineScriptEvaluator"
      },
      "type": "java.lang.annotation.Annotation"
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "java.lang.constant.Constable",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.metadata.PredefinedScopeBeanMetaDataManager"
      },
      "type": "java.lang.constant.Constable",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "java.lang.constant.ConstantDesc",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.util.logging.Log_$logger"
      },
      "type": "java.lang.reflect.Method"
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "java.lang.reflect.Proxy",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.constraintvalidators.bv.money.DecimalMaxValidatorForMonetaryAmount"
      },
      "type": "java.math.BigDecimal"
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.constraintvalidators.bv.money.DecimalMaxValidatorForMonetaryAmount"
      },
      "type": "java.math.BigInteger"
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.xml.mapping.ConstrainedMethodStaxBuilder"
      },
      "type": "java.time.LocalDate"
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.constraintvalidators.bv.money.DecimalMaxValidatorForMonetaryAmount"
      },
      "type": "java.util.Date"
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.metadata.PredefinedScopeBeanMetaDataManager"
      },
      "type": "java.util.Iterator",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.xml.mapping.ConstrainedMethodStaxBuilder"
      },
      "type": "java.util.List"
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.xml.mapping.ConstrainedMethodStaxBuilder"
      },
      "type": "java.util.Map"
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.xml.mapping.ConstrainedMethodStaxBuilder"
      },
      "type": "java.util.Optional"
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.constraintvalidators.bv.money.DecimalMaxValidatorForMonetaryAmount"
      },
      "type": "java.util.PropertyPermission",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.String",
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.constraintvalidators.bv.money.DecimalMaxValidatorForMonetaryAmount"
      },
      "type": "java.util.logging.LogManager",
      "methods": [
        {
          "name": "getLoggingMXBean",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.constraintvalidators.bv.money.DecimalMaxValidatorForMonetaryAmount"
      },
      "type": "java.util.logging.LoggingMXBean"
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.valueextraction.ValueExtractorManager"
      },
      "type": "javafx.beans.value.ObservableValue"
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.metadata.core.ConstraintHelper"
      },
      "type": "javax.money.MonetaryAmount"
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.util.logging.Log_$logger"
      },
      "type": "jdk.internal.reflect.DelegatingMethodAccessorImpl"
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.util.logging.Log_$logger"
      },
      "type": "jdk.internal.reflect.NativeMethodAccessorImpl"
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.constraintvalidators.bv.money.DecimalMaxValidatorForMonetaryAmount"
      },
      "type": "jdk.management.jfr.ConfigurationInfo"
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.constraintvalidators.bv.money.DecimalMaxValidatorForMonetaryAmount"
      },
      "type": "jdk.management.jfr.EventTypeInfo"
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.constraintvalidators.bv.money.DecimalMaxValidatorForMonetaryAmount"
      },
      "type": "jdk.management.jfr.FlightRecorderMXBean"
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.constraintvalidators.bv.money.DecimalMaxValidatorForMonetaryAmount"
      },
      "type": "jdk.management.jfr.FlightRecorderMXBeanImpl"
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.constraintvalidators.bv.money.DecimalMaxValidatorForMonetaryAmount"
      },
      "type": "jdk.management.jfr.RecordingInfo"
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.constraintvalidators.bv.money.DecimalMaxValidatorForMonetaryAmount"
      },
      "type": "jdk.management.jfr.SettingDescriptorInfo"
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.spi.scripting.ScriptEngineScriptEvaluator"
      },
      "type": "org.codehaus.groovy.antlr.GroovySourceAST",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.spi.scripting.ScriptEngineScriptEvaluator"
      },
      "type": "org.codehaus.groovy.ast.builder.AstBuilderTransformation",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.constraintvalidators.hv.ParameterScriptAssertValidator"
      },
      "type": "org.codehaus.groovy.runtime.ScriptBytecodeAdapter"
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.util.logging.Log_$logger"
      },
      "type": "org.glassfish.expressly.ValueExpressionImpl"
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.util.logging.Log_$logger"
      },
      "type": "org.glassfish.expressly.parser.AstValue"
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.xml.config.ValidationBootstrapParameters"
      },
      "type": "org.hibernate.validator.HibernateValidator"
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.util.privilegedactions.GetDeclaredMethodHandle"
      },
      "type": "org.hibernate.validator.cfg.AnnotationDef",
      "methods": [
        {
          "name": "createAnnotationDescriptor",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.metadata.provider.ProgrammaticMetaDataProvider"
      },
      "type": "org.hibernate.validator.constraints.Range"
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.constraints.ScriptAssert"
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.metadata.aggregated.ClassMetaData$Builder"
      },
      "type": "org.hibernate.validator.constraints.ScriptAssert"
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.metadata.provider.ProgrammaticMetaDataProvider"
      },
      "type": "org.hibernate.validator.constraints.URL"
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.constraintvalidators.RegexpURLValidator",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.engine.HibernateValidatorEnhancedBean",
      "allDeclaredFields": true
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.AssertFalseValidator",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.AssertTrueValidator",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.DigitsValidatorForCharSequence",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.DigitsValidatorForNumber",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.EmailValidator",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.NotBlankValidator",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.NotNullValidator",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.NullValidator",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.PatternValidator",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.money.CurrencyValidatorForMonetaryAmount",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.money.DecimalMaxValidatorForMonetaryAmount",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.money.DecimalMinValidatorForMonetaryAmount",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.money.DigitsValidatorForMonetaryAmount",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.money.MaxValidatorForMonetaryAmount",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.money.MinValidatorForMonetaryAmount",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.money.NegativeOrZeroValidatorForMonetaryAmount",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.money.NegativeValidatorForMonetaryAmount",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.money.PositiveOrZeroValidatorForMonetaryAmount",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.money.PositiveValidatorForMonetaryAmount",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.notempty.NotEmptyValidatorForArray",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.notempty.NotEmptyValidatorForArraysOfBoolean",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.notempty.NotEmptyValidatorForArraysOfByte",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.notempty.NotEmptyValidatorForArraysOfChar",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.notempty.NotEmptyValidatorForArraysOfDouble",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.notempty.NotEmptyValidatorForArraysOfFloat",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.notempty.NotEmptyValidatorForArraysOfInt",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.notempty.NotEmptyValidatorForArraysOfLong",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.notempty.NotEmptyValidatorForArraysOfShort",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.notempty.NotEmptyValidatorForCharSequence",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.notempty.NotEmptyValidatorForCollection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.notempty.NotEmptyValidatorForMap",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.MaxValidatorForBigDecimal",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.MaxValidatorForBigInteger",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.MaxValidatorForByte",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.MaxValidatorForCharSequence",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.MaxValidatorForDouble",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.MaxValidatorForFloat",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.MaxValidatorForInteger",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.MaxValidatorForLong",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.MaxValidatorForNumber",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.MaxValidatorForShort",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.MinValidatorForBigDecimal",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.MinValidatorForBigInteger",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.MinValidatorForByte",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.MinValidatorForCharSequence",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.MinValidatorForDouble",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.MinValidatorForFloat",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.MinValidatorForInteger",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.MinValidatorForLong",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.MinValidatorForNumber",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.MinValidatorForShort",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.decimal.DecimalMaxValidatorForBigDecimal",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.decimal.DecimalMaxValidatorForBigInteger",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.decimal.DecimalMaxValidatorForByte",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.decimal.DecimalMaxValidatorForCharSequence",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.decimal.DecimalMaxValidatorForDouble",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.decimal.DecimalMaxValidatorForFloat",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.decimal.DecimalMaxValidatorForInteger",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.decimal.DecimalMaxValidatorForLong",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.decimal.DecimalMaxValidatorForNumber",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.decimal.DecimalMaxValidatorForShort",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.decimal.DecimalMinValidatorForBigDecimal",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.decimal.DecimalMinValidatorForBigInteger",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.decimal.DecimalMinValidatorForByte",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.decimal.DecimalMinValidatorForCharSequence",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.decimal.DecimalMinValidatorForDouble",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.decimal.DecimalMinValidatorForFloat",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.decimal.DecimalMinValidatorForInteger",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.decimal.DecimalMinValidatorForLong",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.decimal.DecimalMinValidatorForNumber",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.number.bound.decimal.DecimalMinValidatorForShort",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.number.sign.NegativeOrZeroValidatorForBigDecimal",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.number.sign.NegativeOrZeroValidatorForBigInteger",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.number.sign.NegativeOrZeroValidatorForByte",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.number.sign.NegativeOrZeroValidatorForCharSequence",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.number.sign.NegativeOrZeroValidatorForDouble",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.number.sign.NegativeOrZeroValidatorForFloat",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.number.sign.NegativeOrZeroValidatorForInteger",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.number.sign.NegativeOrZeroValidatorForLong",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.number.sign.NegativeOrZeroValidatorForNumber",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.number.sign.NegativeOrZeroValidatorForShort",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.number.sign.NegativeValidatorForBigDecimal",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.number.sign.NegativeValidatorForBigInteger",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.number.sign.NegativeValidatorForByte",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.number.sign.NegativeValidatorForCharSequence",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.number.sign.NegativeValidatorForDouble",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.number.sign.NegativeValidatorForFloat",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.number.sign.NegativeValidatorForInteger",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.number.sign.NegativeValidatorForLong",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.number.sign.NegativeValidatorForNumber",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.number.sign.NegativeValidatorForShort",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.number.sign.PositiveOrZeroValidatorForBigDecimal",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.number.sign.PositiveOrZeroValidatorForBigInteger",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.number.sign.PositiveOrZeroValidatorForByte",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.number.sign.PositiveOrZeroValidatorForCharSequence",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.number.sign.PositiveOrZeroValidatorForDouble",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.number.sign.PositiveOrZeroValidatorForFloat",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.number.sign.PositiveOrZeroValidatorForInteger",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.number.sign.PositiveOrZeroValidatorForLong",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.number.sign.PositiveOrZeroValidatorForNumber",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.number.sign.PositiveOrZeroValidatorForShort",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.number.sign.PositiveValidatorForBigDecimal",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.number.sign.PositiveValidatorForBigInteger",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.number.sign.PositiveValidatorForByte",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.number.sign.PositiveValidatorForCharSequence",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.number.sign.PositiveValidatorForDouble",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.number.sign.PositiveValidatorForFloat",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.number.sign.PositiveValidatorForInteger",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.number.sign.PositiveValidatorForLong",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.number.sign.PositiveValidatorForNumber",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.number.sign.PositiveValidatorForShort",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.size.SizeValidatorForArray",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.size.SizeValidatorForArraysOfBoolean",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.size.SizeValidatorForArraysOfByte",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.size.SizeValidatorForArraysOfChar",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.size.SizeValidatorForArraysOfDouble",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.size.SizeValidatorForArraysOfFloat",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.size.SizeValidatorForArraysOfInt",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.size.SizeValidatorForArraysOfLong",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.size.SizeValidatorForArraysOfShort",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.size.SizeValidatorForCharSequence",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.size.SizeValidatorForCollection",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.size.SizeValidatorForMap",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.time.future.FutureValidatorForCalendar",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.time.future.FutureValidatorForDate",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.time.future.FutureValidatorForHijrahDate",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.time.future.FutureValidatorForInstant",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.time.future.FutureValidatorForJapaneseDate",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.time.future.FutureValidatorForLocalDate",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.time.future.FutureValidatorForLocalDateTime",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.time.future.FutureValidatorForLocalTime",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.time.future.FutureValidatorForMinguoDate",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.time.future.FutureValidatorForMonthDay",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.time.future.FutureValidatorForOffsetDateTime",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.time.future.FutureValidatorForOffsetTime",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.time.future.FutureValidatorForReadableInstant",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.time.future.FutureValidatorForReadablePartial",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.time.future.FutureValidatorForThaiBuddhistDate",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.time.future.FutureValidatorForYear",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.time.future.FutureValidatorForYearMonth",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.time.future.FutureValidatorForZonedDateTime",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.time.futureorpresent.FutureOrPresentValidatorForCalendar",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.time.futureorpresent.FutureOrPresentValidatorForDate",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.time.futureorpresent.FutureOrPresentValidatorForHijrahDate",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.time.futureorpresent.FutureOrPresentValidatorForInstant",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.time.futureorpresent.FutureOrPresentValidatorForJapaneseDate",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.time.futureorpresent.FutureOrPresentValidatorForLocalDate",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.time.futureorpresent.FutureOrPresentValidatorForLocalDateTime",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.time.futureorpresent.FutureOrPresentValidatorForLocalTime",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.time.futureorpresent.FutureOrPresentValidatorForMinguoDate",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.time.futureorpresent.FutureOrPresentValidatorForMonthDay",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.time.futureorpresent.FutureOrPresentValidatorForOffsetDateTime",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.time.futureorpresent.FutureOrPresentValidatorForOffsetTime",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.time.futureorpresent.FutureOrPresentValidatorForReadableInstant",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.time.futureorpresent.FutureOrPresentValidatorForReadablePartial",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.time.futureorpresent.FutureOrPresentValidatorForThaiBuddhistDate",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.time.futureorpresent.FutureOrPresentValidatorForYear",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.time.futureorpresent.FutureOrPresentValidatorForYearMonth",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.time.futureorpresent.FutureOrPresentValidatorForZonedDateTime",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.time.past.PastValidatorForCalendar",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.time.past.PastValidatorForDate",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.time.past.PastValidatorForHijrahDate",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.time.past.PastValidatorForInstant",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.time.past.PastValidatorForJapaneseDate",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.time.past.PastValidatorForLocalDate",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.time.past.PastValidatorForLocalDateTime",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.time.past.PastValidatorForLocalTime",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.time.past.PastValidatorForMinguoDate",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.time.past.PastValidatorForMonthDay",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.time.past.PastValidatorForOffsetDateTime",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.time.past.PastValidatorForOffsetTime",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.time.past.PastValidatorForReadableInstant",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.time.past.PastValidatorForReadablePartial",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.time.past.PastValidatorForThaiBuddhistDate",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.time.past.PastValidatorForYear",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.time.past.PastValidatorForYearMonth",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.time.past.PastValidatorForZonedDateTime",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.time.pastorpresent.PastOrPresentValidatorForCalendar",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.time.pastorpresent.PastOrPresentValidatorForDate",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.time.pastorpresent.PastOrPresentValidatorForHijrahDate",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.time.pastorpresent.PastOrPresentValidatorForInstant",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.time.pastorpresent.PastOrPresentValidatorForJapaneseDate",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.time.pastorpresent.PastOrPresentValidatorForLocalDate",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.time.pastorpresent.PastOrPresentValidatorForLocalDateTime",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.time.pastorpresent.PastOrPresentValidatorForLocalTime",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.time.pastorpresent.PastOrPresentValidatorForMinguoDate",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.time.pastorpresent.PastOrPresentValidatorForMonthDay",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.time.pastorpresent.PastOrPresentValidatorForOffsetDateTime",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.time.pastorpresent.PastOrPresentValidatorForOffsetTime",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.time.pastorpresent.PastOrPresentValidatorForReadableInstant",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.time.pastorpresent.PastOrPresentValidatorForReadablePartial",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.time.pastorpresent.PastOrPresentValidatorForThaiBuddhistDate",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.time.pastorpresent.PastOrPresentValidatorForYear",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.time.pastorpresent.PastOrPresentValidatorForYearMonth",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.bv.time.pastorpresent.PastOrPresentValidatorForZonedDateTime",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.hv.CodePointLengthValidator",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.hv.EANValidator",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.hv.EmailValidator",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.hv.ISBNValidator",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.hv.LengthValidator",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.hv.LuhnCheckValidator",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.hv.Mod10CheckValidator",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.hv.Mod11CheckValidator",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.hv.ModCheckValidator",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.hv.NormalizedValidator",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.hv.NotBlankValidator",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.hv.ParameterScriptAssertValidator",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.hv.ScriptAssertValidator",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.hv.URLValidator",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.hv.UniqueElementsValidator",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.hv.br.CNPJValidator",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.hv.br.CPFValidator",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.hv.pl.NIPValidator",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.hv.pl.PESELValidator",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.hv.pl.REGONValidator",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.hv.ru.INNValidator",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.hv.time.DurationMaxValidator",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.ValidatorImpl"
      },
      "type": "org.hibernate.validator.internal.constraintvalidators.hv.time.DurationMinValidator",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.util.logging.Log_$logger"
      },
      "type": "org.hibernate.validator.internal.engine.messageinterpolation.el.BeanPropertiesELResolver"
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.util.logging.Log_$logger"
      },
      "type": "org.hibernate.validator.internal.engine.messageinterpolation.el.NoOpElResolver"
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.util.logging.Log_$logger"
      },
      "type": "org.hibernate.validator.internal.engine.messageinterpolation.el.RootResolver"
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.engine.resolver.TraversableResolvers"
      },
      "type": "org.hibernate.validator.internal.engine.resolver.JPATraversableResolver",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.util.logging.LoggerFactory"
      },
      "type": "org.hibernate.validator.internal.util.logging.Log_$logger",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.jboss.logging.Logger"
          ]
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.util.logging.Messages"
      },
      "type": "org.hibernate.validator.internal.util.logging.Messages_$bundle",
      "fields": [
        {
          "name": "INSTANCE"
        }
      ]
    },
    {
      "condition": {
        "typeReached": "org.hibernate.validator.internal.metadata.core.ConstraintHelper"
      },
      "type": "org.joda.time.ReadableInstant"
    }
  ],
  "resources": [],
  
  "bundles": [
    {
      "name": "org.hibernate.validator.ValidationMessages"
    }
  ]
}